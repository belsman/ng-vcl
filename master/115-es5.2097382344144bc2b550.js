!function(){"use strict";function n(n,l){if(!(n instanceof l))throw new TypeError("Cannot call a class as a function")}(self.webpackChunkng_vcl=self.webpackChunkng_vcl||[]).push([[115],{98115:function(l,t,o){o.r(t),o.d(t,{InputDemoModule:function(){return w},demo:function(){return A}});var e,c=o(16274),u=o(24988),a=o(95454),r=o(36196),i=o(62518),p=o(84271),v=o(89902),d=o(30429),f=o(67811),s=o(81332),g=o(4001),m=o(852),b=o(57120),Z=o(86729),x=((e=function l(){n(this,l),this.data1=""}).\u0275fac=function(n){return new(n||e)},e.\u0275cmp=p.Xpm({type:e,selectors:[["ng-component"]],decls:43,vars:8,consts:[["vclInput","",3,"ngModel","ngModelChange"],["vclInput","","autoselect","true"],["icon","mdi:email"],["vcl-button","","square",""],["icon","mdi:close"],["vclInput","","value","readonly",3,"readonly"],["vclInput","","value","disabled",3,"disabled"],["vclInput","","rows","3"],["vclInput","",3,"autogrow","minRows","maxRows"],["vclInput","",3,"disabled"]],template:function(n,l){1&n&&(p.TgZ(0,"vcl-form-control-group"),p.TgZ(1,"vcl-label"),p._uU(2,"Basic input"),p.qZA(),p.TgZ(3,"vcl-input-field"),p.TgZ(4,"input",0),p.NdJ("ngModelChange",function(n){return l.data1=n}),p.qZA(),p.qZA(),p.qZA(),p.TgZ(5,"vcl-form-control-group"),p.TgZ(6,"vcl-label"),p._uU(7,"Input (autoselect)"),p.qZA(),p.TgZ(8,"vcl-input-field"),p._UZ(9,"input",1),p.qZA(),p.qZA(),p.TgZ(10,"vcl-form-control-group"),p.TgZ(11,"vcl-label"),p._uU(12,"Email"),p.qZA(),p.TgZ(13,"vcl-input-field"),p._UZ(14,"vcl-icon",2),p.TgZ(15,"input",0),p.NdJ("ngModelChange",function(n){return l.data1=n}),p.qZA(),p.TgZ(16,"button",3),p._UZ(17,"vcl-icon",4),p.qZA(),p.qZA(),p.qZA(),p.TgZ(18,"vcl-form-control-group"),p.TgZ(19,"vcl-label"),p._uU(20,"Readonly input"),p.qZA(),p.TgZ(21,"vcl-input-field"),p._UZ(22,"input",5),p.qZA(),p.qZA(),p.TgZ(23,"vcl-form-control-group"),p.TgZ(24,"vcl-label"),p._uU(25,"Disabled input"),p.qZA(),p.TgZ(26,"vcl-input-field"),p._UZ(27,"input",6),p.qZA(),p.qZA(),p.TgZ(28,"vcl-form-control-group"),p.TgZ(29,"vcl-label"),p._uU(30,"textarea"),p.qZA(),p.TgZ(31,"vcl-input-field"),p._UZ(32,"textarea",7),p.qZA(),p.qZA(),p.TgZ(33,"vcl-form-control-group"),p.TgZ(34,"vcl-label"),p._uU(35,"Autogrowing textarea"),p.qZA(),p.TgZ(36,"vcl-input-field"),p._UZ(37,"textarea",8),p.qZA(),p.qZA(),p.TgZ(38,"vcl-form-control-group"),p.TgZ(39,"vcl-label"),p._uU(40,"Disabled textarea"),p.qZA(),p.TgZ(41,"vcl-input-field"),p._UZ(42,"textarea",9),p.qZA(),p.qZA()),2&n&&(p.xp6(4),p.Q6J("ngModel",l.data1),p.xp6(11),p.Q6J("ngModel",l.data1),p.xp6(7),p.Q6J("readonly",!0),p.xp6(5),p.Q6J("disabled",!0),p.xp6(10),p.Q6J("autogrow",!0)("minRows",5)("maxRows",10),p.xp6(5),p.Q6J("disabled",!0))},directives:[v.o,d._T,f.q8,s.q,g.V,u.Fj,u.JJ,u.On,m.o,b.r,Z.b],encapsulation:2}),e);function A(){return{label:"Input",tabs:{Demo:x,"README.md":{type:"md",content:'# input\n\nEnhanced text input\n\n## Usage\n\n```js\nimport { VCLInputModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLInputModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Basic textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [(ngModel)]="data1" [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n```\n\n### API\n\n#### input[vclInput] attributes\n\nName            | Type    | Default | Description\n--------------- | ------- | ------- | -----------------------------------------------\n`disabled`      | boolean | false   | Disables the input when true\n`autoselect`    | boolean | false   | Selects text on focus\n\n\n#### textarea[vclInput] Attributes\n\n| Name                | Type        | Default            | Description\n| ------------        | ----------- | ------------------ |--------------\n| `autogrow`          | boolean     | false              | Adjusts the `rows` attribute so it matches the current values number of lines\n| `minRows`           | number      |                    | The min value for `rows` when using autogrow\n| `maxRows`           | number      |                    | The max value for `rows` when using autogrow\n| `autoselect`        | boolean     | false              | Selects text on focus\n'},"demo.component.html":{type:"html",content:o(98838)},"demo.component.ts":{type:"ts",content:o(85678)}}}}var w=function(){var l=function l(){n(this,l)};return l.\u0275fac=function(n){return new(n||l)},l.\u0275mod=p.oAB({type:l}),l.\u0275inj=p.cJS({imports:[[c.ez,u.u5,i.l,r.WdB,r.NhM,r.V4c,a.Bz.forChild([{path:"",component:i.z,data:{demo:A}}])]]}),l}()},98838:function(n,l,t){t.r(l),l.default='<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Input (autoselect)</vcl-label>\n  <vcl-input-field>\n    <input vclInput autoselect=true />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Email</vcl-label>\n  <vcl-input-field>\n    <vcl-icon icon="mdi:email"></vcl-icon>\n    <input vclInput [(ngModel)]="data1" />\n    <button vcl-button square>\n      <vcl-icon icon="mdi:close"></vcl-icon>\n    </button>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Readonly input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'readonly\' [readonly]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'disabled\' [disabled]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput rows="3"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Autogrowing textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [disabled]="true"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},85678:function(n,l,t){t.r(l),l.default="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class InputDemoComponent {\n  data1 = '';\n}\n"}}])}();