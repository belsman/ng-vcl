"use strict";(self.webpackChunkng_vcl_demo=self.webpackChunkng_vcl_demo||[]).push([[520],{7674:(s,i,e)=>{e.r(i),e.d(i,{SpinnerDemoModule:()=>S,demo:()=>v});var p=e(9808),d=e(2382),g=e(4161),c=e(8934),u=e(9155),n=e(4893),h=e(1355),M=e(5550),f=e(1300),C=e(2007),T=e(1441),Z=e(1435);let D=(()=>{class o{constructor(){this.data1=0,this.data2=0}}return o.\u0275fac=function(r){return new(r||o)},o.\u0275cmp=n.Xpm({type:o,selectors:[["ng-component"]],decls:23,vars:8,consts:[[1,"spinner"],[3,"ngModel","ngModelChange"],["direction","horizontal",3,"ngModel","ngModelChange"],[3,"spinner"],["vclInput","","type","number",3,"ngModel","ngModelChange"]],template:function(r,t){1&r&&(n.TgZ(0,"h3"),n._uU(1,"Vertical"),n.qZA(),n.TgZ(2,"div",0)(3,"vcl-spinner",1),n.NdJ("ngModelChange",function(l){return t.data1=l}),n.qZA()(),n.TgZ(4,"h3"),n._uU(5,"Horizontal"),n.qZA(),n.TgZ(6,"vcl-spinner",2),n.NdJ("ngModelChange",function(l){return t.data2=l}),n.qZA(),n.TgZ(7,"h3"),n._uU(8,"Vertical inside input"),n.qZA(),n.TgZ(9,"vcl-form-control-group",3)(10,"vcl-label"),n._uU(11,"Vertical inside input"),n.qZA(),n.TgZ(12,"vcl-input-field")(13,"input",4),n.NdJ("ngModelChange",function(l){return t.data1=l}),n.qZA()(),n.TgZ(14,"vcl-spinner",1),n.NdJ("ngModelChange",function(l){return t.data1=l}),n.qZA()(),n.TgZ(15,"h3"),n._uU(16,"Horizontal inside input"),n.qZA(),n.TgZ(17,"vcl-form-control-group",3)(18,"vcl-label"),n._uU(19,"Horizontal inside input"),n.qZA(),n.TgZ(20,"vcl-input-field")(21,"input",4),n.NdJ("ngModelChange",function(l){return t.data2=l}),n.qZA()(),n.TgZ(22,"vcl-spinner",2),n.NdJ("ngModelChange",function(l){return t.data2=l}),n.qZA()()),2&r&&(n.xp6(3),n.Q6J("ngModel",t.data1),n.xp6(3),n.Q6J("ngModel",t.data2),n.xp6(3),n.Q6J("spinner",!0),n.xp6(4),n.Q6J("ngModel",t.data1),n.xp6(1),n.Q6J("ngModel",t.data1),n.xp6(3),n.Q6J("spinner",!0),n.xp6(4),n.Q6J("ngModel",t.data2),n.xp6(1),n.Q6J("ngModel",t.data2))},directives:[h.O,d.JJ,d.On,M.o,f._T,C.q8,T.q,Z.V,d.wV,d.Fj],encapsulation:2}),o})();function v(){return{label:"Spinner",tabs:{Demo:D,"README.md":{type:"md",content:'# vcl-spinner\n\n`vcl-spinner` is a simple spinner element with 2 buttons where one increments the provided value, the other decrements.\n\n## Usage\n\n```js\nimport { VCLSpinnerModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [VCLSpinnerModule],\n  ...\n})\nexport class AppComponent {\n}\n```\n\n### Basic spinner\n\n```html\n<vcl-spinner [(ngModel)]="value"></vcl-spinner>\n```\n\n### Spinner inside input\n\n```html\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Sample</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="value" type="number"/>\n  </vcl-input-field>\n  <vcl-spinner [(ngModel)]="value"></vcl-spinner>\n</vcl-form-control-group>\n```\n\n### API\n\n#### vcl-spinner square attributes\n\n| Name                | Type           | Default  | Description\n| ------------        |----------------| -------- |------------\n| `direction`         | \'horizontal\' \\| \'vertical\'     | \'vertical\' | Direction the buttons are placed in\n\n'},"demo.component.html":{type:"html",content:e(1119)},"demo.component.ts":{type:"ts",content:e(3238)}}}}let S=(()=>{class o{}return o.\u0275fac=function(r){return new(r||o)},o.\u0275mod=n.oAB({type:o}),o.\u0275inj=n.cJS({imports:[[p.ez,d.u5,u.l,c.WdB,c.LZz,c.NhM,c.V4c,g.Bz.forChild([{path:"",component:u.z,data:{demo:v}}])]]}),o})()},1119:(s,i,e)=>{e.r(i),e.d(i,{default:()=>p});const p='<h3>Vertical</h3>\n\n<div class="spinner">\n  <vcl-spinner [(ngModel)]="data1"></vcl-spinner>\n</div>\n\n<h3>Horizontal</h3>\n\n<vcl-spinner [(ngModel)]="data2" direction="horizontal"></vcl-spinner>\n\n<h3>Vertical inside input</h3>\n\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Vertical inside input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" type="number" />\n  </vcl-input-field>\n  <vcl-spinner [(ngModel)]="data1"></vcl-spinner>\n</vcl-form-control-group>\n\n<h3>Horizontal inside input</h3>\n\n<vcl-form-control-group [spinner]="true">\n  <vcl-label>Horizontal inside input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data2" type="number" />\n  </vcl-input-field>\n  <vcl-spinner [(ngModel)]="data2" direction="horizontal"></vcl-spinner>\n</vcl-form-control-group>\n'},3238:(s,i,e)=>{e.r(i),e.d(i,{default:()=>p});const p="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class SpinnerDemoComponent {\n  data1 = 0;\n  data2 = 0;\n}\n"}}]);