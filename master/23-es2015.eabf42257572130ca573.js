(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"+GMj":function(s,a){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">novalidate</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"formGroup"</span> #<span class="hljs-attr">form</span>=<span class="hljs-string">"ngForm"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form"</span> (<span class="hljs-attr">submit</span>)=<span class="hljs-string">"onSubmit()"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Create a hero<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Name<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Name of the hero"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Name is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"minlength"</span>&gt;</span>Name must have a length of at least 2 characters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Description<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Description of the hero"</span> [<span class="hljs-attr">autogrow</span>]=<span class="hljs-string">"true"</span> [<span class="hljs-attr">minRows</span>]=<span class="hljs-string">"3"</span> [<span class="hljs-attr">maxRows</span>]=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Date of Birth<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-datepicker</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"dob"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"MM/DD/YYYY"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-calendar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-calendar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-datepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Date of Birth is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n  \n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Password<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-password-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Enter password"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-password-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Password is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>Password must... <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- have at least 8 characters in length<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a lowercase letters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a uppercase letters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a number<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a special character<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Level<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">demo-counter</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"level"</span> [<span class="hljs-attr">min</span>]=<span class="hljs-string">"1"</span> [<span class="hljs-attr">max</span>]=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">demo-counter</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"level &gt;= 5"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Leader<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-flip-switch</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"leader"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-flip-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Picture<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-file-input</span> [<span class="hljs-attr">multiple</span>]=<span class="hljs-string">"false"</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"picture"</span>&gt;</span>Picture of the hero<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-file-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Email<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-embedded-input-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclPrepend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:envelope"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"email"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-embedded-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Email is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"email"</span>&gt;</span>Invalid Email address<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Gender<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-group</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"gender"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"m"</span>&gt;</span>Male<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>\n          Male\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:mars"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"f"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>\n          Female\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:venus"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"g"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>\n          Genderless\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:genderless"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>You must select a gender<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Alignment<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-button-group</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"alignment"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'good\'"</span>&gt;</span>Good<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'neutral\'"</span>&gt;</span>Neutral<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'evil\'"</span>&gt;</span>Evil<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-button-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>You must select an alignment<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Class<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"class"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'warrior\'"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Warrior<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'mage\'"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Mage<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'Rogue\'"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>rogue<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Hit points<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-slider</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"hitpoints"</span> [<span class="hljs-attr">min</span>]=<span class="hljs-string">"5"</span> [<span class="hljs-attr">max</span>]=<span class="hljs-string">"20"</span> [<span class="hljs-attr">scale</span>]=<span class="hljs-string">"16"</span> [<span class="hljs-attr">lock</span>]=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-slider</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>Skills<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Strength (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"strengthRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"strength"</span> #<span class="hljs-attr">strengthRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Agility (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"agilityRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"agility"</span> #<span class="hljs-attr">agilityRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Intelligence (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"intelligenceRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"intelligence"</span> #<span class="hljs-attr">intelligenceRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"!form.hasError(\'skills\') &amp;&amp; skillPointsAvailable === 0"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-warning</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"!form.hasError(\'skills\') &amp;&amp; skillPointsAvailable &gt; 0"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-warning</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"form.hasError(\'skills\')"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Perks<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Select perks"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"perks"</span>  <span class="hljs-attr">selectionMode</span>=<span class="hljs-string">"multiple"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'snakeeater\'"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Snake Eater<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>It gives you a 25% increase to your poison resistance.\t<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'swiftlearner\'"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Swift Learner<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>Swift Learner\tWhenever you gain experience, you\'ll receive 5% more experience per level of the perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'toughness\'"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Toughness<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>It adds 10% to your general damage resistance per level.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'explorer\'"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-label</span>&gt;</span>Explorer<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-label</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>You\'ll get more random encounters with this perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-sublabel</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span> \n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"perks"</span>&gt;</span>You must select two perks<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclCheckboxLabel</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-checkbox</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"terms"</span> [<span class="hljs-attr">errorStateAgent</span>]=<span class="hljs-string">"termsErrorStateAgent"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-checkbox</span>&gt;</span>\n      Agree to our terms<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint</span>&gt;</span>Read the <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"\'https://github.com/ng-vcl/ng-vcl\'"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"\'_blank\'"</span>&gt;</span>terms<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> to learn how we collect, use and share your data<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"termsDisagree"</span>&gt;</span>You must agree to our Terms<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loose-button-group"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"emphasized"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"onReset()"</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"value"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>Form<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>status: {{ form.status }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>valid: {{ form.valid }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>dirty: {{ form.dirty }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>submitted: {{ form.submitted }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>touched: {{ form.touched }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>pristine: {{ form.pristine }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>errors: {{ form.errors | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>value: {{ form.value | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n  '},"L79/":function(s,a,l){"use strict";l.r(a);var n=l("ofXK"),t=l("3Pt+"),p=l("tyNb"),e=l("19H1"),c=l("2FIb"),r=l("fXoL"),o=l("xsjC"),h=l("7FAN"),i=l("p31x"),g=l("1/Kn"),j=l("QI9E"),m=l("q1D+"),b=l("jPeI"),u=l("VSXH"),v=l("5gLr"),d=l("f0Vy"),f=l("DMRj"),y=l("nj5o"),w=l("9Rb9"),k=l("LpWs"),S=l("EaCA"),R=l("8Ii/"),C=l("btmi"),A=l("Vp9f"),F=l("ErXM"),N=l("6B8K"),q=l("zDo1"),x=l("StUX"),P=l("AS2X"),G=l("R+ME"),V=l("ySGC"),L=l("SQVY"),M=l("I9Sx"),E=l("qjyM"),I=l("AXxg"),D=l("TzFS");const Y=["form"];function B(s,a){1&s&&(r.Sb(0,"vcl-form-control-group"),r.Sb(1,"label",2),r.yc(2,"Leader"),r.Rb(),r.Nb(3,"vcl-flip-switch",47),r.Rb())}function H(s,a){if(1&s&&(r.Sb(0,"vcl-hint"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}function z(s,a){if(1&s&&(r.Sb(0,"vcl-hint-warning"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}function $(s,a){if(1&s&&(r.Sb(0,"vcl-hint-error"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}let X=(()=>{class s{constructor(s){this.notifier=s,this.skillPointsMax=10,this.defaultValues={level:1,leader:!1,hitpoints:10,strength:3,agility:3,intelligence:3,perks:[]},this.formGroup=new t.j({name:new t.g("",[t.F.required,t.F.minLength(2)]),description:new t.g("",[]),dob:new t.g(null,[t.F.required]),password:new t.g("",[t.F.required,t.F.pattern("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}")]),picture:new t.g(null,[]),level:new t.g(this.defaultValues.level,[]),leader:new t.g(this.defaultValues.leader,[]),email:new t.g("",[t.F.email]),terms:new t.g(!1,[s=>s.value?null:{termsDisagree:!0}]),gender:new t.g(null,t.F.required),class:new t.g(null,[t.F.required]),alignment:new t.g(null,[t.F.required]),hitpoints:new t.g(this.defaultValues.hitpoints,[t.F.min(1),t.F.max(100)]),strength:new t.g(this.defaultValues.strength,[t.F.min(1),t.F.max(10)]),agility:new t.g(this.defaultValues.agility,[t.F.min(1),t.F.max(10)]),intelligence:new t.g(this.defaultValues.intelligence,[t.F.min(1),t.F.max(10)]),perks:new t.g(this.defaultValues.perks,[this.validatePerks.bind(this)])},[this.validateSkills.bind(this)]),this.termsErrorStateAgent=(s,a)=>s&&a&&a.ngControl&&a.ngControl.invalid&&s.submitted}get level(){const s=this.formGroup&&this.formGroup.get("level");return s?s.value:0}get skillPoints(){const s=this.formGroup&&this.formGroup.get("strength"),a=this.formGroup&&this.formGroup.get("agility"),l=this.formGroup&&this.formGroup.get("intelligence");return s&&a&&l?s.value+a.value+l.value:0}get skillPointsAvailable(){return this.skillPointsMax-this.skillPoints}validateSkills(s){return this.skillPoints>this.skillPointsMax?{skills:!0}:null}validatePerks(s){return Array.isArray(s.value)&&2===s.value.length?null:{perks:!0}}onSubmit(){this.formGroup.valid?this.notifier.success("Hero created"):this.notifier.error("Hero invalid")}onReset(){this.form.resetForm(this.defaultValues),this.notifier.info("Hero reset")}}return s.\u0275fac=function(a){return new(a||s)(r.Mb(e.u))},s.\u0275cmp=r.Gb({type:s,selectors:[["ng-component"]],viewQuery:function(s,a){var l;1&s&&r.Dc(Y,!0),2&s&&r.mc(l=r.bc())&&(a.form=l.first)},decls:241,vars:41,consts:[["novalidate","",1,"form",3,"formGroup","submit"],["form","ngForm"],["vclFormControlLabel",""],["vclInput","","formControlName","name","placeholder","Name of the hero"],["error","required"],["error","minlength"],["vclInput","","formControlName","description","placeholder","Description of the hero",3,"autogrow","minRows","maxRows"],["formControlName","dob","placeholder","MM/DD/YYYY"],["vclInput","","formControlName","password","placeholder","Enter password"],["error","pattern"],["formControlName","level",3,"min","max"],[4,"ngIf"],["formControlName","picture",3,"multiple"],["vclPrepend","","icon","fas:envelope"],["vclInput","","formControlName","email"],["error","email"],["formControlName","gender"],["vclRadioButtonLabel",""],["value","m"],["vclAppend","","icon","fas:mars"],["value","f"],["vclAppend","","icon","fas:venus"],["value","g"],["vclAppend","","icon","fas:genderless"],["formControlName","alignment"],["vcl-button","",3,"value"],["formControlName","class"],[3,"value"],["formControlName","hitpoints",3,"min","max","scale","lock"],[3,"target"],["formControlName","strength"],["strengthRating","vclRating"],["formControlName","agility"],["agilityRating","vclRating"],["formControlName","intelligence"],["intelligenceRating","vclRating"],["placeholder","Select perks"],["formControlName","perks","selectionMode","multiple"],["error","perks"],["vclCheckboxLabel",""],["formControlName","terms",3,"errorStateAgent"],["href","'https://github.com/ng-vcl/ng-vcl'","target","'_blank'"],["error","termsDisagree"],[1,"loose-button-group"],["vcl-button","","type","submit",1,"emphasized"],["vcl-button","","type","button",3,"click"],[1,"value"],["formControlName","leader"]],template:function(s,a){if(1&s&&(r.Sb(0,"form",0,1),r.ac("submit",(function(){return a.onSubmit()})),r.Sb(2,"h2"),r.yc(3,"Create a hero"),r.Rb(),r.Sb(4,"vcl-form-control-group"),r.Sb(5,"label",2),r.yc(6,"Name"),r.Nb(7,"vcl-required"),r.Rb(),r.Nb(8,"input",3),r.Sb(9,"vcl-hint-error",4),r.yc(10,"Name is required"),r.Rb(),r.Sb(11,"vcl-hint-error",5),r.yc(12,"Name must have a length of at least 2 characters"),r.Rb(),r.Rb(),r.Sb(13,"vcl-form-control-group"),r.Sb(14,"label",2),r.yc(15,"Description"),r.Rb(),r.Nb(16,"textarea",6),r.Rb(),r.Sb(17,"vcl-form-control-group"),r.Sb(18,"label",2),r.yc(19,"Date of Birth"),r.Rb(),r.Sb(20,"vcl-datepicker",7),r.Nb(21,"vcl-calendar"),r.Rb(),r.Sb(22,"vcl-hint-error",4),r.yc(23,"Date of Birth is required"),r.Rb(),r.Rb(),r.Sb(24,"vcl-form-control-group"),r.Sb(25,"label",2),r.yc(26,"Password"),r.Rb(),r.Sb(27,"vcl-password-input"),r.Nb(28,"input",8),r.Rb(),r.Sb(29,"vcl-hint-error",4),r.yc(30,"Password is required"),r.Rb(),r.Sb(31,"vcl-hint-error",9),r.yc(32,"Password must... "),r.Rb(),r.Sb(33,"vcl-hint-error",9),r.yc(34,"- have at least 8 characters in length"),r.Rb(),r.Sb(35,"vcl-hint-error",9),r.yc(36,"- contain a lowercase letters"),r.Rb(),r.Sb(37,"vcl-hint-error",9),r.yc(38,"- contain a uppercase letters"),r.Rb(),r.Sb(39,"vcl-hint-error",9),r.yc(40,"- contain a number"),r.Rb(),r.Sb(41,"vcl-hint-error",9),r.yc(42,"- contain a special character"),r.Rb(),r.Rb(),r.Sb(43,"vcl-form-control-group"),r.Sb(44,"label",2),r.yc(45,"Level"),r.Rb(),r.Nb(46,"demo-counter",10),r.Rb(),r.wc(47,B,4,0,"vcl-form-control-group",11),r.Sb(48,"vcl-form-control-group"),r.Sb(49,"label",2),r.yc(50,"Picture"),r.Rb(),r.Sb(51,"vcl-file-input",12),r.yc(52,"Picture of the hero"),r.Rb(),r.Rb(),r.Sb(53,"vcl-form-control-group"),r.Sb(54,"label",2),r.yc(55,"Email"),r.Rb(),r.Sb(56,"vcl-embedded-input-group"),r.Nb(57,"vcl-icon",13),r.Nb(58,"input",14),r.Rb(),r.Sb(59,"vcl-hint-error",4),r.yc(60,"Email is required"),r.Rb(),r.Sb(61,"vcl-hint-error",15),r.yc(62,"Invalid Email address"),r.Rb(),r.Rb(),r.Sb(63,"vcl-form-control-group"),r.Sb(64,"label",2),r.yc(65,"Gender"),r.Nb(66,"vcl-required"),r.Rb(),r.Sb(67,"vcl-radio-group",16),r.Sb(68,"label",17),r.Sb(69,"vcl-radio-button",18),r.yc(70,"Male"),r.Rb(),r.Sb(71,"vcl-icogram"),r.yc(72," Male "),r.Nb(73,"vcl-icon",19),r.Rb(),r.Rb(),r.Sb(74,"label",17),r.Nb(75,"vcl-radio-button",20),r.Sb(76,"vcl-icogram"),r.yc(77," Female "),r.Nb(78,"vcl-icon",21),r.Rb(),r.Rb(),r.Sb(79,"label",17),r.Nb(80,"vcl-radio-button",22),r.Sb(81,"vcl-icogram"),r.yc(82," Genderless "),r.Nb(83,"vcl-icon",23),r.Rb(),r.Rb(),r.Sb(84,"vcl-hint-error",4),r.yc(85,"You must select a gender"),r.Rb(),r.Rb(),r.Rb(),r.Sb(86,"vcl-form-control-group"),r.Sb(87,"label",2),r.yc(88,"Alignment"),r.Nb(89,"vcl-required"),r.Rb(),r.Sb(90,"vcl-button-group",24),r.Sb(91,"button",25),r.yc(92,"Good"),r.Rb(),r.Sb(93,"button",25),r.yc(94,"Neutral"),r.Rb(),r.Sb(95,"button",25),r.yc(96,"Evil"),r.Rb(),r.Rb(),r.Sb(97,"vcl-hint-error",4),r.yc(98,"You must select an alignment"),r.Rb(),r.Rb(),r.Sb(99,"vcl-form-control-group"),r.Sb(100,"label",2),r.yc(101,"Class"),r.Nb(102,"vcl-required"),r.Rb(),r.Sb(103,"vcl-select-list",26),r.Sb(104,"vcl-select-list-item",27),r.Sb(105,"vcl-select-list-label"),r.yc(106,"Warrior"),r.Rb(),r.Rb(),r.Sb(107,"vcl-select-list-item",27),r.Sb(108,"vcl-select-list-label"),r.yc(109,"Mage"),r.Rb(),r.Rb(),r.Sb(110,"vcl-select-list-item",27),r.Sb(111,"vcl-select-list-label"),r.yc(112,"rogue"),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(113,"vcl-form-control-group"),r.Sb(114,"label",2),r.yc(115,"Hit points"),r.Nb(116,"vcl-required"),r.Rb(),r.Nb(117,"vcl-slider",28),r.Rb(),r.Sb(118,"fieldset"),r.Sb(119,"legend"),r.yc(120,"Skills"),r.Rb(),r.Sb(121,"vcl-form-control-group"),r.Sb(122,"label",2),r.yc(123,"Strength ("),r.Nb(124,"vcl-rating-item-label",29),r.yc(125,")"),r.Rb(),r.Sb(126,"vcl-rating",30,31),r.Sb(128,"vcl-rating-item"),r.yc(129,"1"),r.Rb(),r.Sb(130,"vcl-rating-item"),r.yc(131,"2"),r.Rb(),r.Sb(132,"vcl-rating-item"),r.yc(133,"3"),r.Rb(),r.Sb(134,"vcl-rating-item"),r.yc(135,"4"),r.Rb(),r.Sb(136,"vcl-rating-item"),r.yc(137,"5"),r.Rb(),r.Rb(),r.Rb(),r.Sb(138,"vcl-form-control-group"),r.Sb(139,"label",2),r.yc(140,"Agility ("),r.Nb(141,"vcl-rating-item-label",29),r.yc(142,")"),r.Rb(),r.Sb(143,"vcl-rating",32,33),r.Sb(145,"vcl-rating-item"),r.yc(146,"1"),r.Rb(),r.Sb(147,"vcl-rating-item"),r.yc(148,"2"),r.Rb(),r.Sb(149,"vcl-rating-item"),r.yc(150,"3"),r.Rb(),r.Sb(151,"vcl-rating-item"),r.yc(152,"4"),r.Rb(),r.Sb(153,"vcl-rating-item"),r.yc(154,"5"),r.Rb(),r.Rb(),r.Rb(),r.Sb(155,"vcl-form-control-group"),r.Sb(156,"label",2),r.yc(157,"Intelligence ("),r.Nb(158,"vcl-rating-item-label",29),r.yc(159,")"),r.Rb(),r.Sb(160,"vcl-rating",34,35),r.Sb(162,"vcl-rating-item"),r.yc(163,"1"),r.Rb(),r.Sb(164,"vcl-rating-item"),r.yc(165,"2"),r.Rb(),r.Sb(166,"vcl-rating-item"),r.yc(167,"3"),r.Rb(),r.Sb(168,"vcl-rating-item"),r.yc(169,"4"),r.Rb(),r.Sb(170,"vcl-rating-item"),r.yc(171,"5"),r.Rb(),r.Rb(),r.Rb(),r.wc(172,H,2,2,"vcl-hint",11),r.wc(173,z,2,2,"vcl-hint-warning",11),r.wc(174,$,2,2,"vcl-hint-error",11),r.Rb(),r.Sb(175,"vcl-form-control-group"),r.Sb(176,"label",2),r.yc(177,"Perks"),r.Nb(178,"vcl-required"),r.Rb(),r.Sb(179,"vcl-select",36),r.Sb(180,"vcl-select-list",37),r.Sb(181,"vcl-select-list-item",27),r.Sb(182,"vcl-select-list-label"),r.yc(183,"Snake Eater"),r.Rb(),r.Sb(184,"vcl-select-list-sublabel"),r.yc(185,"It gives you a 25% increase to your poison resistance.\t"),r.Rb(),r.Rb(),r.Sb(186,"vcl-select-list-item",27),r.Sb(187,"vcl-select-list-label"),r.yc(188,"Swift Learner"),r.Rb(),r.Sb(189,"vcl-select-list-sublabel"),r.yc(190,"Swift Learner\tWhenever you gain experience, you'll receive 5% more experience per level of the perk."),r.Rb(),r.Rb(),r.Sb(191,"vcl-select-list-item",27),r.Sb(192,"vcl-select-list-label"),r.yc(193,"Toughness"),r.Rb(),r.Sb(194,"vcl-select-list-sublabel"),r.yc(195,"It adds 10% to your general damage resistance per level."),r.Rb(),r.Rb(),r.Sb(196,"vcl-select-list-item",27),r.Sb(197,"vcl-select-list-label"),r.yc(198,"Explorer"),r.Rb(),r.Sb(199,"vcl-select-list-sublabel"),r.yc(200,"You'll get more random encounters with this perk."),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(201,"vcl-hint-error",38),r.yc(202,"You must select two perks"),r.Rb(),r.Rb(),r.Sb(203,"vcl-form-control-group"),r.Sb(204,"label",39),r.Nb(205,"vcl-checkbox",40),r.yc(206," Agree to our terms"),r.Nb(207,"vcl-required"),r.Rb(),r.Sb(208,"vcl-hint"),r.yc(209,"Read the "),r.Sb(210,"a",41),r.yc(211,"terms"),r.Rb(),r.yc(212," to learn how we collect, use and share your data"),r.Rb(),r.Sb(213,"vcl-hint-error",42),r.yc(214,"You must agree to our Terms"),r.Rb(),r.Rb(),r.Sb(215,"div",43),r.Sb(216,"button",44),r.yc(217,"Submit"),r.Rb(),r.Sb(218,"button",45),r.ac("click",(function(){return a.onReset()})),r.yc(219,"Reset"),r.Rb(),r.Rb(),r.Sb(220,"div",46),r.Sb(221,"h4"),r.yc(222,"Form"),r.Rb(),r.Sb(223,"pre"),r.yc(224),r.Rb(),r.Sb(225,"pre"),r.yc(226),r.Rb(),r.Sb(227,"pre"),r.yc(228),r.Rb(),r.Sb(229,"pre"),r.yc(230),r.Rb(),r.Sb(231,"pre"),r.yc(232),r.Rb(),r.Sb(233,"pre"),r.yc(234),r.Rb(),r.Sb(235,"pre"),r.yc(236),r.ec(237,"json"),r.Rb(),r.Sb(238,"pre"),r.yc(239),r.ec(240,"json"),r.Rb(),r.Rb(),r.Rb()),2&s){const s=r.nc(1),l=r.nc(127),n=r.nc(144),t=r.nc(161);r.ic("formGroup",a.formGroup),r.Ab(16),r.ic("autogrow",!0)("minRows",3)("maxRows",10),r.Ab(30),r.ic("min",1)("max",10),r.Ab(1),r.ic("ngIf",a.level>=5),r.Ab(4),r.ic("multiple",!1),r.Ab(40),r.ic("value","good"),r.Ab(2),r.ic("value","neutral"),r.Ab(2),r.ic("value","evil"),r.Ab(9),r.ic("value","warrior"),r.Ab(3),r.ic("value","mage"),r.Ab(3),r.ic("value","Rogue"),r.Ab(7),r.ic("min",5)("max",20)("scale",16)("lock",!0),r.Ab(7),r.ic("target",l),r.Ab(17),r.ic("target",n),r.Ab(17),r.ic("target",t),r.Ab(14),r.ic("ngIf",!s.hasError("skills")&&0===a.skillPointsAvailable),r.Ab(1),r.ic("ngIf",!s.hasError("skills")&&a.skillPointsAvailable>0),r.Ab(1),r.ic("ngIf",s.hasError("skills")),r.Ab(7),r.ic("value","snakeeater"),r.Ab(5),r.ic("value","swiftlearner"),r.Ab(5),r.ic("value","toughness"),r.Ab(5),r.ic("value","explorer"),r.Ab(9),r.ic("errorStateAgent",a.termsErrorStateAgent),r.Ab(19),r.Ac("status: ",s.status,""),r.Ab(2),r.Ac("valid: ",s.valid,""),r.Ab(2),r.Ac("dirty: ",s.dirty,""),r.Ab(2),r.Ac("submitted: ",s.submitted,""),r.Ab(2),r.Ac("touched: ",s.touched,""),r.Ab(2),r.Ac("pristine: ",s.pristine,""),r.Ab(2),r.Ac("errors: ",r.fc(237,37,s.errors),""),r.Ab(3),r.Ac("value: ",r.fc(240,39,s.value),"")}},directives:[t.H,t.s,t.k,o.a,h.a,i.a,g.b,t.c,t.r,t.i,j.a,m.a,b.a,u.a,v.a,d.a,n.t,f.a,y.a,w.a,k.b,S.a,R.a,C.a,A.a,k.a,F.a,N.b,q.a,x.a,x.b,P.a,G.a,V.a,L.b,M.a,x.c,E.a,I.a,D.a],pipes:[n.k],encapsulation:2}),s})();function W(){return{label:"Form Control Group",tabs:{Demo:X,"README.md":{type:"md",content:'<h1 id="vcl-form-control-group">vcl-form-control-group</h1>\n<p>Form control group to handle the error-state of form controls</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLFormControlGroupModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@vcl/ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ VCLFormControlGroupModule ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">vclForm</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">&quot;formGroup&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Name<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Name&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;required&quot;</span>&gt;</span>Name is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;minlength&quot;</span>&gt;</span>Name must have a length of at least 2 characters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></pre>\n'},"demo.component.html":{type:"pre",content:l("+GMj")},"demo.component.ts":{type:"pre",content:l("vwv+")}}}}l.d(a,"demo",(function(){return W})),l.d(a,"FormControlGroupDemoModule",(function(){return K}));let K=(()=>{class s{}return s.\u0275mod=r.Kb({type:s}),s.\u0275inj=r.Jb({factory:function(a){return new(a||s)},imports:[[n.c,t.m,t.B,c.b,d.b,e.C,e.I,e.B,e.Q,e.Y,e.cb,e.J,e.K,e.P,e.E,e.O,e.bb,e.eb,e.db,e.hb,e.gb,e.W,e.G,e.M,p.g.forChild([{path:"",component:c.a,data:{demo:W}}])]]}),s})()},"vwv+":function(s,a){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup, Validators, AbstractControl, FormControl, ValidationErrors, NgForm } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { NotifierService, FormControlErrorStateAgent, FormControlHost, FormControlInput } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@vcl/ng-vcl\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> FormControlGroupDemoComponent {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> notifier: NotifierService</span>) { }\n\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">\'form\'</span>)\n  form: NgForm;\n\n  skillPointsMax = <span class="hljs-number">10</span>;\n\n  defaultValues = {\n    level: <span class="hljs-number">1</span>,\n    leader: <span class="hljs-literal">false</span>,\n    hitpoints: <span class="hljs-number">10</span>,\n    strength: <span class="hljs-number">3</span>,\n    agility: <span class="hljs-number">3</span>,\n    intelligence: <span class="hljs-number">3</span>,\n    perks: []\n  };\n\n  formGroup = <span class="hljs-keyword">new</span> FormGroup({\n    name: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required,\n      Validators.minLength(<span class="hljs-number">2</span>),\n    ]),\n    description: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, []),\n    dob: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [\n      Validators.required\n    ]),\n    password: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required,\n      Validators.pattern(<span class="hljs-string">\'(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;].{8,}\'</span>),\n    ]),\n    picture: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, []),\n    level: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.level, []),\n    leader: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.leader, []),\n    email: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.email,\n    ]),\n    terms: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">false</span>, [\n      <span class="hljs-function">(<span class="hljs-params">control</span>) =&gt;</span> {\n        <span class="hljs-keyword">if</span> (!control.value) {\n          <span class="hljs-keyword">return</span> {\n            termsDisagree: <span class="hljs-literal">true</span>,\n          };\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n      }\n    ]),\n    gender: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, Validators.required),\n    <span class="hljs-keyword">class</span>: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [ Validators.required ]),\n    alignment: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [ Validators.required ]),\n    hitpoints: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.hitpoints, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">100</span>)]),\n    strength: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.strength, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    agility: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.agility, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    intelligence: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.intelligence, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    perks: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.perks, [ <span class="hljs-keyword">this</span>.validatePerks.bind(<span class="hljs-keyword">this</span>) ])\n  }, [\n    <span class="hljs-keyword">this</span>.validateSkills.bind(<span class="hljs-keyword">this</span>)\n  ]);\n\n  <span class="hljs-keyword">get</span> level() {\n    <span class="hljs-keyword">const</span> c = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'level\'</span>);\n    <span class="hljs-keyword">return</span> c ? c.value : <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">get</span> skillPoints() {\n    <span class="hljs-keyword">const</span> s = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'strength\'</span>);\n    <span class="hljs-keyword">const</span> a = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'agility\'</span>);\n    <span class="hljs-keyword">const</span> i = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'intelligence\'</span>);\n    <span class="hljs-keyword">if</span> (s &amp;&amp; a &amp;&amp; i) {\n      <span class="hljs-keyword">return</span> s.value + a.value + i.value;\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">get</span> skillPointsAvailable() {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.skillPointsMax - <span class="hljs-keyword">this</span>.skillPoints;\n  }\n\n  validateSkills(c: AbstractControl) {\n    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">this</span>.skillPoints) &gt; <span class="hljs-keyword">this</span>.skillPointsMax) {\n      <span class="hljs-keyword">return</span> {\n        skills: <span class="hljs-literal">true</span>\n      };\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n  }\n\n  validatePerks(c: AbstractControl) {\n    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">Array</span>.isArray(c.value) &amp;&amp; c.value.length === <span class="hljs-number">2</span>) ? <span class="hljs-literal">null</span> : { perks: <span class="hljs-literal">true</span> };\n  }\n\n  <span class="hljs-comment">// Show only if invalid and after submitted</span>\n  termsErrorStateAgent: FormControlErrorStateAgent = <span class="hljs-function">(<span class="hljs-params">form?: FormControlHost, input?: FormControlInput&lt;<span class="hljs-built_in">any</span>&gt;</span>) =&gt;</span> {\n    <span class="hljs-keyword">return</span> form &amp;&amp; input &amp;&amp; input.ngControl &amp;&amp; input.ngControl.invalid &amp;&amp; form.submitted;\n  }\n\n  onSubmit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.formGroup.valid) {\n      <span class="hljs-keyword">this</span>.notifier.success(<span class="hljs-string">\'Hero created\'</span>);\n    } <span class="hljs-keyword">else</span> {\n     <span class="hljs-keyword">this</span>.notifier.error(<span class="hljs-string">\'Hero invalid\'</span>);\n    }\n  }\n\n  onReset() {\n    <span class="hljs-keyword">this</span>.form.resetForm(<span class="hljs-keyword">this</span>.defaultValues);\n    <span class="hljs-keyword">this</span>.notifier.info(<span class="hljs-string">\'Hero reset\'</span>);\n  }\n}\n'}}]);