(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"5yoT":function(n,t,o){"use strict";o.r(t),t.default='<button vcl-button (click)="someAction($event)">Button</button>\n<br><br>\n<button vcl-button (click)="someAction($event)" disabled=true>Disabled button</button>\n<br><br>\n<button vcl-button (click)="someAction($event)" class="emphasized">Emphasized label button</button>\n<br><br>\n<a vcl-button (click)="someAction($event)">Button (a-tag)</a>\n<br><br>\n<button vcl-button square title="Square Button" (click)="someAction($event)">\n  <vcl-icon icon="fas:bolt"></vcl-icon>\n</button>\n<br><br>\n<button vcl-button (click)="someAction($event)" >\n  Appended icon\n  <vcl-icon vclAppend icon="fas:bolt"></vcl-icon>\n</button>\n<br><br>\n<button vcl-button (click)="someAction($event)">\n  <vcl-icon vclPrepend icon="fas:bolt"></vcl-icon>\n  Prepended icon\n</button>\n<br><br>\n<button vcl-button (click)="someAction($event)">\n    <vcl-icon vclPrepend icon="fas:bolt"></vcl-icon>\n    Prepended and appended icon\n    <vcl-icon vclAppend icon="fas:bolt"></vcl-icon>\n</button>\n<br><br>\n<button vcl-button [selectable]="true" (click)="someAction($event.selected)">Selectable button</button>\n'},p1Og:function(n,t,o){"use strict";o.r(t),o.d(t,"demo",function(){return a}),o.d(t,"ButtonDemoModule",function(){return m});var e=o("ofXK"),c=o("tyNb"),b=o("19H1"),l=o("2FIb"),i=o("fXoL"),u=o("6B8K"),r=o("9Rb9");let s=(()=>{class n{someAction(n){console.log("Action handler, param:",n)}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=i.Eb({type:n,selectors:[["ng-component"]],decls:38,vars:1,consts:[["vcl-button","",3,"click"],["vcl-button","","disabled","true",3,"click"],["vcl-button","",1,"emphasized",3,"click"],["vcl-button","","square","","title","Square Button",3,"click"],["icon","fas:bolt"],["vclAppend","","icon","fas:bolt"],["vclPrepend","","icon","fas:bolt"],["vcl-button","",3,"selectable","click"]],template:function(n,t){1&n&&(i.Qb(0,"button",0),i.Xb("click",function(n){return t.someAction(n)}),i.xc(1,"Button"),i.Pb(),i.Lb(2,"br"),i.Lb(3,"br"),i.Qb(4,"button",1),i.Xb("click",function(n){return t.someAction(n)}),i.xc(5,"Disabled button"),i.Pb(),i.Lb(6,"br"),i.Lb(7,"br"),i.Qb(8,"button",2),i.Xb("click",function(n){return t.someAction(n)}),i.xc(9,"Emphasized label button"),i.Pb(),i.Lb(10,"br"),i.Lb(11,"br"),i.Qb(12,"a",0),i.Xb("click",function(n){return t.someAction(n)}),i.xc(13,"Button (a-tag)"),i.Pb(),i.Lb(14,"br"),i.Lb(15,"br"),i.Qb(16,"button",3),i.Xb("click",function(n){return t.someAction(n)}),i.Lb(17,"vcl-icon",4),i.Pb(),i.Lb(18,"br"),i.Lb(19,"br"),i.Qb(20,"button",0),i.Xb("click",function(n){return t.someAction(n)}),i.xc(21," Appended icon "),i.Lb(22,"vcl-icon",5),i.Pb(),i.Lb(23,"br"),i.Lb(24,"br"),i.Qb(25,"button",0),i.Xb("click",function(n){return t.someAction(n)}),i.Lb(26,"vcl-icon",6),i.xc(27," Prepended icon\n"),i.Pb(),i.Lb(28,"br"),i.Lb(29,"br"),i.Qb(30,"button",0),i.Xb("click",function(n){return t.someAction(n)}),i.Lb(31,"vcl-icon",6),i.xc(32," Prepended and appended icon "),i.Lb(33,"vcl-icon",5),i.Pb(),i.Lb(34,"br"),i.Lb(35,"br"),i.Qb(36,"button",7),i.Xb("click",function(n){return t.someAction(n.selected)}),i.xc(37,"Selectable button"),i.Pb()),2&n&&(i.zb(36),i.gc("selectable",!0))},directives:[u.b,r.a],encapsulation:2}),n})();function a(){return{label:"Button",tabs:{Demo:s,"README.md":{type:"md",content:'# vcl-button\n\n`vcl-button` enhance the HTML `<button>` with styling, features and icogram support.\nIt is the main control for triggering actions.\n\n## Usage\n\n```js\nimport { VCLButtonModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLButtonModule ],\n  ...\n})\nexport class AppComponent { ... }\n```\n\n### Basic button\n\n```html\n<button vcl-button (click)="someAction($event)">Action</button>\n```\n\n```html\n<button vcl-button [selectable]="true" (select)="someAction($event)">Select</button>\n```\n\n### Icogram button\n\n```html\n<button vcl-button>\n  <vcl-icogram appIcon="fas:bolt">Action</vcl-icogram>\n</button>\n```\n\n### Square button\n\n```html\n<button vcl-button square>\n  <vcl-icon icon="fas:bolt"></vcl-icon>\n</button>\n```\n\n### API\n\n#### vcl-button/vcl-button square attributes\n\n| Name                | Type        | Default  | Description\n| ------------        | ----------- | -------- |--------------\n| `disabled`          | boolean     | false    | State to indicate that the button is disabled\n| `selectable`        | boolean     | false    | Button selected state toggles if clicked when true\n| `selected`          | boolean     | false    | Whether the button is selected\n| `square`            | boolean     | false    | Whether the button is square\n\n#### vcl-button/vcl-button  events\n\n| Name                | Description\n| ------------        | --------------\n| `selectedChange`    | Triggered when the button is selected state changes\n'},"demo.component.html":{type:"html",content:o("5yoT")},"demo.component.ts":{type:"ts",content:o("tmTN")}}}}let m=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=i.Ib({type:n}),n.\u0275inj=i.Hb({imports:[[e.c,l.b,b.z,b.M,b.L,c.g.forChild([{path:"",component:l.a,data:{demo:a}}])]]}),n})()},tmTN:function(n,t,o){"use strict";o.r(t),t.default="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class ButtonDemoComponent {\n  someAction(param) {\n    console.log('Action handler, param:', param);\n  }\n}\n"}}]);