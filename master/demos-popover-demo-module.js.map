{"version":3,"sources":["webpack:///./demo/app/demos/popover/demo.component.html","webpack:///./demo/app/demos/popover/demo.component.ts","webpack:///./demo/app/demos/popover/demo.module.ts","webpack:///./demo/app/modules/demo/demo.component.html","webpack:///./demo/app/modules/demo/demo.component.ts","webpack:///./demo/app/modules/demo/demo.module.ts","webpack:///./demo/app/demos/popover/demo.component.html?64f1","webpack:///./demo/app/demos/popover/demo.component.ts?3d44","webpack:///./lib/ng-vcl/src/popover/README.md"],"names":[],"mappings":"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","file":"demos-popover-demo-module.js","sourcesContent":["module.exports = \"<div style=\\\"min-height:500px; width: 100%;\\\">\\n  <button vcl-button [selectable]=\\\"true\\\" [selected]=\\\"popover1.visible\\\" (click)=\\\"popover1.toggle()\\\">Toggle Popover</button>\\n  <div #target style=\\\"position: absolute; top: 300px; left: 200px; padding: 10px; border: 3px double green\\\">\\n    The target\\n  </div>\\n</div>\\n\\n<vcl-popover\\n  #popover1\\n  [target]=\\\"target\\\"\\n  (afterClose)=\\\"popover2.close()\\\">\\n  <div style=\\\"width: 400px\\\">\\n    Popover is connected to the target <br>\\n    <button vcl-button (click)=\\\"popover2.open()\\\">Show additional Popover</button>\\n    &nbsp;\\n    <button vcl-button (click)=\\\"popover1.close();\\\">Close Popovers</button>\\n  </div>\\n</vcl-popover>\\n\\n<vcl-popover\\n  #popover2\\n  [target]=\\\"target\\\"\\n  [positions]=\\\"[{\\n    originX: 'start',\\n    originY: 'top',\\n    overlayX: 'start',\\n    overlayY: 'bottom'\\n  }]\\\">\\n  <div style=\\\"width: 300px; height: 50px;\\\">\\n      Popover is connected to the target<br>\\n  </div>\\n</vcl-popover>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html',\n})\nexport class PopoverDemoComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { VCLPopoverModule, VCLButtonModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { PopoverDemoComponent } from './demo.component';\n\nexport function demo() {\n  return {\n    label: 'Popover',\n    tabs: {\n      Demo: PopoverDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/popover/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoModule,\n    VCLPopoverModule,\n    VCLButtonModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo}\n    }]),\n  ],\n  entryComponents: [ PopoverDemoComponent ],\n  declarations: [ PopoverDemoComponent ]\n})\nexport class PopoverDemoModule { }\n","module.exports = \"<h2 class=\\\"vclArticleHeader\\\"> {{title}}</h2>\\n<div *ngIf=\\\"tabs.length>0\\\">\\n  <vcl-tab-nav borders=true>\\n    <vcl-tab *ngFor=\\\"let tab of tabs\\\">\\n      <vcl-tab-label>{{tab.name}}</vcl-tab-label>\\n      <div *ngIf=\\\"tab.type==='component'\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.content\\\"></ng-template>\\n      </div>\\n      <div *ngIf=\\\"tab.type==='text'\\\"><pre>{{tab.content}}</pre></div>\\n      <div *ngIf=\\\"tab.type==='html'\\\" [innerHtml]=\\\"tab.content\\\"></div>\\n      <div *ngIf=\\\"tab.type==='md'\\\"   class=\\\"markdown-body\\\"  [innerHtml]=\\\"tab.content\\\"></div>\\n      <pre *ngIf=\\\"tab.type==='pre'\\\"  [innerHtml]=\\\"tab.content\\\"></pre>\\n    </vcl-tab>\\n  </vcl-tab-nav>\\n</div>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n\n  title: string;\n  tabs: {name: string, type: string, content: any }[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    const data = this.activatedRoute.snapshot.data.demo();\n    if (data) {\n      this.title = data.label;\n      if (data.tabs) {\n        this.tabs = Object.keys(data.tabs).map(key => {\n          let type;\n          let content;\n          if (typeof data.tabs[key] === 'object' && data.tabs[key]) {\n            type = data.tabs[key].type;\n            if (type === 'pre' || type === 'html' || type === 'md') {\n              content = this.sanitizer.bypassSecurityTrustHtml(data.tabs[key].content);\n            } else {\n              content = data.tabs[key].content;\n            }\n          } else if (typeof data.tabs[key] === 'function') {\n            type = 'component';\n            content = new ComponentPortal(data.tabs[key]);\n          }\n\n          return {\n            name: key,\n            content,\n            type\n          };\n      });\n      } else {\n        this.tabs = [];\n      }\n    } else {\n      this.title = 'ng-vcl';\n      this.tabs = [];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VCLTabNavModule } from '@ng-vcl/ng-vcl';\nimport { DemoComponent } from './demo.component';\nimport { PortalModule } from '@angular/cdk/portal';\n\nexport { DemoComponent };\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VCLTabNavModule,\n    PortalModule\n  ],\n  declarations: [ DemoComponent, ]\n})\nexport class DemoModule { }\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">style</span>=<span class=\\\"hljs-string\\\">\\\"min-height:500px; width: 100%;\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> [<span class=\\\"hljs-attr\\\">selectable</span>]=<span class=\\\"hljs-string\\\">\\\"true\\\"</span> [<span class=\\\"hljs-attr\\\">selected</span>]=<span class=\\\"hljs-string\\\">\\\"popover1.visible\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"popover1.toggle()\\\"</span>&gt;</span>Toggle Popover<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> #<span class=\\\"hljs-attr\\\">target</span> <span class=\\\"hljs-attr\\\">style</span>=<span class=\\\"hljs-string\\\">\\\"position: absolute; top: 300px; left: 200px; padding: 10px; border: 3px double green\\\"</span>&gt;</span>\\n    The target\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-popover</span>\\n  #<span class=\\\"hljs-attr\\\">popover1</span>\\n  [<span class=\\\"hljs-attr\\\">target</span>]=<span class=\\\"hljs-string\\\">\\\"target\\\"</span>\\n  (<span class=\\\"hljs-attr\\\">afterClose</span>)=<span class=\\\"hljs-string\\\">\\\"popover2.close()\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">style</span>=<span class=\\\"hljs-string\\\">\\\"width: 400px\\\"</span>&gt;</span>\\n    Popover is connected to the target <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"popover2.open()\\\"</span>&gt;</span>Show additional Popover<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    &amp;nbsp;\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"popover1.close();\\\"</span>&gt;</span>Close Popovers<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-popover</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-popover</span>\\n  #<span class=\\\"hljs-attr\\\">popover2</span>\\n  [<span class=\\\"hljs-attr\\\">target</span>]=<span class=\\\"hljs-string\\\">\\\"target\\\"</span>\\n  [<span class=\\\"hljs-attr\\\">positions</span>]=<span class=\\\"hljs-string\\\">\\\"[{\\n    originX: 'start',\\n    originY: 'top',\\n    overlayX: 'start',\\n    overlayY: 'bottom'\\n  }]\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">style</span>=<span class=\\\"hljs-string\\\">\\\"width: 300px; height: 50px;\\\"</span>&gt;</span>\\n      Popover is connected to the target<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-popover</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> PopoverDemoComponent {\\n\\n}\\n\"","module.exports = \"<h1 id=\\\"vcl-popover\\\">vcl-popover</h1>\\n<p>A popover is an overlay floating at the position of the target element.</p>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> #<span class=\\\"hljs-attr\\\">myTarget</span>&gt;</span>any dom element can be the target<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;popover.toggle()&quot;</span>&gt;</span> \\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-popover</span> #<span class=\\\"hljs-attr\\\">popover</span>=<span class=\\\"hljs-string\\\">&quot;vclPopover&quot;</span> [<span class=\\\"hljs-attr\\\">target</span>]=<span class=\\\"hljs-string\\\">&quot;myTarget&quot;</span> [<span class=\\\"hljs-attr\\\">position</span>]=<span class=\\\"hljs-string\\\">&quot;myPositions&quot;</span>&gt;</span>\\n  Popover-Content\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-popover</span>&gt;</span></pre>\\n<h3 id=\\\"api\\\">API</h3>\\n<h4 id=\\\"attributes\\\">Attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>target</code></td>\\n<td>ElementRef | HTMLElement</td>\\n<td></td>\\n<td>the target must be an ElementRef instance</td>\\n</tr>\\n<tr>\\n<td><code>positions</code></td>\\n<td><a href=\\\"https://material.angular.io/cdk/overlay/api#ConnectedPosition\\\">ConnectedPosition</a></td>\\n<td></td>\\n<td>@angular/cdk OverlayPosition array</td>\\n</tr>\\n<tr>\\n<td><code>visible</code> <em>(1)</em></td>\\n<td>boolean</td>\\n<td>false</td>\\n<td>the popover is hidden if false</td>\\n</tr>\\n</tbody></table>\\n<h4 id=\\\"methods\\\">Methods</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Attributes</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>open</code></td>\\n<td></td>\\n<td>will show the popover</td>\\n</tr>\\n<tr>\\n<td><code>close</code></td>\\n<td></td>\\n<td>will hide the popover</td>\\n</tr>\\n<tr>\\n<td><code>toggle</code></td>\\n<td></td>\\n<td>will show when hidden and hide when visible</td>\\n</tr>\\n</tbody></table>\\n<p><em>(1) Supports Two-way binding</em></p>\\n\""],"sourceRoot":""}