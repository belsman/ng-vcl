"use strict";(self.webpackChunkng_vcl=self.webpackChunkng_vcl||[]).push([[115],{98115:function(n,l,t){t.r(l),t.d(l,{InputDemoModule:function(){return x},demo:function(){return Z}});var e=t(16274),o=t(24988),c=t(95454),u=t(36196),a=t(62518),r=t(84271),i=t(89902),p=t(30429),v=t(67811),d=t(81332),s=t(4001),g=t(852),m=t(57120),f=t(86729);let b=(()=>{class n{constructor(){this.data1=""}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=r.Xpm({type:n,selectors:[["ng-component"]],decls:43,vars:8,consts:[["vclInput","",3,"ngModel","ngModelChange"],["vclInput","","autoselect","true"],["icon","mdi:email"],["vcl-button","","square",""],["icon","mdi:close"],["vclInput","","value","readonly",3,"readonly"],["vclInput","","value","disabled",3,"disabled"],["vclInput","","rows","3"],["vclInput","",3,"autogrow","minRows","maxRows"],["vclInput","",3,"disabled"]],template:function(n,l){1&n&&(r.TgZ(0,"vcl-form-control-group"),r.TgZ(1,"vcl-label"),r._uU(2,"Basic input"),r.qZA(),r.TgZ(3,"vcl-input-field"),r.TgZ(4,"input",0),r.NdJ("ngModelChange",function(n){return l.data1=n}),r.qZA(),r.qZA(),r.qZA(),r.TgZ(5,"vcl-form-control-group"),r.TgZ(6,"vcl-label"),r._uU(7,"Input (autoselect)"),r.qZA(),r.TgZ(8,"vcl-input-field"),r._UZ(9,"input",1),r.qZA(),r.qZA(),r.TgZ(10,"vcl-form-control-group"),r.TgZ(11,"vcl-label"),r._uU(12,"Email"),r.qZA(),r.TgZ(13,"vcl-input-field"),r._UZ(14,"vcl-icon",2),r.TgZ(15,"input",0),r.NdJ("ngModelChange",function(n){return l.data1=n}),r.qZA(),r.TgZ(16,"button",3),r._UZ(17,"vcl-icon",4),r.qZA(),r.qZA(),r.qZA(),r.TgZ(18,"vcl-form-control-group"),r.TgZ(19,"vcl-label"),r._uU(20,"Readonly input"),r.qZA(),r.TgZ(21,"vcl-input-field"),r._UZ(22,"input",5),r.qZA(),r.qZA(),r.TgZ(23,"vcl-form-control-group"),r.TgZ(24,"vcl-label"),r._uU(25,"Disabled input"),r.qZA(),r.TgZ(26,"vcl-input-field"),r._UZ(27,"input",6),r.qZA(),r.qZA(),r.TgZ(28,"vcl-form-control-group"),r.TgZ(29,"vcl-label"),r._uU(30,"textarea"),r.qZA(),r.TgZ(31,"vcl-input-field"),r._UZ(32,"textarea",7),r.qZA(),r.qZA(),r.TgZ(33,"vcl-form-control-group"),r.TgZ(34,"vcl-label"),r._uU(35,"Autogrowing textarea"),r.qZA(),r.TgZ(36,"vcl-input-field"),r._UZ(37,"textarea",8),r.qZA(),r.qZA(),r.TgZ(38,"vcl-form-control-group"),r.TgZ(39,"vcl-label"),r._uU(40,"Disabled textarea"),r.qZA(),r.TgZ(41,"vcl-input-field"),r._UZ(42,"textarea",9),r.qZA(),r.qZA()),2&n&&(r.xp6(4),r.Q6J("ngModel",l.data1),r.xp6(11),r.Q6J("ngModel",l.data1),r.xp6(7),r.Q6J("readonly",!0),r.xp6(5),r.Q6J("disabled",!0),r.xp6(10),r.Q6J("autogrow",!0)("minRows",5)("maxRows",10),r.xp6(5),r.Q6J("disabled",!0))},directives:[i.o,p._T,v.q8,d.q,s.V,o.Fj,o.JJ,o.On,g.o,m.r,f.b],encapsulation:2}),n})();function Z(){return{label:"Input",tabs:{Demo:b,"README.md":{type:"md",content:'# input\n\nEnhanced text input\n\n## Usage\n\n```js\nimport { VCLInputModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLInputModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Basic textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [(ngModel)]="data1" [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n```\n\n### API\n\n#### input[vclInput] attributes\n\nName            | Type    | Default | Description\n--------------- | ------- | ------- | -----------------------------------------------\n`disabled`      | boolean | false   | Disables the input when true\n`autoselect`    | boolean | false   | Selects text on focus\n\n\n#### textarea[vclInput] Attributes\n\n| Name                | Type        | Default            | Description\n| ------------        | ----------- | ------------------ |--------------\n| `autogrow`          | boolean     | false              | Adjusts the `rows` attribute so it matches the current values number of lines\n| `minRows`           | number      |                    | The min value for `rows` when using autogrow\n| `maxRows`           | number      |                    | The max value for `rows` when using autogrow\n| `autoselect`        | boolean     | false              | Selects text on focus\n'},"demo.component.html":{type:"html",content:t(98838)},"demo.component.ts":{type:"ts",content:t(85678)}}}}let x=(()=>{class n{}return n.\u0275fac=function(l){return new(l||n)},n.\u0275mod=r.oAB({type:n}),n.\u0275inj=r.cJS({imports:[[e.ez,o.u5,a.l,u.WdB,u.NhM,u.V4c,c.Bz.forChild([{path:"",component:a.z,data:{demo:Z}}])]]}),n})()},98838:function(n,l,t){t.r(l),l.default='<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Input (autoselect)</vcl-label>\n  <vcl-input-field>\n    <input vclInput autoselect=true />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Email</vcl-label>\n  <vcl-input-field>\n    <vcl-icon icon="mdi:email"></vcl-icon>\n    <input vclInput [(ngModel)]="data1" />\n    <button vcl-button square>\n      <vcl-icon icon="mdi:close"></vcl-icon>\n    </button>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Readonly input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'readonly\' [readonly]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'disabled\' [disabled]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput rows="3"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Autogrowing textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [disabled]="true"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},85678:function(n,l,t){t.r(l),l.default="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class InputDemoComponent {\n  data1 = '';\n}\n"}}]);