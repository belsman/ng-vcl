(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"1cLn":function(s,a,n){"use strict";n.r(a),n.d(a,"demo",(function(){return d})),n.d(a,"PanelDemoModule",(function(){return m}));var l=n("ofXK"),t=n("tyNb"),p=n("3Pt+"),e=n("19H1"),c=n("2FIb"),o=n("fXoL"),h=n("s+0I"),r=n("yMTc"),i=n("9Rb9"),j=n("6B8K");let g=(()=>{class s{constructor(){}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=o.Gb({type:s,selectors:[["ng-component"]],decls:25,vars:1,consts:[[1,"row","align-items-center","py-1"],[3,"showCloseButton"],[1,"row","gutterx-3","align-items-center"],["icon","fas:exclamation-circle",1,"scale300p"],["type","button","vcl-button","","vclPanelFooterButton","",1,"transparent","outline"],["type","button","vcl-button","","vclPanelFooterButton","",1,"emphasized"],["type","warning"]],template:function(s,a){1&s&&(o.Sb(0,"vcl-panel"),o.Sb(1,"vcl-panel-title"),o.yc(2,"Panel Title"),o.Rb(),o.yc(3," Panel Content "),o.Sb(4,"vcl-panel-footer"),o.Sb(5,"div",0),o.yc(6," Panel Footer "),o.Rb(),o.Rb(),o.Rb(),o.Sb(7,"vcl-panel-dialog",1),o.Sb(8,"vcl-panel-title"),o.yc(9,"Panel Title"),o.Rb(),o.Sb(10,"div",2),o.Nb(11,"vcl-icon",3),o.Sb(12,"div"),o.yc(13,"Panel Content"),o.Rb(),o.Rb(),o.Sb(14,"button",4),o.yc(15," Cancel "),o.Rb(),o.Sb(16,"button",5),o.yc(17," Save Changes "),o.Rb(),o.Rb(),o.Sb(18,"vcl-panel",6),o.Sb(19,"vcl-panel-title"),o.yc(20,"Panel Title"),o.Rb(),o.Sb(21,"div",2),o.Nb(22,"vcl-icon",3),o.Sb(23,"div"),o.yc(24,"Panel with semantic coloring"),o.Rb(),o.Rb(),o.Rb()),2&s&&(o.Ab(7),o.ic("showCloseButton",!0))},directives:[h.a,r.d,r.c,r.a,i.a,j.b,r.b],encapsulation:2}),s})();function d(){return{label:"Panel",tabs:{Demo:g,"README.md":{type:"md",content:'<h1 id="vcl-panel">vcl-panel</h1>\n<p>A panel consisting a body, header and footer. All elements are optional.<br>There is a dialog variant, optimized for modal dialogs.</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLPanelModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@vcl/ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ \n    VCLPanelModule\n  ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel</span>&gt;</span> \n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>Panel Title<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n  Panel Content\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-footer</span>&gt;</span>Panel Footer<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-footer</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-dialog</span> [<span class="hljs-attr">showCloseButton</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>Panel Title<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row gutterx-3 align-items-center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;fas:exclamation-circle&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scale300p&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Panel Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">vclPanelFooterButton</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;transparent outline&quot;</span>&gt;</span>\n    Cancel\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">vclPanelFooterButton</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;emphasized&quot;</span>&gt;</span>\n    Save Changes\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-dialog</span>&gt;</span></pre>\n<h3 id="api">API</h3>\n<h4 id="attributes">Attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>showCloseButton</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Shows a close button in the header</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>&apos;success&apos; | &apos;danger&apos; | &apos;warning&apos; | &apos;error&apos; | &apos;info&apos;</td>\n<td></td>\n<td>Semantic coloring</td>\n</tr>\n</tbody></table>\n<h4 id="events">Events</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>close</code></td>\n<td>Fired when the close button is clicked</td>\n</tr>\n</tbody></table>\n'},"demo.component.html":{type:"pre",content:n("Idyf")},"demo.component.ts":{type:"pre",content:n("8v6v")}}}}let m=(()=>{class s{}return s.\u0275mod=o.Kb({type:s}),s.\u0275inj=o.Jb({factory:function(a){return new(a||s)},imports:[[l.c,p.m,c.b,e.V,e.A,e.N,t.g.forChild([{path:"",component:c.a,data:{demo:d}}])]]}),s})()},"8v6v":function(s,a){s.exports='<span class="hljs-keyword">import</span> { Component, Input, ViewEncapsulation, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>,\n  encapsulation: ViewEncapsulation.None,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> PanelDemoComponent {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"></span>) {}\n\n\n}\n'},Idyf:function(s,a){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>Panel Title<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n  Panel Content\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-footer</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"row align-items-center py-1"</span>&gt;</span>\n      Panel Footer\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-footer</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-dialog</span> [<span class="hljs-attr">showCloseButton</span>]=<span class="hljs-string">"true"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>Panel Title<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"row gutterx-3 align-items-center"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:exclamation-circle"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"scale300p"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Panel Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">vclPanelFooterButton</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"transparent outline"</span>&gt;</span>\n    Cancel\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">vclPanelFooterButton</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"emphasized"</span>&gt;</span>\n    Save Changes\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-dialog</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>Panel Title<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"row gutterx-3 align-items-center"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:exclamation-circle"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"scale300p"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Panel with semantic coloring<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel</span>&gt;</span>\n'}}]);