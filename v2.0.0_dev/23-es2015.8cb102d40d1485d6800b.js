(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"+GMj":function(s,a){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">novalidate</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"formGroup"</span> #<span class="hljs-attr">form</span>=<span class="hljs-string">"ngForm"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"max-width: 40em;"</span> (<span class="hljs-attr">submit</span>)=<span class="hljs-string">"onSubmit()"</span> <span class="hljs-attr">vclForm</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Create a hero<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">vclLayer</span>]=<span class="hljs-string">"helpLayerConfig"</span> #<span class="hljs-attr">help</span>=<span class="hljs-string">"vclLayer"</span> <span class="hljs-attr">let-header</span>=<span class="hljs-string">"header"</span> <span class="hljs-attr">let-text</span>=<span class="hljs-string">"text"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-dialog</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-panel-title</span>&gt;</span>{{header}}<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-title</span>&gt;</span>\n      {{text}}\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">vclPanelFooterButton</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"transparent outline"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"help.close()"</span>&gt;</span>OK<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-panel-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span> \n \n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-input-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"name"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-input-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"transparent"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"help.open({data: { header: \'Name\', text: \'The name of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!\'}})"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"scale130p"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"vcl:info"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Name is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"minlength"</span>&gt;</span>Name must have a length of at least 2 characters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Description<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-input-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Description of the hero"</span> [<span class="hljs-attr">autogrow</span>]=<span class="hljs-string">"true"</span> [<span class="hljs-attr">minRows</span>]=<span class="hljs-string">"3"</span> [<span class="hljs-attr">maxRows</span>]=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-input-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"transparent"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"help.open({data: { header: \'Description\', text: \'The description of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!\'}})"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"scale130p"</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"vcl:info"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"row gutterx-4"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"flex"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Date of Birth<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-datepicker</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"dob"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"MM/DD/YYYY"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-calendar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-calendar</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-datepicker</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Date of Birth is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n  \n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"flex"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Email<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-input-field</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:envelope"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"email"</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-input-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Email is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"email"</span>&gt;</span>Invalid Email address<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  \n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Password<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-password-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Enter password"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-password-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Password is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>Password must... <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- have at least 8 characters in length<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a lowercase letters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a uppercase letters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a number<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"pattern"</span>&gt;</span>- contain a special character<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Level<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">demo-counter</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"level"</span> [<span class="hljs-attr">min</span>]=<span class="hljs-string">"1"</span> [<span class="hljs-attr">max</span>]=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">demo-counter</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"level &gt;= 5"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Leader<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-flip-switch</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"leader"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-flip-switch</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Picture<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-file-input</span> [<span class="hljs-attr">multiple</span>]=<span class="hljs-string">"false"</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"picture"</span>&gt;</span>Picture of the hero<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-file-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Gender<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-group</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"gender"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"m"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>Male<span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:mars"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"f"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>Female<span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:venus"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"g"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icogram</span>&gt;</span>Genderless<span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclAppend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:genderless"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icogram</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>You must select a gender<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Alignment<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-button-group</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"alignment"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'good\'"</span>&gt;</span>Good<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'neutral\'"</span>&gt;</span>Neutral<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'evil\'"</span>&gt;</span>Evil<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-button-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>You must select an alignment<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Class<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"class"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'warrior\'"</span>&gt;</span>\n        Warrior\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'mage\'"</span>&gt;</span>\n        Mage\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'rogue\'"</span>&gt;</span>\n        Rogue\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>You must select a class<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Hit points<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-slider</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"hitpoints"</span> [<span class="hljs-attr">min</span>]=<span class="hljs-string">"5"</span> [<span class="hljs-attr">max</span>]=<span class="hljs-string">"20"</span> [<span class="hljs-attr">scale</span>]=<span class="hljs-string">"16"</span> [<span class="hljs-attr">lock</span>]=<span class="hljs-string">"true"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-slider</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>Skills<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Strength (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"strengthRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"strength"</span> #<span class="hljs-attr">strengthRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Agility (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"agilityRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"agility"</span> #<span class="hljs-attr">agilityRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Intelligence (<span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item-label</span> [<span class="hljs-attr">target</span>]=<span class="hljs-string">"intelligenceRating"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item-label</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"intelligence"</span> #<span class="hljs-attr">intelligenceRating</span>=<span class="hljs-string">"vclRating"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-rating-item</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-rating</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"!form.hasError(\'skills\') &amp;&amp; skillPointsAvailable === 0"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-warning</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"!form.hasError(\'skills\') &amp;&amp; skillPointsAvailable &gt; 0"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-warning</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">"form.hasError(\'skills\')"</span>&gt;</span>{{skillPoints}} of {{skillPointsMax}} skill points used<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Perks<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Select perks"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"perks"</span>  <span class="hljs-attr">selectionMode</span>=<span class="hljs-string">"multiple"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'snakeeater\'"</span>&gt;</span>\n          Snake Eater\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>It gives you a 25% increase to your poison resistance.\t<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'swiftlearner\'"</span>&gt;</span>\n          Swift Learner\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>Swift Learner\tWhenever you gain experience, you\'ll receive 5% more experience per level of the perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'toughness\'"</span>&gt;</span>\n          Toughness\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>It adds 10% to your general damage resistance per level.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'explorer\'"</span>&gt;</span>\n          Explorer\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>You\'ll get more random encounters with this perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span> \n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"perks"</span>&gt;</span>You must select two perks<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> [<span class="hljs-attr">errorStateAgent</span>]=<span class="hljs-string">"termsErrorStateAgent"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-checkbox</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"terms"</span> &gt;</span>\n      Agree to our terms\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint</span>&gt;</span>Read the <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"\'https://github.com/ng-vcl/ng-vcl\'"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"\'_blank\'"</span>&gt;</span>terms<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> to learn how we collect, use and share your data<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"termsDisagree"</span>&gt;</span>You must agree to our Terms<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loose-button-group"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"emphasized"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"onReset()"</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"value"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>Form<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>status: {{ form.status }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>valid: {{ form.valid }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>dirty: {{ form.dirty }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>submitted: {{ form.submitted }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>touched: {{ form.touched }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>pristine: {{ form.pristine }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>errors: {{ form.errors | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>value: {{ form.value | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n  '},"L79/":function(s,a,n){"use strict";n.r(a),n.d(a,"demo",(function(){return W})),n.d(a,"FormControlGroupDemoModule",(function(){return Z}));var l=n("ofXK"),t=n("3Pt+"),p=n("tyNb"),e=n("19H1"),c=n("2FIb"),r=n("fXoL"),o=n("JuoG"),h=n("X9a5"),i=n("xsjC"),g=n("x1VK"),j=n("pKlR"),m=n("oZnf"),u=n("1/Kn"),v=n("6B8K"),b=n("9Rb9"),d=n("QI9E"),f=n("mo8z"),y=n("jPeI"),w=n("VSXH"),k=n("5gLr"),S=n("f0Vy"),R=n("DMRj"),C=n("EaCA"),A=n("btmi"),x=n("Vp9f"),N=n("ErXM"),F=n("zDo1"),P=n("StUX"),V=n("AS2X"),q=n("R+ME"),G=n("ySGC"),E=n("SQVY"),M=n("I9Sx"),I=n("AXxg"),L=n("s+0I"),D=n("yMTc"),Y=n("TzFS");const T=["form"];function H(s,a){if(1&s){const s=r.Tb();r.Sb(0,"vcl-panel-dialog"),r.Sb(1,"vcl-panel-title"),r.yc(2),r.Rb(),r.yc(3),r.Sb(4,"button",51),r.ac("click",(function(){return r.oc(s),r.dc(),r.nc(5).close()})),r.yc(5,"OK"),r.Rb(),r.Rb()}if(2&s){const s=a.header,n=a.text;r.Ab(2),r.zc(s),r.Ab(1),r.Ac(" ",n," ")}}function z(s,a){1&s&&(r.Sb(0,"vcl-form-control-group"),r.Sb(1,"vcl-label"),r.yc(2,"Leader"),r.Rb(),r.Nb(3,"vcl-flip-switch",52),r.Rb())}function B(s,a){if(1&s&&(r.Sb(0,"vcl-hint"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}function K(s,a){if(1&s&&(r.Sb(0,"vcl-hint-warning"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}function X(s,a){if(1&s&&(r.Sb(0,"vcl-hint-error"),r.yc(1),r.Rb()),2&s){const s=r.dc();r.Ab(1),r.Bc("",s.skillPoints," of ",s.skillPointsMax," skill points used")}}let $=(()=>{class s{constructor(s){this.notifier=s,this.skillPointsMax=10,this.defaultValues={level:1,leader:!1,hitpoints:10,strength:3,agility:3,intelligence:3,perks:[]},this.formGroup=new t.j({name:new t.g("",[t.F.required,t.F.minLength(2)]),description:new t.g("",[]),dob:new t.g(null,[t.F.required]),password:new t.g("",[t.F.required,t.F.pattern("(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}")]),picture:new t.g(null,[]),level:new t.g(this.defaultValues.level,[]),leader:new t.g(this.defaultValues.leader,[]),email:new t.g("",[t.F.email]),terms:new t.g(!1,[s=>s.value?null:{termsDisagree:!0}]),gender:new t.g(null,t.F.required),class:new t.g(null,[t.F.required]),alignment:new t.g(null,[t.F.required]),hitpoints:new t.g(this.defaultValues.hitpoints,[t.F.min(1),t.F.max(100)]),strength:new t.g(this.defaultValues.strength,[t.F.min(1),t.F.max(10)]),agility:new t.g(this.defaultValues.agility,[t.F.min(1),t.F.max(10)]),intelligence:new t.g(this.defaultValues.intelligence,[t.F.min(1),t.F.max(10)]),perks:new t.g(this.defaultValues.perks,[this.validatePerks.bind(this)])},[this.validateSkills.bind(this)]),this.termsErrorStateAgent=(s,a)=>s&&a&&a.invalid&&s.submitted,this.helpLayerConfig={style:"transparent",maxWidth:"25em"}}get level(){const s=this.formGroup&&this.formGroup.get("level");return s?s.value:0}get skillPoints(){const s=this.formGroup&&this.formGroup.get("strength"),a=this.formGroup&&this.formGroup.get("agility"),n=this.formGroup&&this.formGroup.get("intelligence");return s&&a&&n?s.value+a.value+n.value:0}get skillPointsAvailable(){return this.skillPointsMax-this.skillPoints}validateSkills(s){return this.skillPoints>this.skillPointsMax?{skills:!0}:null}validatePerks(s){return Array.isArray(s.value)&&2===s.value.length?null:{perks:!0}}onSubmit(){this.formGroup.valid?this.notifier.success("Hero created"):this.notifier.error("Hero invalid")}onReset(){this.form.resetForm(this.defaultValues),this.notifier.info("Hero reset")}}return s.\u0275fac=function(a){return new(a||s)(r.Mb(e.s))},s.\u0275cmp=r.Gb({type:s,selectors:[["ng-component"]],viewQuery:function(s,a){var n;1&s&&r.Dc(T,!0),2&s&&r.mc(n=r.bc())&&(a.form=n.first)},decls:233,vars:42,consts:[["novalidate","","vclForm","",2,"max-width","40em",3,"formGroup","submit"],["form","ngForm"],[3,"vclLayer"],["help","vclLayer"],["vclInput","","formControlName","name"],["vcl-square-button","","type","button",1,"transparent",3,"click"],["icon","vcl:info",1,"scale130p"],["error","required"],["error","minlength"],["vclInput","","formControlName","description","placeholder","Description of the hero",3,"autogrow","minRows","maxRows"],[1,"row","gutterx-4"],[1,"flex"],["formControlName","dob","placeholder","MM/DD/YYYY"],["icon","fas:envelope"],["vclInput","","formControlName","email"],["error","email"],["vclInput","","formControlName","password","placeholder","Enter password"],["error","pattern"],["formControlName","level",3,"min","max"],[4,"ngIf"],["formControlName","picture",3,"multiple"],["formControlName","gender"],["value","m"],["vclAppend","","icon","fas:mars"],["value","f"],["vclAppend","","icon","fas:venus"],["value","g"],["vclAppend","","icon","fas:genderless"],["formControlName","alignment"],["vcl-button","",3,"value"],["formControlName","class"],[3,"value"],["formControlName","hitpoints",3,"min","max","scale","lock"],[3,"target"],["formControlName","strength"],["strengthRating","vclRating"],["formControlName","agility"],["agilityRating","vclRating"],["formControlName","intelligence"],["intelligenceRating","vclRating"],["placeholder","Select perks"],["formControlName","perks","selectionMode","multiple"],["error","perks"],[3,"errorStateAgent"],["formControlName","terms"],["href","'https://github.com/ng-vcl/ng-vcl'","target","'_blank'"],["error","termsDisagree"],[1,"loose-button-group"],["vcl-button","","type","submit",1,"emphasized"],["vcl-button","","type","button",3,"click"],[1,"value"],["vcl-button","","vclPanelFooterButton","",1,"transparent","outline",3,"click"],["formControlName","leader"]],template:function(s,a){if(1&s){const s=r.Tb();r.Sb(0,"form",0,1),r.ac("submit",(function(){return a.onSubmit()})),r.Sb(2,"h2"),r.yc(3,"Create a hero"),r.Rb(),r.wc(4,H,6,2,"ng-template",2,3,r.xc),r.Sb(6,"vcl-form-control-group"),r.Sb(7,"vcl-label"),r.yc(8,"Name"),r.Rb(),r.Sb(9,"vcl-input-field"),r.Nb(10,"input",4),r.Rb(),r.Sb(11,"button",5),r.ac("click",(function(){return r.oc(s),r.nc(5).open({data:{header:"Name",text:"The name of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!"}})})),r.Nb(12,"vcl-icon",6),r.Rb(),r.Sb(13,"vcl-hint-error",7),r.yc(14,"Name is required"),r.Rb(),r.Sb(15,"vcl-hint-error",8),r.yc(16,"Name must have a length of at least 2 characters"),r.Rb(),r.Rb(),r.Sb(17,"vcl-form-control-group"),r.Sb(18,"vcl-label"),r.yc(19,"Description"),r.Rb(),r.Sb(20,"vcl-input-field"),r.Nb(21,"textarea",9),r.Rb(),r.Sb(22,"button",5),r.ac("click",(function(){return r.oc(s),r.nc(5).open({data:{header:"Description",text:"The description of the hero. Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ad excepturi molestiae esse unde repellendus ex accusantium officia placeat voluptatem commodi et, laboriosam laudantium, cum, ratione debitis inventore? Esse, eaque!"}})})),r.Nb(23,"vcl-icon",6),r.Rb(),r.Rb(),r.Sb(24,"div",10),r.Sb(25,"vcl-form-control-group",11),r.Sb(26,"vcl-label"),r.yc(27,"Date of Birth"),r.Rb(),r.Sb(28,"vcl-datepicker",12),r.Nb(29,"vcl-calendar"),r.Rb(),r.Sb(30,"vcl-hint-error",7),r.yc(31,"Date of Birth is required"),r.Rb(),r.Rb(),r.Sb(32,"vcl-form-control-group",11),r.Sb(33,"vcl-label"),r.yc(34,"Email"),r.Rb(),r.Sb(35,"vcl-input-field"),r.Nb(36,"vcl-icon",13),r.Nb(37,"input",14),r.Rb(),r.Sb(38,"vcl-hint-error",7),r.yc(39,"Email is required"),r.Rb(),r.Sb(40,"vcl-hint-error",15),r.yc(41,"Invalid Email address"),r.Rb(),r.Rb(),r.Rb(),r.Sb(42,"vcl-form-control-group"),r.Sb(43,"vcl-label"),r.yc(44,"Password"),r.Rb(),r.Sb(45,"vcl-password-input"),r.Nb(46,"input",16),r.Rb(),r.Sb(47,"vcl-hint-error",7),r.yc(48,"Password is required"),r.Rb(),r.Sb(49,"vcl-hint-error",17),r.yc(50,"Password must... "),r.Rb(),r.Sb(51,"vcl-hint-error",17),r.yc(52,"- have at least 8 characters in length"),r.Rb(),r.Sb(53,"vcl-hint-error",17),r.yc(54,"- contain a lowercase letters"),r.Rb(),r.Sb(55,"vcl-hint-error",17),r.yc(56,"- contain a uppercase letters"),r.Rb(),r.Sb(57,"vcl-hint-error",17),r.yc(58,"- contain a number"),r.Rb(),r.Sb(59,"vcl-hint-error",17),r.yc(60,"- contain a special character"),r.Rb(),r.Rb(),r.Sb(61,"vcl-form-control-group"),r.Sb(62,"vcl-label"),r.yc(63,"Level"),r.Rb(),r.Nb(64,"demo-counter",18),r.Rb(),r.wc(65,z,4,0,"vcl-form-control-group",19),r.Sb(66,"vcl-form-control-group"),r.Sb(67,"vcl-label"),r.yc(68,"Picture"),r.Rb(),r.Sb(69,"vcl-file-input",20),r.yc(70,"Picture of the hero"),r.Rb(),r.Rb(),r.Sb(71,"vcl-form-control-group"),r.Sb(72,"vcl-label"),r.yc(73,"Gender"),r.Rb(),r.Sb(74,"vcl-radio-group",21),r.Sb(75,"vcl-radio-button",22),r.Sb(76,"vcl-icogram"),r.yc(77,"Male"),r.Nb(78,"vcl-icon",23),r.Rb(),r.Rb(),r.Sb(79,"vcl-radio-button",24),r.Sb(80,"vcl-icogram"),r.yc(81,"Female"),r.Nb(82,"vcl-icon",25),r.Rb(),r.Rb(),r.Sb(83,"vcl-radio-button",26),r.Sb(84,"vcl-icogram"),r.yc(85,"Genderless"),r.Nb(86,"vcl-icon",27),r.Rb(),r.Rb(),r.Sb(87,"vcl-hint-error",7),r.yc(88,"You must select a gender"),r.Rb(),r.Rb(),r.Rb(),r.Sb(89,"vcl-form-control-group"),r.Sb(90,"vcl-label"),r.yc(91,"Alignment"),r.Rb(),r.Sb(92,"vcl-button-group",28),r.Sb(93,"button",29),r.yc(94,"Good"),r.Rb(),r.Sb(95,"button",29),r.yc(96,"Neutral"),r.Rb(),r.Sb(97,"button",29),r.yc(98,"Evil"),r.Rb(),r.Rb(),r.Sb(99,"vcl-hint-error",7),r.yc(100,"You must select an alignment"),r.Rb(),r.Rb(),r.Sb(101,"vcl-form-control-group"),r.Sb(102,"vcl-label"),r.yc(103,"Class"),r.Rb(),r.Sb(104,"vcl-select-list",30),r.Sb(105,"vcl-select-list-item",31),r.yc(106," Warrior "),r.Rb(),r.Sb(107,"vcl-select-list-item",31),r.yc(108," Mage "),r.Rb(),r.Sb(109,"vcl-select-list-item",31),r.yc(110," Rogue "),r.Rb(),r.Rb(),r.Sb(111,"vcl-hint-error",7),r.yc(112,"You must select a class"),r.Rb(),r.Rb(),r.Sb(113,"vcl-form-control-group"),r.Sb(114,"vcl-label"),r.yc(115,"Hit points"),r.Rb(),r.Nb(116,"vcl-slider",32),r.Rb(),r.Sb(117,"fieldset"),r.Sb(118,"legend"),r.yc(119,"Skills"),r.Rb(),r.Sb(120,"vcl-form-control-group"),r.Sb(121,"vcl-label"),r.yc(122,"Strength ("),r.Nb(123,"vcl-rating-item-label",33),r.yc(124,")"),r.Rb(),r.Sb(125,"vcl-rating",34,35),r.Sb(127,"vcl-rating-item"),r.yc(128,"1"),r.Rb(),r.Sb(129,"vcl-rating-item"),r.yc(130,"2"),r.Rb(),r.Sb(131,"vcl-rating-item"),r.yc(132,"3"),r.Rb(),r.Sb(133,"vcl-rating-item"),r.yc(134,"4"),r.Rb(),r.Sb(135,"vcl-rating-item"),r.yc(136,"5"),r.Rb(),r.Rb(),r.Rb(),r.Sb(137,"vcl-form-control-group"),r.Sb(138,"vcl-label"),r.yc(139,"Agility ("),r.Nb(140,"vcl-rating-item-label",33),r.yc(141,")"),r.Rb(),r.Sb(142,"vcl-rating",36,37),r.Sb(144,"vcl-rating-item"),r.yc(145,"1"),r.Rb(),r.Sb(146,"vcl-rating-item"),r.yc(147,"2"),r.Rb(),r.Sb(148,"vcl-rating-item"),r.yc(149,"3"),r.Rb(),r.Sb(150,"vcl-rating-item"),r.yc(151,"4"),r.Rb(),r.Sb(152,"vcl-rating-item"),r.yc(153,"5"),r.Rb(),r.Rb(),r.Rb(),r.Sb(154,"vcl-form-control-group"),r.Sb(155,"vcl-label"),r.yc(156,"Intelligence ("),r.Nb(157,"vcl-rating-item-label",33),r.yc(158,")"),r.Rb(),r.Sb(159,"vcl-rating",38,39),r.Sb(161,"vcl-rating-item"),r.yc(162,"1"),r.Rb(),r.Sb(163,"vcl-rating-item"),r.yc(164,"2"),r.Rb(),r.Sb(165,"vcl-rating-item"),r.yc(166,"3"),r.Rb(),r.Sb(167,"vcl-rating-item"),r.yc(168,"4"),r.Rb(),r.Sb(169,"vcl-rating-item"),r.yc(170,"5"),r.Rb(),r.Rb(),r.Rb(),r.wc(171,B,2,2,"vcl-hint",19),r.wc(172,K,2,2,"vcl-hint-warning",19),r.wc(173,X,2,2,"vcl-hint-error",19),r.Rb(),r.Sb(174,"vcl-form-control-group"),r.Sb(175,"vcl-label"),r.yc(176,"Perks"),r.Rb(),r.Sb(177,"vcl-select",40),r.Sb(178,"vcl-select-list",41),r.Sb(179,"vcl-select-list-item",31),r.yc(180," Snake Eater "),r.Sb(181,"vcl-sub-label"),r.yc(182,"It gives you a 25% increase to your poison resistance.\t"),r.Rb(),r.Rb(),r.Sb(183,"vcl-select-list-item",31),r.yc(184," Swift Learner "),r.Sb(185,"vcl-sub-label"),r.yc(186,"Swift Learner\tWhenever you gain experience, you'll receive 5% more experience per level of the perk."),r.Rb(),r.Rb(),r.Sb(187,"vcl-select-list-item",31),r.yc(188," Toughness "),r.Sb(189,"vcl-sub-label"),r.yc(190,"It adds 10% to your general damage resistance per level."),r.Rb(),r.Rb(),r.Sb(191,"vcl-select-list-item",31),r.yc(192," Explorer "),r.Sb(193,"vcl-sub-label"),r.yc(194,"You'll get more random encounters with this perk."),r.Rb(),r.Rb(),r.Rb(),r.Rb(),r.Sb(195,"vcl-hint-error",42),r.yc(196,"You must select two perks"),r.Rb(),r.Rb(),r.Sb(197,"vcl-form-control-group",43),r.Sb(198,"vcl-checkbox",44),r.yc(199," Agree to our terms "),r.Rb(),r.Sb(200,"vcl-hint"),r.yc(201,"Read the "),r.Sb(202,"a",45),r.yc(203,"terms"),r.Rb(),r.yc(204," to learn how we collect, use and share your data"),r.Rb(),r.Sb(205,"vcl-hint-error",46),r.yc(206,"You must agree to our Terms"),r.Rb(),r.Rb(),r.Sb(207,"div",47),r.Sb(208,"button",48),r.yc(209,"Submit"),r.Rb(),r.Sb(210,"button",49),r.ac("click",(function(){return a.onReset()})),r.yc(211,"Reset"),r.Rb(),r.Rb(),r.Sb(212,"div",50),r.Sb(213,"h4"),r.yc(214,"Form"),r.Rb(),r.Sb(215,"pre"),r.yc(216),r.Rb(),r.Sb(217,"pre"),r.yc(218),r.Rb(),r.Sb(219,"pre"),r.yc(220),r.Rb(),r.Sb(221,"pre"),r.yc(222),r.Rb(),r.Sb(223,"pre"),r.yc(224),r.Rb(),r.Sb(225,"pre"),r.yc(226),r.Rb(),r.Sb(227,"pre"),r.yc(228),r.ec(229,"json"),r.Rb(),r.Sb(230,"pre"),r.yc(231),r.ec(232,"json"),r.Rb(),r.Rb(),r.Rb()}if(2&s){const s=r.nc(1),n=r.nc(126),l=r.nc(143),t=r.nc(160);r.ic("formGroup",a.formGroup),r.Ab(4),r.ic("vclLayer",a.helpLayerConfig),r.Ab(17),r.ic("autogrow",!0)("minRows",3)("maxRows",10),r.Ab(43),r.ic("min",1)("max",10),r.Ab(1),r.ic("ngIf",a.level>=5),r.Ab(4),r.ic("multiple",!1),r.Ab(24),r.ic("value","good"),r.Ab(2),r.ic("value","neutral"),r.Ab(2),r.ic("value","evil"),r.Ab(8),r.ic("value","warrior"),r.Ab(2),r.ic("value","mage"),r.Ab(2),r.ic("value","rogue"),r.Ab(7),r.ic("min",5)("max",20)("scale",16)("lock",!0),r.Ab(7),r.ic("target",n),r.Ab(17),r.ic("target",l),r.Ab(17),r.ic("target",t),r.Ab(14),r.ic("ngIf",!s.hasError("skills")&&0===a.skillPointsAvailable),r.Ab(1),r.ic("ngIf",!s.hasError("skills")&&a.skillPointsAvailable>0),r.Ab(1),r.ic("ngIf",s.hasError("skills")),r.Ab(6),r.ic("value","snakeeater"),r.Ab(4),r.ic("value","swiftlearner"),r.Ab(4),r.ic("value","toughness"),r.Ab(4),r.ic("value","explorer"),r.Ab(6),r.ic("errorStateAgent",a.termsErrorStateAgent),r.Ab(19),r.Ac("status: ",s.status,""),r.Ab(2),r.Ac("valid: ",s.valid,""),r.Ab(2),r.Ac("dirty: ",s.dirty,""),r.Ab(2),r.Ac("submitted: ",s.submitted,""),r.Ab(2),r.Ac("touched: ",s.touched,""),r.Ab(2),r.Ac("pristine: ",s.pristine,""),r.Ab(2),r.Ac("errors: ",r.fc(229,38,s.errors),""),r.Ab(3),r.Ac("value: ",r.fc(232,40,s.value),"")}},directives:[t.H,t.s,o.a,t.k,h.a,i.a,g.a,j.a,m.a,u.a,t.c,t.r,t.i,v.b,b.a,d.b,f.a,y.a,w.a,k.a,S.a,l.t,R.a,C.a,A.a,x.a,N.a,F.a,P.a,V.a,q.a,G.a,E.b,M.a,j.b,I.a,d.a,L.a,D.a,D.d,D.b,Y.a],pipes:[l.k],styles:["\n    .form-control-group-demo-help-notification {\n      max-width: 30em;\n    }\n  "],encapsulation:2}),s})();function W(){return{label:"Form Control Group",tabs:{Demo:$,"README.md":{type:"md",content:'<h1 id="vcl-form-control-group">vcl-form-control-group</h1>\n<p>Form control group to handle the error-state of form controls</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLFormControlGroupModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@vcl/ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ VCLFormControlGroupModule ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">vclForm</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">&quot;formGroup&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-label</span>&gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-input-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-input-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;required&quot;</span>&gt;</span>Name is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">&quot;minlength&quot;</span>&gt;</span>Name must have a length of at least 2 characters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></pre>\n'},"demo.component.html":{type:"pre",content:n("+GMj")},"demo.component.ts":{type:"pre",content:n("vwv+")}}}}let Z=(()=>{class s{}return s.\u0275mod=r.Kb({type:s}),s.\u0275inj=r.Jb({factory:function(a){return new(a||s)},imports:[[l.c,t.m,t.B,c.b,S.b,e.A,e.z,e.O,e.W,e.ab,e.H,e.Q,e.I,e.N,e.V,e.C,e.M,e.Z,e.cb,e.bb,e.eb,e.fb,e.T,e.F,e.K,p.g.forChild([{path:"",component:c.a,data:{demo:W}}])]]}),s})()},"vwv+":function(s,a){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild, ViewEncapsulation } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup, Validators, AbstractControl, FormControl, NgForm } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { NotifierService, FormControlErrorStateAgent, NotificationComponent, NotifierOptions, NotifierPosition, NotifierType, LayerConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@vcl/ng-vcl\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>,\n  styles: [<span class="hljs-string">`\n    .form-control-group-demo-help-notification {\n      max-width: 30em;\n    }\n  `</span>],\n  encapsulation: ViewEncapsulation.None\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> FormControlGroupDemoComponent {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> notifier: NotifierService</span>) { }\n\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">\'form\'</span>)\n  form: NgForm;\n\n  skillPointsMax = <span class="hljs-number">10</span>;\n\n  defaultValues = {\n    level: <span class="hljs-number">1</span>,\n    leader: <span class="hljs-literal">false</span>,\n    hitpoints: <span class="hljs-number">10</span>,\n    strength: <span class="hljs-number">3</span>,\n    agility: <span class="hljs-number">3</span>,\n    intelligence: <span class="hljs-number">3</span>,\n    perks: []\n  };\n\n  formGroup = <span class="hljs-keyword">new</span> FormGroup({\n    name: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required,\n      Validators.minLength(<span class="hljs-number">2</span>),\n    ]),\n    description: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, []),\n    dob: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [\n      Validators.required\n    ]),\n    password: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required,\n      Validators.pattern(<span class="hljs-string">\'(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&amp;])[A-Za-z\\d$@$!%*?&amp;].{8,}\'</span>),\n    ]),\n    picture: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, []),\n    level: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.level, []),\n    leader: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.leader, []),\n    email: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.email,\n    ]),\n    terms: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">false</span>, [\n      <span class="hljs-function">(<span class="hljs-params">control</span>) =&gt;</span> {\n        <span class="hljs-keyword">if</span> (!control.value) {\n          <span class="hljs-keyword">return</span> {\n            termsDisagree: <span class="hljs-literal">true</span>,\n          };\n        }\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n      }\n    ]),\n    gender: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, Validators.required),\n    <span class="hljs-keyword">class</span>: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [ Validators.required ]),\n    alignment: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [ Validators.required ]),\n    hitpoints: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.hitpoints, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">100</span>)]),\n    strength: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.strength, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    agility: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.agility, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    intelligence: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.intelligence, [ Validators.min(<span class="hljs-number">1</span>), Validators.max(<span class="hljs-number">10</span>)]),\n    perks: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.perks, [ <span class="hljs-keyword">this</span>.validatePerks.bind(<span class="hljs-keyword">this</span>) ])\n  }, [\n    <span class="hljs-keyword">this</span>.validateSkills.bind(<span class="hljs-keyword">this</span>)\n  ]);\n\n  <span class="hljs-keyword">get</span> level() {\n    <span class="hljs-keyword">const</span> c = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'level\'</span>);\n    <span class="hljs-keyword">return</span> c ? c.value : <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">get</span> skillPoints() {\n    <span class="hljs-keyword">const</span> s = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'strength\'</span>);\n    <span class="hljs-keyword">const</span> a = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'agility\'</span>);\n    <span class="hljs-keyword">const</span> i = <span class="hljs-keyword">this</span>.formGroup &amp;&amp; <span class="hljs-keyword">this</span>.formGroup.get(<span class="hljs-string">\'intelligence\'</span>);\n    <span class="hljs-keyword">if</span> (s &amp;&amp; a &amp;&amp; i) {\n      <span class="hljs-keyword">return</span> s.value + a.value + i.value;\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;\n  }\n\n  <span class="hljs-keyword">get</span> skillPointsAvailable() {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.skillPointsMax - <span class="hljs-keyword">this</span>.skillPoints;\n  }\n\n  validateSkills(c: AbstractControl) {\n    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">this</span>.skillPoints) &gt; <span class="hljs-keyword">this</span>.skillPointsMax) {\n      <span class="hljs-keyword">return</span> {\n        skills: <span class="hljs-literal">true</span>\n      };\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;\n  }\n\n  validatePerks(c: AbstractControl) {\n    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">Array</span>.isArray(c.value) &amp;&amp; c.value.length === <span class="hljs-number">2</span>) ? <span class="hljs-literal">null</span> : { perks: <span class="hljs-literal">true</span> };\n  }\n\n  <span class="hljs-comment">// Show only if invalid and after submitted</span>\n  termsErrorStateAgent: FormControlErrorStateAgent = <span class="hljs-function">(<span class="hljs-params">form?, ngControl?</span>) =&gt;</span> {\n    <span class="hljs-keyword">return</span> form &amp;&amp; ngControl &amp;&amp; ngControl.invalid &amp;&amp; form.submitted;\n  }\n\n  onSubmit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.formGroup.valid) {\n      <span class="hljs-keyword">this</span>.notifier.success(<span class="hljs-string">\'Hero created\'</span>);\n    } <span class="hljs-keyword">else</span> {\n     <span class="hljs-keyword">this</span>.notifier.error(<span class="hljs-string">\'Hero invalid\'</span>);\n    }\n  }\n\n  onReset() {\n    <span class="hljs-keyword">this</span>.form.resetForm(<span class="hljs-keyword">this</span>.defaultValues);\n    <span class="hljs-keyword">this</span>.notifier.info(<span class="hljs-string">\'Hero reset\'</span>);\n  }\n\n\n  helpLayerConfig: LayerConfig = {\n    style: <span class="hljs-string">\'transparent\'</span>, \n    maxWidth: <span class="hljs-string">\'25em\'</span>,\n  }\n}\n'}}]);