{"version":3,"sources":["webpack:///./demo/app/demos/badge/demo.component.html","webpack:///./demo/app/demos/badge/demo.component.ts","webpack:///./demo/app/demos/badge/demo.module.ts","webpack:///./demo/app/modules/demo/demo.component.html","webpack:///./demo/app/modules/demo/demo.component.ts","webpack:///./demo/app/modules/demo/demo.module.ts","webpack:///./demo/app/demos/badge/demo.component.html?1fe7","webpack:///./demo/app/demos/badge/demo.component.ts?c20e","webpack:///./lib/ng-vcl/src/badge/README.md"],"names":[],"mappings":"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","file":"demos-badge-demo-module.js","sourcesContent":["module.exports = \"<h3>Default badge</h3>\\n<vcl-badge>default</vcl-badge>\\n\\n<h3>Primary badge</h3>\\n<vcl-badge type=\\\"primary\\\">primary</vcl-badge>\\n\\n<h3>Success badge</h3>\\n<vcl-badge type=\\\"success\\\">success</vcl-badge>\\n\\n<h3>Info badge</h3>\\n<vcl-badge type=\\\"info\\\">info</vcl-badge>\\n\\n<h3>Warning badge</h3>\\n<vcl-badge type=\\\"warning\\\">warning</vcl-badge>\\n\\n<h3>Error badge</h3>\\n<vcl-badge type=\\\"error\\\">error</vcl-badge>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class BadgeDemoComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { VCLBadgeModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { BadgeDemoComponent } from './demo.component';\n\nexport function demo() {\n  return {\n    label: 'Badge',\n    tabs: {\n      Demo: BadgeDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/badge/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoModule,\n    VCLBadgeModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo}\n    }]),\n  ],\n  entryComponents: [ BadgeDemoComponent ],\n  declarations: [ BadgeDemoComponent ]\n})\nexport class BadgeDemoModule { }\n","module.exports = \"<h2 class=\\\"vclArticleHeader\\\"> {{title}}</h2>\\n<div *ngIf=\\\"tabs.length>0\\\">\\n  <vcl-tab-nav borders=true>\\n    <vcl-tab *ngFor=\\\"let tab of tabs\\\">\\n      <ng-template vcl-tab-label>{{tab.name}}</ng-template>\\n      <wormhole *ngIf=\\\"tab.type==='component'\\\" [connect]=\\\"tab.content\\\"></wormhole>\\n      <div *ngIf=\\\"tab.type==='text'\\\"><pre>{{tab.content}}</pre></div>\\n      <div *ngIf=\\\"tab.type==='html'\\\" [innerHtml]=\\\"tab.content\\\"></div>\\n      <div *ngIf=\\\"tab.type==='md'\\\"   class=\\\"markdown-body\\\"  [innerHtml]=\\\"tab.content\\\"></div>\\n      <pre *ngIf=\\\"tab.type==='pre'\\\"  [innerHtml]=\\\"tab.content\\\"></pre>\\n    </vcl-tab>\\n  </vcl-tab-nav>\\n</div>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n\n  title: string;\n  tabs: {name: string, content: string}[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    const data = this.activatedRoute.snapshot.data['demo']();\n    if (data) {\n      this.title = data.label;\n      if (data.tabs) {\n        this.tabs = Object.keys(data.tabs).map(key => {\n          let type;\n          let content;\n          if (typeof data.tabs[key] === 'object' && data.tabs[key]) {\n            type = data.tabs[key].type;\n            if (type === 'pre' || type === 'html' || type === 'md') {\n              content = this.sanitizer.bypassSecurityTrustHtml(data.tabs[key].content);\n            } else {\n              content = data.tabs[key].content;\n            }\n          } else if (typeof data.tabs[key] === 'function') {\n            type = 'component';\n            content = data.tabs[key];\n          }\n\n          return {\n            name: key,\n            content,\n            type\n          };\n      });\n      } else {\n        this.tabs = [];\n      }\n    } else {\n      this.title = 'ng-vcl';\n      this.tabs = [];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VCLTabNavModule, VCLWormholeModule } from '@ng-vcl/ng-vcl';\nimport { DemoComponent } from './demo.component';\n\nexport { DemoComponent };\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VCLTabNavModule,\n    VCLWormholeModule\n  ],\n  declarations: [ DemoComponent, ]\n})\nexport class DemoModule { }\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Default badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>default<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Primary badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"primary\\\"</span>&gt;</span>primary<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Success badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"success\\\"</span>&gt;</span>success<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Info badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"info\\\"</span>&gt;</span>info<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Warning badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"warning\\\"</span>&gt;</span>warning<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>Error badge<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"error\\\"</span>&gt;</span>error<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, OnInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> BadgeDemoComponent {\\n}\\n\"","module.exports = \"<h1 id=\\\"vcl-badge\\\">vcl-badge</h1>\\n<p>A visually highlighted tag to attribute items.</p>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { VCLBadgeModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n@NgModule({\\n  <span class=\\\"hljs-attr\\\">imports</span>: [ VCLBadgeModule ],\\n  ...\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">AppComponent</span> </span>{}</pre>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>default<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;primary&quot;</span>&gt;</span>primary<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;success&quot;</span>&gt;</span>success<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;info&quot;</span>&gt;</span>info<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;warning&quot;</span>&gt;</span>warning<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-badge</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">&quot;error&quot;</span>&gt;</span>error<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-badge</span>&gt;</span></pre>\\n<h3 id=\\\"api\\\">API</h3>\\n<h4 id=\\\"vcl-badge-attributes\\\">vcl-badge attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>type</code></td>\\n<td>string</td>\\n<td></td>\\n<td>the badge&apos;s type</td>\\n</tr>\\n</tbody></table>\\n\""],"sourceRoot":""}