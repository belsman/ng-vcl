{"version":3,"sources":["webpack:///./demo/app/demos/layer/bar.component.html","webpack:///./demo/app/demos/layer/bar.component.ts","webpack:///./demo/app/demos/layer/demo.component.html","webpack:///./demo/app/demos/layer/demo.component.ts","webpack:///./demo/app/demos/layer/demo.module.ts","webpack:///./demo/app/demos/layer/foo.component.html","webpack:///./demo/app/demos/layer/foo.component.ts","webpack:///./demo/app/modules/demo/demo.component.html","webpack:///./demo/app/modules/demo/demo.component.ts","webpack:///./demo/app/modules/demo/demo.module.ts","webpack:///./demo/app/demos/layer/bar.component.html?0924","webpack:///./demo/app/demos/layer/demo.component.html?0309","webpack:///./demo/app/demos/layer/foo.component.html?3913","webpack:///./demo/app/demos/layer/bar.component.ts?44da","webpack:///./demo/app/demos/layer/demo.component.ts?643d","webpack:///./demo/app/demos/layer/foo.component.ts?f54d","webpack:///./lib/ng-vcl/src/layer/README.md"],"names":[],"mappings":"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","file":"demos-layer-demo-module.js","sourcesContent":["module.exports = \"<div class=\\\"vclPanel vclPanelDialog vclNoMargin\\\">\\n  <div class=\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <h3 class=\\\"vclPanelTitle\\\">{{title}}</h3>\\n    <button vcl-square-button class=\\\"vclTransparent\\\" (click)=\\\"close()\\\">\\n      <vcl-icon icon=\\\"fas:times\\\"></vcl-icon>\\n    </button>\\n  </div>\\n  <div class=\\\"vclPanelBody\\\">\\n    <p class=\\\"vclPanelContent\\\">\\n      bar layer content\\n    </p>\\n  </div>\\n  <div class=\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <div></div>\\n    <div class=\\\"vclLooseButtonGroup\\\">\\n      <button vcl-button class=\\\"vclTransparent vclOutline\\\" (click)=\\\"close()\\\">Close Layer</button>\\n      <button vcl-button class=\\\"vclEmphasized\\\" (click)=\\\"close('data')\\\">Close Layer with result</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Provider, Injectable, Injector, Inject } from '@angular/core';\nimport { Layer, LAYER_TOKEN } from '@ng-vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'bar.component.html',\n})\nexport class BarComponent {\n\n  constructor(@Inject(LAYER_TOKEN) private layer: Layer) { }\n\n  get title() {\n    return this.layer.data.title;\n  }\n\n  close(value?: string) {\n    this.layer.close({\n      value\n    });\n  }\n}\n","module.exports = \"<button vcl-button (click)=\\\"layer.open()\\\">Open template layer</button>\\n<br><br>\\n<button vcl-button (click)=\\\"openFooLayer()\\\">Open foo component</button>\\n<br><br>\\n<button vcl-button (click)=\\\"openBarLayer()\\\">Open bar component layer</button>\\n\\n<vcl-layer #layer=\\\"vclLayer\\\">\\n  <div class=\\\"vclPanel vclPanelDialog vclNoMargin\\\">\\n    <div class=\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n      <h3 class=\\\"vclPanelTitle\\\">\\n        Layer\\n      </h3>\\n      <button vcl-square-button class=\\\"vclTransparent\\\" (click)=\\\"layer.close()\\\">\\n        <vcl-icon icon=\\\"fas:times\\\"></vcl-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"vclPanelBody\\\">\\n      <p class=\\\"vclPanelContent\\\">\\n        Press escape or click outside of layer to close<br><br>\\n      </p>\\n    </div>\\n    <div class=\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n      <div></div>\\n      <div class=\\\"vclLooseButtonGroup\\\">\\n        <button vcl-button icon=\\\"fas:times\\\" class=\\\"vclTransparent vclOutline\\\" (click)=\\\"layer.close()\\\">Close layer</button>\\n        <button vcl-button icon=\\\"fas:times\\\" class=\\\"vclEmphasized\\\" (click)=\\\"openFooLayer()\\\">Open foo layer</button>\\n      </div>\\n    </div>\\n  </div>\\n</vcl-layer>\\n\\n\"","import { Component, ViewContainerRef } from '@angular/core';\nimport { LayerService } from '@ng-vcl/ng-vcl';\nimport { FooLayer } from './foo.component';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  templateUrl: 'demo.component.html',\n})\nexport class LayerDemoComponent {\n\n  constructor(\n    private fooLayer: FooLayer,\n    private layerService: LayerService,\n  ) {\n    fooLayer.afterClose.subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  openBarLayer() {\n    const layer = this.layerService.open(BarComponent, {\n      title: 'bar component layer title'\n    }, {\n      modal: true\n    });\n    layer.afterClose.subscribe(result => {\n      layer.destroy(); // Layer is not needed anymore\n      console.log(result.value);\n    });\n  }\n\n  openFooLayer() {\n    this.fooLayer.open({\n      title: 'foo component layer title'\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { VCLLayerModule, VCLButtonModule, VCLIconModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { LayerDemoComponent } from './demo.component';\nimport { FooLayer, FooComponent } from './foo.component';\nimport { BarComponent } from './bar.component';\n\nexport function demo() {\n  return {\n    label: 'Layer',\n    tabs: {\n      Demo: LayerDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/layer/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      },\n      'foo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./foo.component.html')\n      },\n      'foo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./foo.component.ts')\n      },\n      'bar.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./bar.component.html')\n      },\n      'bar.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./bar.component.ts')\n      }\n    },\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoModule,\n    VCLLayerModule,\n    VCLButtonModule,\n    VCLIconModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo},\n    }]),\n  ],\n  providers: [\n    FooLayer\n  ],\n  entryComponents: [\n    LayerDemoComponent,\n    BarComponent,\n    FooComponent\n  ],\n  declarations: [\n    LayerDemoComponent,\n    BarComponent,\n    FooComponent\n  ]\n})\nexport class LayerDemoModule { }\n\n","module.exports = \"<div class=\\\"vclPanel vclPanelDialog vclNoMargin\\\">\\n  <div class=\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <h3 class=\\\"vclPanelTitle\\\">{{title}}</h3>\\n    <button vcl-square-button class=\\\"vclTransparent\\\" (click)=\\\"close()\\\">\\n      <vcl-icon icon=\\\"fas:times\\\"></vcl-icon>\\n    </button>\\n  </div>\\n  <div class=\\\"vclPanelBody\\\">\\n    <p class=\\\"vclPanelContent\\\">\\n      foo layer content\\n    </p>\\n  </div>\\n  <div class=\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <div></div>\\n    <div class=\\\"vclLooseButtonGroup\\\">\\n      <button vcl-button class=\\\"vclTransparent vclOutline\\\" (click)=\\\"close()\\\">Close Layer</button>\\n      <button vcl-button class=\\\"vclEmphasized\\\" (click)=\\\"close('data')\\\">Close Layer with result</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Injectable, Injector } from '@angular/core';\nimport { LayerBase, LAYER_TOKEN } from '@ng-vcl/ng-vcl';\n\nexport interface FooLayerData {\n  title: string;\n}\n\nexport interface FooLayerResult {\n  value: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FooLayer extends LayerBase<FooLayerData, FooLayerResult, FooComponent> {\n  constructor(injector: Injector) {\n    super(injector);\n  }\n  protected getComponent() {\n    return FooComponent;\n  }\n}\n\n@Component({\n  templateUrl: 'foo.component.html',\n  providers: [{\n    provide: FooLayer,\n    useExisting: LAYER_TOKEN,\n  }]\n})\nexport class FooComponent {\n\n  constructor(private layer: FooLayer) { }\n\n  get title() {\n    return this.layer.data.title;\n  }\n\n  close(value?: string) {\n    this.layer.close({\n      value\n    });\n  }\n}\n","module.exports = \"<h2 class=\\\"vclArticleHeader\\\"> {{title}}</h2>\\n<div *ngIf=\\\"tabs.length>0\\\">\\n  <vcl-tab-nav borders=true>\\n    <vcl-tab *ngFor=\\\"let tab of tabs\\\">\\n      <ng-template vcl-tab-label>{{tab.name}}</ng-template>\\n      <wormhole *ngIf=\\\"tab.type==='component'\\\" [connect]=\\\"tab.content\\\"></wormhole>\\n      <div *ngIf=\\\"tab.type==='text'\\\"><pre>{{tab.content}}</pre></div>\\n      <div *ngIf=\\\"tab.type==='html'\\\" [innerHtml]=\\\"tab.content\\\"></div>\\n      <div *ngIf=\\\"tab.type==='md'\\\"   class=\\\"markdown-body\\\"  [innerHtml]=\\\"tab.content\\\"></div>\\n      <pre *ngIf=\\\"tab.type==='pre'\\\"  [innerHtml]=\\\"tab.content\\\"></pre>\\n    </vcl-tab>\\n  </vcl-tab-nav>\\n</div>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n\n  title: string;\n  tabs: {name: string, content: string}[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    const data = this.activatedRoute.snapshot.data['demo']();\n    if (data) {\n      this.title = data.label;\n      if (data.tabs) {\n        this.tabs = Object.keys(data.tabs).map(key => {\n          let type;\n          let content;\n          if (typeof data.tabs[key] === 'object' && data.tabs[key]) {\n            type = data.tabs[key].type;\n            if (type === 'pre' || type === 'html' || type === 'md') {\n              content = this.sanitizer.bypassSecurityTrustHtml(data.tabs[key].content);\n            } else {\n              content = data.tabs[key].content;\n            }\n          } else if (typeof data.tabs[key] === 'function') {\n            type = 'component';\n            content = data.tabs[key];\n          }\n\n          return {\n            name: key,\n            content,\n            type\n          };\n      });\n      } else {\n        this.tabs = [];\n      }\n    } else {\n      this.title = 'ng-vcl';\n      this.tabs = [];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VCLTabNavModule, VCLWormholeModule } from '@ng-vcl/ng-vcl';\nimport { DemoComponent } from './demo.component';\n\nexport { DemoComponent };\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VCLTabNavModule,\n    VCLWormholeModule\n  ],\n  declarations: [ DemoComponent, ]\n})\nexport class DemoModule { }\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanel vclPanelDialog vclNoMargin\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelTitle\\\"</span>&gt;</span>{{title}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-square-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-icon</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-icon</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelBody\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelContent\\\"</span>&gt;</span>\\n      bar layer content\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent vclOutline\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>Close Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclEmphasized\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close('data')\\\"</span>&gt;</span>Close Layer with result<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.open()\\\"</span>&gt;</span>Open template layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"openFooLayer()\\\"</span>&gt;</span>Open foo component<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"openBarLayer()\\\"</span>&gt;</span>Open bar component layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-layer</span> #<span class=\\\"hljs-attr\\\">layer</span>=<span class=\\\"hljs-string\\\">\\\"vclLayer\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanel vclPanelDialog vclNoMargin\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelTitle\\\"</span>&gt;</span>\\n        Layer\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-square-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.close()\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-icon</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-icon</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelBody\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelContent\\\"</span>&gt;</span>\\n        Press escape or click outside of layer to close<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent vclOutline\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.close()\\\"</span>&gt;</span>Close layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclEmphasized\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"openFooLayer()\\\"</span>&gt;</span>Open foo layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span>\\n\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanel vclPanelDialog vclNoMargin\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelTitle\\\"</span>&gt;</span>{{title}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-square-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-icon</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-icon</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelBody\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelContent\\\"</span>&gt;</span>\\n      foo layer content\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent vclOutline\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>Close Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclEmphasized\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close('data')\\\"</span>&gt;</span>Close Layer with result<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, Provider, Injectable, Injector, Inject } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Layer, LAYER_TOKEN } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'bar.component.html'</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> BarComponent {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-meta\\\">@Inject</span>(LAYER_TOKEN) <span class=\\\"hljs-keyword\\\">private</span> layer: Layer</span>) { }\\n\\n  <span class=\\\"hljs-keyword\\\">get</span> title() {\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">this</span>.layer.data.title;\\n  }\\n\\n  close(value?: <span class=\\\"hljs-built_in\\\">string</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close({\\n      value\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, ViewContainerRef } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { LayerService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { FooLayer } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./foo.component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { BarComponent } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./bar.component'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> LayerDemoComponent {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\">\\n    <span class=\\\"hljs-keyword\\\">private</span> fooLayer: FooLayer,\\n    <span class=\\\"hljs-keyword\\\">private</span> layerService: LayerService,\\n  </span>) {\\n    fooLayer.afterClose.subscribe(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">result</span> =&gt;</span> {\\n      <span class=\\\"hljs-built_in\\\">console</span>.log(result);\\n    });\\n  }\\n\\n  openBarLayer() {\\n    <span class=\\\"hljs-keyword\\\">const</span> layer = <span class=\\\"hljs-keyword\\\">this</span>.layerService.open(BarComponent, {\\n      title: <span class=\\\"hljs-string\\\">'bar component layer title'</span>\\n    }, {\\n      modal: <span class=\\\"hljs-literal\\\">true</span>\\n    });\\n    layer.afterClose.subscribe(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">result</span> =&gt;</span> {\\n      layer.destroy(); <span class=\\\"hljs-comment\\\">// Layer is not needed anymore</span>\\n      <span class=\\\"hljs-built_in\\\">console</span>.log(result.value);\\n    });\\n  }\\n\\n  openFooLayer() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.fooLayer.open({\\n      title: <span class=\\\"hljs-string\\\">'foo component layer title'</span>\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, Injectable, Injector } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { LayerBase, LAYER_TOKEN } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> FooLayerData {\\n  title: <span class=\\\"hljs-built_in\\\">string</span>;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> FooLayerResult {\\n  value: <span class=\\\"hljs-built_in\\\">string</span>;\\n}\\n\\n<span class=\\\"hljs-meta\\\">@Injectable</span>({\\n  providedIn: <span class=\\\"hljs-string\\\">'root'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> FooLayer <span class=\\\"hljs-keyword\\\">extends</span> LayerBase&lt;FooLayerData, FooLayerResult, FooComponent&gt; {\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\">injector: Injector</span>) {\\n    <span class=\\\"hljs-keyword\\\">super</span>(injector);\\n  }\\n  <span class=\\\"hljs-keyword\\\">protected</span> getComponent() {\\n    <span class=\\\"hljs-keyword\\\">return</span> FooComponent;\\n  }\\n}\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'foo.component.html'</span>,\\n  providers: [{\\n    provide: FooLayer,\\n    useExisting: LAYER_TOKEN,\\n  }]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> FooComponent {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">private</span> layer: FooLayer</span>) { }\\n\\n  <span class=\\\"hljs-keyword\\\">get</span> title() {\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">this</span>.layer.data.title;\\n  }\\n\\n  close(value?: <span class=\\\"hljs-built_in\\\">string</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close({\\n      value\\n    });\\n  }\\n}\\n\"","module.exports = \"<h1 id=\\\"vcl-layer\\\">vcl-layer</h1>\\n<p>An overlay placed in the center of the screen.</p>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<h3 id=\\\"the-layer-reference-object\\\">The layer reference object</h3>\\n<p>A layer implements the <code>Layer</code> interface which allows to listen for events and open/close the layer.<br>It can be created via the <code>vcl-layer</code> component or with the <code>LayerService</code> from a component class:</p>\\n<h4 id=\\\"vcl-layer-1\\\">vcl-layer</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;myTemplateLayer.open()&quot;</span>&gt;</span>Open Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-layer</span> #<span class=\\\"hljs-attr\\\">myTemplateLayer</span>=<span class=\\\"hljs-string\\\">&quot;vclLayer&quot;</span> [<span class=\\\"hljs-attr\\\">modal</span>]=<span class=\\\"hljs-string\\\">&quot;true&quot;</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanel vclNoMargin&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanelBody&quot;</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanelContent&quot;</span>&gt;</span>\\n        Content\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;myTemplateLayer.close()&quot;</span>&gt;</span>Close Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span></pre>\\n<h4 id=\\\"component-layer\\\">Component Layer</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { Layer } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-comment\\\">// This is just a common component</span>\\n@Component({ ... })\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">MyLayerComponent</span> </span>{\\n\\n  <span class=\\\"hljs-comment\\\">// layer is a reference to the current layer.</span>\\n  <span class=\\\"hljs-comment\\\">// Its value is null when the component is not used as a layer</span>\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(@Optional() @Inject(LAYER_TOKEN) private layer: Layer) { }\\n\\n  close() {\\n    <span class=\\\"hljs-comment\\\">// Close the layer</span>\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close(<span class=\\\"hljs-string\\\">&apos;result&apos;</span>);\\n  }\\n}</pre>\\n<h4 id=\\\"using-the-layers\\\">Using the Layers</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { LayerService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { MyLayerComponent } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;./my-layer.component&apos;</span>;\\n\\n@Component({ ... })\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">DemoComponent</span> </span>{\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(\\n    private layerService: LayerService // This is the reference to the component layer\\n  ) {}\\n\\n  openComponentLayer() {\\n    <span class=\\\"hljs-keyword\\\">const</span> layer = <span class=\\\"hljs-keyword\\\">this</span>.layerService.open(MyLayerComponent).subscribe(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">result</span> =&gt;</span> {\\n      <span class=\\\"hljs-built_in\\\">console</span>.log(result);\\n    });\\n  }\\n}</pre>\\n<h3 id=\\\"api\\\">API</h3>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">export</span> interface Layer {\\n  readonly visible: boolean;\\n  afterClose: Observable&lt;any | <span class=\\\"hljs-literal\\\">undefined</span>&gt;;\\n  open(data?: any, opts?: LayerOptions): Observable&lt;any&gt;;\\n  close(result?: any): <span class=\\\"hljs-keyword\\\">void</span>;\\n  destroy(): <span class=\\\"hljs-keyword\\\">void</span>;\\n}\\n\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">LayerService</span> </span>{\\n  create(component: any, opts?: LayerOptions): Layer;\\n  open(component: ComponentType&lt;TComponent&gt;, <span class=\\\"hljs-attr\\\">data</span>: any, opts?: LayerOptions): Layer;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">export</span> interface LayerOptions {\\n  position?: PositionStrategy;\\n  modal?: boolean;\\n}\\n</pre>\\n<h4 id=\\\"vcl-layer-attributes\\\">vcl-layer attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>modal</code></td>\\n<td>boolean</td>\\n<td>false</td>\\n<td>Wether a non-modal layer should close when clicked outside</td>\\n</tr>\\n<tr>\\n<td><code>position</code></td>\\n<td>PositionStrategy</td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody></table>\\n\""],"sourceRoot":""}