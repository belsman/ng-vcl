(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"2qsK":function(n,t,o){"use strict";o.r(t),t.default='\n<vcl-button-group [(value)]="position" mode="single">\n  <button vcl-square-button [value]="positions.TopRight"><vcl-icon icon="mdi:arrow-top-right"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.Top"><vcl-icon icon="mdi:arrow-up"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.TopLeft"><vcl-icon icon="mdi:arrow-top-left"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.BottomRight"><vcl-icon icon="mdi:arrow-bottom-right"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.Bottom"><vcl-icon icon="mdi:arrow-down"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.BottomLeft"><vcl-icon icon="mdi:arrow-bottom-left"></vcl-icon></button>\n  <button vcl-square-button [value]="positions.Center"><vcl-icon icon="mdi:arrow-all"></vcl-icon></button>\n</vcl-button-group>\n\n<br><br>\n\n<button vcl-button (click)="default()">An message</button><br><br>\n<button vcl-button (click)="info()">An info message</button><br><br>\n<button vcl-button (click)="success()">A success message</button><br><br>\n<button vcl-button (click)="warning()">A warning</button><br><br>\n<button vcl-button (click)="error()">An error message</button><br><br>\n<button vcl-button (click)="custom()">A custom message</button><br><br>\n<button vcl-button (click)="modalNotification.open()">A centered modal message</button><br><br>\n\n<ng-template \n  [vclNotifier]="modalNotificationOptions"\n  #modalNotification="vclNotifier"\n  let-content="content"\n  >\n  <p>Notification content: <span style="font-style: italic;">{{content}}</span></p>\n\n</ng-template>\n\n'},GAjj:function(n,t,o){"use strict";o.r(t),o.d(t,"demo",(function(){return w})),o.d(t,"NotifierDemoModule",(function(){return N}));var i=o("ofXK"),e=o("tyNb"),s=o("3Pt+"),c=o("19H1"),r=o("2FIb"),l=o("fXoL"),u=o("ErXM"),a=o("6B8K"),b=o("9Rb9"),f=o("+rOU"),p=o("rI4U");let m=(()=>{class n{constructor(n,t,o){this.notifierService=n,this.templateRef=t,this.viewContainerRef=o,this.opts={content:void 0}}open(){this.notificationOverlayRef=this.notifierService.queue(Object.assign(Object.assign({},this.opts),{content:new f.i(this.templateRef,this.viewContainerRef,{content:"string"==typeof this.opts.content?this.opts.content:void 0})}))}close(){var n;null===(n=this.notificationOverlayRef)||void 0===n||n.close()}}return n.\u0275fac=function(t){return new(t||n)(l.Kb(p.a),l.Kb(l.K),l.Kb(l.O))},n.\u0275dir=l.Fb({type:n,selectors:[["","vclNotifier",""]],inputs:{opts:["vclNotifier","opts"]},exportAs:["vclNotifier"]}),n})();const v=["htmlNotification"];function g(n,t){if(1&n&&(l.Qb(0,"p"),l.wc(1,"Notification content: "),l.Qb(2,"span",12),l.wc(3),l.Pb(),l.Pb()),2&n){const n=t.content;l.yb(3),l.xc(n)}}let h=1,d=(()=>{class n{constructor(n){this.notifier=n,this.positions=c.NotifierPosition,this.position=c.NotifierPosition.TopRight,this.modalNotificationOptions={content:"I am modal!",position:c.NotifierPosition.Center,title:"Modal Title",hasBackdrop:!0,timeout:!1,showCloseButton:!0}}default(){this.notifier.queue({content:"A message "+h++,position:this.position})}info(){this.notifier.info({content:"An info message "+h++,title:"Info",icon:"vcl:info",position:this.position})}success(){this.notifier.success({content:"A success message "+h++,title:"Success",position:this.position})}warning(){this.notifier.warning({content:"A warning "+h++,title:"Warning",position:this.position})}error(){this.notifier.error({content:"An error message "+h++,title:"Error",position:this.position})}custom(){this.notifier.queue({content:"A custom class message",position:this.position,showCloseButton:!1,timeout:1e4,class:"demoCustomNotifier"})}}return n.\u0275fac=function(t){return new(t||n)(l.Kb(c.NotifierService))},n.\u0275cmp=l.Eb({type:n,selectors:[["ng-component"]],viewQuery:function(n,t){var o;1&n&&l.Bc(v,!0),2&n&&l.kc(o=l.Yb())&&(t.htmlNotification=o.first)},decls:47,vars:9,consts:[["mode","single",3,"value","valueChange"],["vcl-square-button","",3,"value"],["icon","mdi:arrow-top-right"],["icon","mdi:arrow-up"],["icon","mdi:arrow-top-left"],["icon","mdi:arrow-bottom-right"],["icon","mdi:arrow-down"],["icon","mdi:arrow-bottom-left"],["icon","mdi:arrow-all"],["vcl-button","",3,"click"],[3,"vclNotifier"],["modalNotification","vclNotifier"],[2,"font-style","italic"]],template:function(n,t){if(1&n){const n=l.Rb();l.Qb(0,"vcl-button-group",0),l.Xb("valueChange",(function(n){return t.position=n})),l.Qb(1,"button",1),l.Lb(2,"vcl-icon",2),l.Pb(),l.Qb(3,"button",1),l.Lb(4,"vcl-icon",3),l.Pb(),l.Qb(5,"button",1),l.Lb(6,"vcl-icon",4),l.Pb(),l.Qb(7,"button",1),l.Lb(8,"vcl-icon",5),l.Pb(),l.Qb(9,"button",1),l.Lb(10,"vcl-icon",6),l.Pb(),l.Qb(11,"button",1),l.Lb(12,"vcl-icon",7),l.Pb(),l.Qb(13,"button",1),l.Lb(14,"vcl-icon",8),l.Pb(),l.Pb(),l.Lb(15,"br"),l.Lb(16,"br"),l.Qb(17,"button",9),l.Xb("click",(function(){return t.default()})),l.wc(18,"An message"),l.Pb(),l.Lb(19,"br"),l.Lb(20,"br"),l.Qb(21,"button",9),l.Xb("click",(function(){return t.info()})),l.wc(22,"An info message"),l.Pb(),l.Lb(23,"br"),l.Lb(24,"br"),l.Qb(25,"button",9),l.Xb("click",(function(){return t.success()})),l.wc(26,"A success message"),l.Pb(),l.Lb(27,"br"),l.Lb(28,"br"),l.Qb(29,"button",9),l.Xb("click",(function(){return t.warning()})),l.wc(30,"A warning"),l.Pb(),l.Lb(31,"br"),l.Lb(32,"br"),l.Qb(33,"button",9),l.Xb("click",(function(){return t.error()})),l.wc(34,"An error message"),l.Pb(),l.Lb(35,"br"),l.Lb(36,"br"),l.Qb(37,"button",9),l.Xb("click",(function(){return t.custom()})),l.wc(38,"A custom message"),l.Pb(),l.Lb(39,"br"),l.Lb(40,"br"),l.Qb(41,"button",9),l.Xb("click",(function(){return l.mc(n),l.lc(46).open()})),l.wc(42,"A centered modal message"),l.Pb(),l.Lb(43,"br"),l.Lb(44,"br"),l.uc(45,g,4,1,"ng-template",10,11,l.vc)}2&n&&(l.gc("value",t.position),l.yb(1),l.gc("value",t.positions.TopRight),l.yb(2),l.gc("value",t.positions.Top),l.yb(2),l.gc("value",t.positions.TopLeft),l.yb(2),l.gc("value",t.positions.BottomRight),l.yb(2),l.gc("value",t.positions.Bottom),l.yb(2),l.gc("value",t.positions.BottomLeft),l.yb(2),l.gc("value",t.positions.Center),l.yb(32),l.gc("vclNotifier",t.modalNotificationOptions))},directives:[u.a,a.b,b.a,m],styles:["\n    .demoCustomNotifier {\n      background-color: black;\n      color: white;\n    }\n  "],encapsulation:2}),n})();function w(){return{label:"Notifier",tabs:{Demo:d,"README.md":{type:"md",content:"# vcl-notifications\n\nNotification messages for events with growl-style support\n\n## Usage\n\n```js\nimport { VCLNotifierModule } from '@vcl/ng-vcl';\n\n@NgModule({\n  imports: [ \n    VCLNotifierModule,\n  ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```ts\n@Component({ ... })\nexport class MyComponent {\n\n  constructor(private notifier: NotifierService) {}\n\n  info() {\n    this.notifier.queue({\n      content: 'A message'\n    });\n  }\n  info() {\n    this.notifier.info({\n      content: 'An info message'\n    });\n  }\n  success() {\n    this.notifier.success({\n      content: 'A success message',\n      position: NotifierPosition.BottomRight\n    });\n  }\n  warning() {\n    this.notifier.warning({\n      content: 'A warning',\n      showCloseButton: true,\n      timeout: 10000\n    });\n  }\n  error() {\n    this.notifier.error({\n      content: 'An error message',\n      timeout: false,\n      icon: 'fas:warning',\n      position: NotifierPosition.TopLeft,\n      class: 'my-error-message'\n    });\n  }\n}\n```\n\n```html\n<ng-template [vclNotifier]=\"{ title: 'Title' }\" #n=\"vclNotifier\">\n  <p>Hello</p>\n</ng-template>\n<button (click)=\"n.open()\">Show notification</button>\n\n```\n\n\n### API\n\n```ts\nexport enum NotifierType {\n  None,\n  Info,\n  Success,\n  Warning,\n  Error\n}\n\nexport enum NotifierPosition {\n  TopRight,\n  Top,\n  TopLeft,\n  BottomRight,\n  Bottom,\n  BottomLeft,\n  Center\n}\n\nexport interface NotifierOptions {\n  content?: string;\n  type?: NotifierType;\n  icon: string | false;\n  showCloseButton?: boolean;\n  position?: NotifierPosition;\n  timeout?: number | boolean;\n  class?: string;\n  context?: any;\n}\n```\n"},"demo.component.html":{type:"html",content:o("2qsK")},"demo.component.ts":{type:"ts",content:o("SNrt")}}}}let N=(()=>{class n{}return n.\u0275mod=l.Ib({type:n}),n.\u0275inj=l.Hb({factory:function(t){return new(t||n)},imports:[[i.c,s.m,r.b,c.VCLNotifierModule,c.VCLButtonGroupModule,c.VCLButtonModule,e.g.forChild([{path:"",component:r.a,data:{demo:w}}])]]}),n})()},SNrt:function(n,t,o){"use strict";o.r(t),t.default="import { NotifierPosition, NotifierService, NotifierOptions } from '@vcl/ng-vcl';\nimport { Component, Input, ViewEncapsulation, ViewChild, TemplateRef } from '@angular/core';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\nlet cnt = 1;\n\n@Component({\n  templateUrl: 'demo.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    .demoCustomNotifier {\n      background-color: black;\n      color: white;\n    }\n  `]\n})\nexport class NotifierDemoComponent {\n\n  constructor(private notifier: NotifierService) {}\n\n  positions = NotifierPosition;\n  position: NotifierPosition = NotifierPosition.TopRight;\n\n  @ViewChild('htmlNotification')\n  htmlNotification: TemplatePortal;\n\n  default() {\n    this.notifier.queue({\n      content: 'A message ' + cnt++,\n      position: this.position\n    });\n  }\n  info() {\n    this.notifier.info({\n      content: 'An info message ' + cnt++,\n      title: 'Info',\n      icon: 'vcl:info',\n      position: this.position,\n    });\n  }\n  success() {\n    this.notifier.success({\n      content: 'A success message ' + cnt++,\n      title: 'Success',\n      position: this.position\n    });\n  }\n  warning() {\n    this.notifier.warning({\n      content: 'A warning ' + cnt++,\n      title: 'Warning',\n      position: this.position\n    });\n  }\n  error() {\n    this.notifier.error({\n      content: 'An error message ' + cnt++,\n      title: 'Error',\n      position: this.position\n    });\n  }\n  custom() {\n    this.notifier.queue({\n      content: 'A custom class message',\n      position: this.position,\n      showCloseButton: false,\n      timeout: 10000,\n      class: 'demoCustomNotifier'\n    });\n  }\n\n  modalNotificationOptions: NotifierOptions = {\n    content: 'I am modal!', \n    position: NotifierPosition.Center, \n    title: 'Modal Title', \n    hasBackdrop: true, \n    timeout: false, \n    showCloseButton: true \n  }\n\n}\n"}}]);