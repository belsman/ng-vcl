!function(){function n(n,l){if(!(n instanceof l))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{C5SA:function(n,l,t){"use strict";t.r(l),l.default='<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Input (autoselect)</vcl-label>\n  <vcl-input-field>\n    <input vclInput autoselect=true />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Email</vcl-label>\n  <vcl-input-field>\n    <vcl-icon icon="mdi:email"></vcl-icon>\n    <input vclInput [(ngModel)]="data1" />\n    <button vcl-button square>\n      <vcl-icon icon="mdi:close"></vcl-icon>\n    </button>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Readonly input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'readonly\' [readonly]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'disabled\' [disabled]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput rows="3"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Autogrowing textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [disabled]="true"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},KH0R:function(n,l,t){"use strict";t.r(l),l.default="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class InputDemoComponent {\n  data1 = '';\n}\n"},"V+ad":function(l,t,o){"use strict";o.r(t),o.d(t,"demo",(function(){return I})),o.d(t,"InputDemoModule",(function(){return O}));var e,c=o("ofXK"),a=o("3Pt+"),u=o("tyNb"),r=o("19H1"),i=o("2FIb"),p=o("fXoL"),b=o("xsjC"),v=o("x1VK"),d=o("pKlR"),f=o("oZnf"),s=o("1/Kn"),m=o("9Rb9"),g=o("6B8K"),x=o("mo8z"),w=((e=function l(){n(this,l),this.data1=""}).\u0275fac=function(n){return new(n||e)},e.\u0275cmp=p.Db({type:e,selectors:[["ng-component"]],decls:43,vars:8,consts:[["vclInput","",3,"ngModel","ngModelChange"],["vclInput","","autoselect","true"],["icon","mdi:email"],["vcl-button","","square",""],["icon","mdi:close"],["vclInput","","value","readonly",3,"readonly"],["vclInput","","value","disabled",3,"disabled"],["vclInput","","rows","3"],["vclInput","",3,"autogrow","minRows","maxRows"],["vclInput","",3,"disabled"]],template:function(n,l){1&n&&(p.Pb(0,"vcl-form-control-group"),p.Pb(1,"vcl-label"),p.xc(2,"Basic input"),p.Ob(),p.Pb(3,"vcl-input-field"),p.Pb(4,"input",0),p.Wb("ngModelChange",(function(n){return l.data1=n})),p.Ob(),p.Ob(),p.Ob(),p.Pb(5,"vcl-form-control-group"),p.Pb(6,"vcl-label"),p.xc(7,"Input (autoselect)"),p.Ob(),p.Pb(8,"vcl-input-field"),p.Kb(9,"input",1),p.Ob(),p.Ob(),p.Pb(10,"vcl-form-control-group"),p.Pb(11,"vcl-label"),p.xc(12,"Email"),p.Ob(),p.Pb(13,"vcl-input-field"),p.Kb(14,"vcl-icon",2),p.Pb(15,"input",0),p.Wb("ngModelChange",(function(n){return l.data1=n})),p.Ob(),p.Pb(16,"button",3),p.Kb(17,"vcl-icon",4),p.Ob(),p.Ob(),p.Ob(),p.Pb(18,"vcl-form-control-group"),p.Pb(19,"vcl-label"),p.xc(20,"Readonly input"),p.Ob(),p.Pb(21,"vcl-input-field"),p.Kb(22,"input",5),p.Ob(),p.Ob(),p.Pb(23,"vcl-form-control-group"),p.Pb(24,"vcl-label"),p.xc(25,"Disabled input"),p.Ob(),p.Pb(26,"vcl-input-field"),p.Kb(27,"input",6),p.Ob(),p.Ob(),p.Pb(28,"vcl-form-control-group"),p.Pb(29,"vcl-label"),p.xc(30,"textarea"),p.Ob(),p.Pb(31,"vcl-input-field"),p.Kb(32,"textarea",7),p.Ob(),p.Ob(),p.Pb(33,"vcl-form-control-group"),p.Pb(34,"vcl-label"),p.xc(35,"Autogrowing textarea"),p.Ob(),p.Pb(36,"vcl-input-field"),p.Kb(37,"textarea",8),p.Ob(),p.Ob(),p.Pb(38,"vcl-form-control-group"),p.Pb(39,"vcl-label"),p.xc(40,"Disabled textarea"),p.Ob(),p.Pb(41,"vcl-input-field"),p.Kb(42,"textarea",9),p.Ob(),p.Ob()),2&n&&(p.yb(4),p.fc("ngModel",l.data1),p.yb(11),p.fc("ngModel",l.data1),p.yb(7),p.fc("readonly",!0),p.yb(5),p.fc("disabled",!0),p.yb(10),p.fc("autogrow",!0)("minRows",5)("maxRows",10),p.yb(5),p.fc("disabled",!0))},directives:[b.a,v.a,d.a,f.a,s.a,a.c,a.r,a.u,m.a,g.b,x.a],encapsulation:2}),e);function I(){return{label:"Input",tabs:{Demo:w,"README.md":{type:"md",content:'# input\n\nEnhanced text input\n\n## Usage\n\n```js\nimport { VCLInputModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLInputModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Basic textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [(ngModel)]="data1" [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n```\n\n### API\n\n#### input[vclInput] attributes\n\nName            | Type    | Default | Description\n--------------- | ------- | ------- | -----------------------------------------------\n`disabled`      | boolean | false   | Disables the input when true\n`autoselect`    | boolean | false   | Selects text on focus\n\n\n#### textarea[vclInput] Attributes\n\n| Name                | Type        | Default            | Description\n| ------------        | ----------- | ------------------ |--------------\n| `autogrow`          | boolean     | false              | Adjusts the `rows` attribute so it matches the current values number of lines\n| `minRows`           | number      |                    | The min value for `rows` when using autogrow\n| `maxRows`           | number      |                    | The max value for `rows` when using autogrow\n| `autoselect`        | boolean     | false              | Selects text on focus\n'},"demo.component.html":{type:"html",content:o("C5SA")},"demo.component.ts":{type:"ts",content:o("KH0R")}}}}var P,O=((P=function l(){n(this,l)}).\u0275mod=p.Hb({type:P}),P.\u0275inj=p.Gb({factory:function(n){return new(n||P)},imports:[[c.c,a.m,i.b,r.VCLInputModule,r.VCLIconModule,r.VCLButtonModule,u.g.forChild([{path:"",component:i.a,data:{demo:I}}])]]}),P)}}])}();