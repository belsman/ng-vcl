{"version":3,"sources":["webpack:///./demo/app/demos/layer/bar.component.html","webpack:///./demo/app/demos/layer/bar.component.ts","webpack:///./demo/app/demos/layer/demo.component.html","webpack:///./demo/app/demos/layer/demo.component.ts","webpack:///./demo/app/demos/layer/demo.module.ts","webpack:///./demo/app/demos/layer/nag.component.html","webpack:///./demo/app/demos/layer/nag.component.ts","webpack:///./demo/app/modules/demo/demo.component.html","webpack:///./demo/app/modules/demo/demo.component.ts","webpack:///./demo/app/modules/demo/demo.module.ts","webpack:///./demo/app/demos/layer/bar.component.html?0924","webpack:///./demo/app/demos/layer/demo.component.html?0309","webpack:///./demo/app/demos/layer/nag.component.html?5e51","webpack:///./demo/app/demos/layer/bar.component.ts?44da","webpack:///./demo/app/demos/layer/demo.component.ts?643d","webpack:///./demo/app/demos/layer/nag.component.ts?6865","webpack:///./lib/ng-vcl/src/layer/README.md"],"names":[],"mappings":"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","file":"demos-layer-demo-module.js","sourcesContent":["module.exports = \"<div class=\\\"vclPanel vclPanelDialog vclNoMargin\\\">\\n  <div class=\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <h3 class=\\\"vclPanelTitle\\\">{{title}}</h3>\\n    <button vcl-square-button class=\\\"vclTransparent\\\" (click)=\\\"close()\\\">\\n      <vcl-icon icon=\\\"fas:times\\\"></vcl-icon>\\n    </button>\\n  </div>\\n  <div class=\\\"vclPanelBody\\\">\\n    <p class=\\\"vclPanelContent\\\">\\n      bar layer content\\n    </p>\\n  </div>\\n  <div class=\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n    <div></div>\\n    <div class=\\\"vclLooseButtonGroup\\\">\\n      <button vcl-button class=\\\"vclTransparent vclOutline\\\" (click)=\\\"close()\\\">Close Layer</button>\\n      <button vcl-button class=\\\"vclEmphasized\\\" (click)=\\\"close('data')\\\">Close Layer with result</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { LayerRef } from '@ng-vcl/ng-vcl';\n\n@Component({\n  templateUrl: 'bar.component.html',\n})\nexport class BarComponent {\n\n  constructor(private layer: LayerRef) { }\n\n  get title() {\n    return this.layer.data.title;\n  }\n\n  close(value?: string) {\n    this.layer.close({\n      value\n    });\n  }\n}\n","module.exports = \"<button vcl-button (click)=\\\"layer.open()\\\">Open inline layer</button>\\n<br><br>\\n<button vcl-button (click)=\\\"openBarComponent()\\\">Open bar component as layer</button>\\n<br><br>\\n<button vcl-button (click)=\\\"openNagLayer()\\\">Open nag layer</button>\\n\\n<vcl-layer #layer=\\\"vclLayer\\\">\\n  <div class=\\\"vclPanel vclPanelDialog vclNoMargin\\\">\\n    <div class=\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n      <h3 class=\\\"vclPanelTitle\\\">\\n        Layer\\n      </h3>\\n      <button vcl-square-button class=\\\"vclTransparent\\\" (click)=\\\"layer.close()\\\">\\n        <vcl-icon icon=\\\"fas:times\\\"></vcl-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"vclPanelBody\\\">\\n      <p class=\\\"vclPanelContent\\\">\\n        Press escape or click outside of layer to close<br><br>\\n      </p>\\n    </div>\\n    <div class=\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\">\\n      <div></div>\\n      <div class=\\\"vclLooseButtonGroup\\\">\\n        <button vcl-button icon=\\\"fas:times\\\" class=\\\"vclTransparent vclOutline\\\" (click)=\\\"layer.close()\\\">Close layer</button>\\n      </div>\\n    </div>\\n  </div>\\n</vcl-layer>\\n\"","import { Component } from '@angular/core';\nimport { LayerService } from '@ng-vcl/ng-vcl';\nimport { BarComponent } from './bar.component';\nimport { NagLayer } from './nag.component';\n\n@Component({\n  templateUrl: 'demo.component.html',\n})\nexport class LayerDemoComponent {\n\n  constructor(\n    private nagLayer: NagLayer,\n    private layerService: LayerService,\n  ) {  }\n\n  openBarComponent() {\n    const layer = this.layerService.open(BarComponent, {\n      data: {\n        title: 'bar component layer title'\n      },\n      closeOnBackdropClick: false,\n      closeOnEscape: false\n    });\n    layer.afterClose.subscribe(result => {\n      layer.destroy(); // Layer is not needed anymore\n      console.log('Bar component result:' + result.value);\n    });\n  }\n\n  openNagLayer() {\n    this.nagLayer.open({\n      data: {\n        allowDecline: true\n      }\n    }).subscribe((result) => {\n      if (result.accept) {\n        console.log('Accepted');\n      } else {\n        console.log('Declined');\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { VCLLayerModule, VCLButtonModule, VCLIconModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { LayerDemoComponent } from './demo.component';\nimport { NagComponent, NagLayer } from './nag.component';\nimport { BarComponent } from './bar.component';\n\nexport function demo() {\n  return {\n    label: 'Layer',\n    tabs: {\n      Demo: LayerDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/layer/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      },\n      'nag.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./nag.component.html')\n      },\n      'nag.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./nag.component.ts')\n      },\n      'bar.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./bar.component.html')\n      },\n      'bar.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./bar.component.ts')\n      }\n    },\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoModule,\n    VCLLayerModule,\n    VCLButtonModule,\n    VCLIconModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo},\n    }]),\n  ],\n  entryComponents: [\n    LayerDemoComponent,\n    BarComponent,\n    NagComponent\n  ],\n  declarations: [\n    LayerDemoComponent,\n    BarComponent,\n    NagComponent\n  ],\n  providers: [\n    NagLayer\n  ]\n})\nexport class LayerDemoModule { }\n\n","module.exports = \"<div class=\\\"vclLayoutWidth vclLayoutHorizontal vclLayoutCenter\\\">\\n  <div class=\\\"vclLayoutFlex vclLayoutThree\\\">\\n    Cookies and similar technologies help us deliver our services. By using our services,\\n    you agree to our use of cookies. You can find further information about the\\n    use of Cookies on this website in our <a href=\\\"#\\\">privacy policy</a>.\\n  </div>\\n  <div class=\\\"vclLayoutHorizontal vclLayoutCenterJustified vclLayoutCenter vclGutterMarginLR\\\">\\n    <div class=\\\"vclLooseButtonGroup\\\">\\n      <button *ngIf=\\\"layer.data.allowDecline\\\" vcl-button type=\\\"button\\\" (click)=\\\"decline()\\\">Decline</button>\\n      <button vcl-button type=\\\"button\\\" class=\\\"vclEmphasized\\\" (click)=\\\"accept()\\\">Accept</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Injector, Injectable, Inject, forwardRef, HostBinding } from '@angular/core';\nimport { LayerRef, LayerConfig } from '@ng-vcl/ng-vcl';\nimport { Overlay } from '@angular/cdk/overlay';\n\nexport interface NagLayerData {\n  allowDecline: boolean;\n}\n\nexport interface NagLayerResult {\n  accept: boolean;\n}\n\n@Component({\n  templateUrl: 'nag.component.html',\n  styles: [`:host { width: 100%; }`]\n})\nexport class NagComponent {\n  // Utilize forwardRef to avoid using NagLayer before it was declared\n  constructor(@Inject(forwardRef(() => NagLayer)) public layer: NagLayer) { }\n\n  @HostBinding('class.vclNag')\n  @HostBinding('class.vclContainer')\n  @HostBinding('class.vclLayoutHorizontal')\n  @HostBinding('class.vclLayoutCenterJustified')\n  _hostClasses = true;\n\n  accept() {\n    this.layer.close({\n      accept: true\n    });\n  }\n\n  decline() {\n    this.layer.close({\n      accept: false\n    });\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NagLayer extends LayerRef<NagLayerData, NagLayerResult> {\n\n  constructor(injector: Injector, private overlay: Overlay) {\n    super(injector);\n  }\n\n  templateOrComponent = NagComponent;\n\n  getLayerConfig(): LayerConfig {\n    return new LayerConfig({\n      closeOnEscape: false,\n      hasBackdrop: false,\n      width: '100%',\n      positionStrategy: this.overlay.position()\n        .global()\n        .bottom()\n        .centerHorizontally()\n    });\n  }\n\n\n}\n","module.exports = \"<h2 class=\\\"vclArticleHeader\\\"> {{title}}</h2>\\n<div *ngIf=\\\"tabs.length>0\\\">\\n  <vcl-tab-nav borders=true>\\n    <vcl-tab *ngFor=\\\"let tab of tabs\\\">\\n      <vcl-tab-label>{{tab.name}}</vcl-tab-label>\\n      <div *ngIf=\\\"tab.type==='component'\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.content\\\"></ng-template>\\n      </div>\\n      <div *ngIf=\\\"tab.type==='text'\\\"><pre>{{tab.content}}</pre></div>\\n      <div *ngIf=\\\"tab.type==='html'\\\" [innerHtml]=\\\"tab.content\\\"></div>\\n      <div *ngIf=\\\"tab.type==='md'\\\"   class=\\\"markdown-body\\\"  [innerHtml]=\\\"tab.content\\\"></div>\\n      <pre *ngIf=\\\"tab.type==='pre'\\\"  [innerHtml]=\\\"tab.content\\\"></pre>\\n    </vcl-tab>\\n  </vcl-tab-nav>\\n</div>\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Component, OnInit } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n\n  title: string;\n  tabs: {name: string, type: string, content: any }[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    const data = this.activatedRoute.snapshot.data.demo();\n    if (data) {\n      this.title = data.label;\n      if (data.tabs) {\n        this.tabs = Object.keys(data.tabs).map(key => {\n          let type;\n          let content;\n          if (typeof data.tabs[key] === 'object' && data.tabs[key]) {\n            type = data.tabs[key].type;\n            if (type === 'pre' || type === 'html' || type === 'md') {\n              content = this.sanitizer.bypassSecurityTrustHtml(data.tabs[key].content);\n            } else {\n              content = data.tabs[key].content;\n            }\n          } else if (typeof data.tabs[key] === 'function') {\n            type = 'component';\n            content = new ComponentPortal(data.tabs[key]);\n          }\n\n          return {\n            name: key,\n            content,\n            type\n          };\n      });\n      } else {\n        this.tabs = [];\n      }\n    } else {\n      this.title = 'ng-vcl';\n      this.tabs = [];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VCLTabNavModule } from '@ng-vcl/ng-vcl';\nimport { DemoComponent } from './demo.component';\nimport { PortalModule } from '@angular/cdk/portal';\n\nexport { DemoComponent };\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VCLTabNavModule,\n    PortalModule\n  ],\n  declarations: [ DemoComponent, ]\n})\nexport class DemoModule { }\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanel vclPanelDialog vclNoMargin\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelTitle\\\"</span>&gt;</span>{{title}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-square-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-icon</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-icon</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelBody\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelContent\\\"</span>&gt;</span>\\n      bar layer content\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent vclOutline\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close()\\\"</span>&gt;</span>Close Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclEmphasized\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"close('data')\\\"</span>&gt;</span>Close Layer with result<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.open()\\\"</span>&gt;</span>Open inline layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"openBarComponent()\\\"</span>&gt;</span>Open bar component as layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"openNagLayer()\\\"</span>&gt;</span>Open nag layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-layer</span> #<span class=\\\"hljs-attr\\\">layer</span>=<span class=\\\"hljs-string\\\">\\\"vclLayer\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanel vclPanelDialog vclNoMargin\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelTitle\\\"</span>&gt;</span>\\n        Layer\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-square-button</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.close()\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-icon</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-icon</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelBody\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelContent\\\"</span>&gt;</span>\\n        Press escape or click outside of layer to close<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">br</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">icon</span>=<span class=\\\"hljs-string\\\">\\\"fas:times\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclTransparent vclOutline\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"layer.close()\\\"</span>&gt;</span>Close layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLayoutWidth vclLayoutHorizontal vclLayoutCenter\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLayoutFlex vclLayoutThree\\\"</span>&gt;</span>\\n    Cookies and similar technologies help us deliver our services. By using our services,\\n    you agree to our use of cookies. You can find further information about the\\n    use of Cookies on this website in our <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">a</span> <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"#\\\"</span>&gt;</span>privacy policy<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">a</span>&gt;</span>.\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLayoutHorizontal vclLayoutCenterJustified vclLayoutCenter vclGutterMarginLR\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclLooseButtonGroup\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">\\\"layer.data.allowDecline\\\"</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"button\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"decline()\\\"</span>&gt;</span>Decline<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"button\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"vclEmphasized\\\"</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">\\\"accept()\\\"</span>&gt;</span>Accept<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { LayerRef } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'bar.component.html'</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> BarComponent {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">private</span> layer: LayerRef</span>) { }\\n\\n  <span class=\\\"hljs-keyword\\\">get</span> title() {\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">this</span>.layer.data.title;\\n  }\\n\\n  close(value?: <span class=\\\"hljs-built_in\\\">string</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close({\\n      value\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { LayerService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { BarComponent } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./bar.component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { NagLayer } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./nag.component'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>,\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> LayerDemoComponent {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\">\\n    <span class=\\\"hljs-keyword\\\">private</span> nagLayer: NagLayer,\\n    <span class=\\\"hljs-keyword\\\">private</span> layerService: LayerService,\\n  </span>) {  }\\n\\n  openBarComponent() {\\n    <span class=\\\"hljs-keyword\\\">const</span> layer = <span class=\\\"hljs-keyword\\\">this</span>.layerService.open(BarComponent, {\\n      data: {\\n        title: <span class=\\\"hljs-string\\\">'bar component layer title'</span>\\n      },\\n      closeOnBackdropClick: <span class=\\\"hljs-literal\\\">false</span>,\\n      closeOnEscape: <span class=\\\"hljs-literal\\\">false</span>\\n    });\\n    layer.afterClose.subscribe(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">result</span> =&gt;</span> {\\n      layer.destroy(); <span class=\\\"hljs-comment\\\">// Layer is not needed anymore</span>\\n      <span class=\\\"hljs-built_in\\\">console</span>.log(<span class=\\\"hljs-string\\\">'Bar component result:'</span> + result.value);\\n    });\\n  }\\n\\n  openNagLayer() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.nagLayer.open({\\n      data: {\\n        allowDecline: <span class=\\\"hljs-literal\\\">true</span>\\n      }\\n    }).subscribe(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">result</span>) =&gt;</span> {\\n      <span class=\\\"hljs-keyword\\\">if</span> (result.accept) {\\n        <span class=\\\"hljs-built_in\\\">console</span>.log(<span class=\\\"hljs-string\\\">'Accepted'</span>);\\n      } <span class=\\\"hljs-keyword\\\">else</span> {\\n        <span class=\\\"hljs-built_in\\\">console</span>.log(<span class=\\\"hljs-string\\\">'Declined'</span>);\\n      }\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, Injector, Injectable, Inject, forwardRef, HostBinding } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { LayerRef, LayerConfig } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Overlay } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/cdk/overlay'</span>;\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> NagLayerData {\\n  allowDecline: <span class=\\\"hljs-built_in\\\">boolean</span>;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> NagLayerResult {\\n  accept: <span class=\\\"hljs-built_in\\\">boolean</span>;\\n}\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'nag.component.html'</span>,\\n  styles: [<span class=\\\"hljs-string\\\">`:host { width: 100%; }`</span>]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> NagComponent {\\n  <span class=\\\"hljs-comment\\\">// Utilize forwardRef to avoid using NagLayer before it was declared</span>\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-meta\\\">@Inject</span>(forwardRef(() =&gt; NagLayer)) <span class=\\\"hljs-keyword\\\">public</span> layer: NagLayer</span>) { }\\n\\n  <span class=\\\"hljs-meta\\\">@HostBinding</span>(<span class=\\\"hljs-string\\\">'class.vclNag'</span>)\\n  <span class=\\\"hljs-meta\\\">@HostBinding</span>(<span class=\\\"hljs-string\\\">'class.vclContainer'</span>)\\n  <span class=\\\"hljs-meta\\\">@HostBinding</span>(<span class=\\\"hljs-string\\\">'class.vclLayoutHorizontal'</span>)\\n  <span class=\\\"hljs-meta\\\">@HostBinding</span>(<span class=\\\"hljs-string\\\">'class.vclLayoutCenterJustified'</span>)\\n  _hostClasses = <span class=\\\"hljs-literal\\\">true</span>;\\n\\n  accept() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close({\\n      accept: <span class=\\\"hljs-literal\\\">true</span>\\n    });\\n  }\\n\\n  decline() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close({\\n      accept: <span class=\\\"hljs-literal\\\">false</span>\\n    });\\n  }\\n}\\n\\n<span class=\\\"hljs-meta\\\">@Injectable</span>({\\n  providedIn: <span class=\\\"hljs-string\\\">'root'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> NagLayer <span class=\\\"hljs-keyword\\\">extends</span> LayerRef&lt;NagLayerData, NagLayerResult&gt; {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\">injector: Injector, <span class=\\\"hljs-keyword\\\">private</span> overlay: Overlay</span>) {\\n    <span class=\\\"hljs-keyword\\\">super</span>(injector);\\n  }\\n\\n  templateOrComponent = NagComponent;\\n\\n  getLayerConfig(): LayerConfig {\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">new</span> LayerConfig({\\n      closeOnEscape: <span class=\\\"hljs-literal\\\">false</span>,\\n      hasBackdrop: <span class=\\\"hljs-literal\\\">false</span>,\\n      width: <span class=\\\"hljs-string\\\">'100%'</span>,\\n      positionStrategy: <span class=\\\"hljs-keyword\\\">this</span>.overlay.position()\\n        .global()\\n        .bottom()\\n        .centerHorizontally()\\n    });\\n  }\\n\\n\\n}\\n\"","module.exports = \"<h1 id=\\\"vcl-layer\\\">vcl-layer</h1>\\n<p>An overlay placed in the center of the screen.</p>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<h3 id=\\\"the-layer-reference-object\\\">The layer reference object</h3>\\n<p>A layer implements the <code>LayerRef</code> interface which allows to listen for events and open/close the layer.<br>It can be created via the <code>vcl-layer</code> component or with the <code>LayerService</code> from a component class:</p>\\n<h4 id=\\\"vcl-layer-1\\\">vcl-layer</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;myTemplateLayer.open()&quot;</span>&gt;</span>Open Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-layer</span> #<span class=\\\"hljs-attr\\\">myTemplateLayer</span>=<span class=\\\"hljs-string\\\">&quot;vclLayer&quot;</span> [<span class=\\\"hljs-attr\\\">modal</span>]=<span class=\\\"hljs-string\\\">&quot;true&quot;</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanel vclNoMargin&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanelBody&quot;</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;vclPanelContent&quot;</span>&gt;</span>\\n        Content\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">button</span> <span class=\\\"hljs-attr\\\">vcl-button</span> (<span class=\\\"hljs-attr\\\">click</span>)=<span class=\\\"hljs-string\\\">&quot;myTemplateLayer.close()&quot;</span>&gt;</span>Close Layer<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-layer</span>&gt;</span></pre>\\n<h4 id=\\\"component-layer\\\">Component Layer</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { LayerRef } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-comment\\\">// This is just a common component</span>\\n@Component({ ... })\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">MyLayerComponent</span> </span>{\\n\\n  <span class=\\\"hljs-comment\\\">// layer is a reference to the current layer.</span>\\n  <span class=\\\"hljs-comment\\\">// Its value is null when the component is not used as a layer</span>\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(@Optional() private layer: LayerRef) { }\\n\\n  close() {\\n    <span class=\\\"hljs-comment\\\">// Close the layer</span>\\n    <span class=\\\"hljs-keyword\\\">this</span>.layer.close(<span class=\\\"hljs-string\\\">&apos;result&apos;</span>);\\n  }\\n}</pre>\\n<h4 id=\\\"using-the-layers\\\">Using the Layers</h4>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { LayerService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { MyLayerComponent } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;./my-layer.component&apos;</span>;\\n\\n@Component({ ... })\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">DemoComponent</span> </span>{\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(\\n    private layerService: LayerService // This is the reference to the component layer\\n  ) {}\\n\\n  openComponentLayer() {\\n    <span class=\\\"hljs-keyword\\\">const</span> layer = <span class=\\\"hljs-keyword\\\">this</span>.layerService.open(MyLayerComponent).subscribe(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">result</span> =&gt;</span> {\\n      <span class=\\\"hljs-built_in\\\">console</span>.log(result);\\n    });\\n  }\\n}</pre>\\n<h3 id=\\\"api\\\">API</h3>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">export</span> interface LayerRef {\\n  readonly visible: boolean;\\n  readonly afterClose: Observable&lt;any | <span class=\\\"hljs-literal\\\">undefined</span>&gt;;\\n  open(config?: LayerConfig): Observable&lt;any&gt;;\\n  close(result?: any): <span class=\\\"hljs-keyword\\\">void</span>;\\n  destroy(): <span class=\\\"hljs-keyword\\\">void</span>;\\n}\\n\\n<span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">LayerService</span> </span>{\\n  create(component: any, config?: LayerConfig): Layer;\\n  open(component: ComponentType&lt;TComponent&gt;, config?: LayerConfig): Layer;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">LayerConfig</span>&lt;<span class=\\\"hljs-title\\\">TData</span> </span>= any&gt; extends OverlayConfig {\\n  data?: TData;\\n  closeOnBackdropClick?: boolean;\\n  closeOnEscape?: boolean;\\n}\\n</pre>\\n<h4 id=\\\"vcl-layer-attributes\\\">vcl-layer attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>closeOnBackdropClick</code></td>\\n<td>boolean</td>\\n<td>true</td>\\n<td>Wether a the layer should close when clicked outside</td>\\n</tr>\\n<tr>\\n<td><code>closeOnEscape</code></td>\\n<td>boolean</td>\\n<td>true</td>\\n<td>Wether a the layer should close when escape is pressed</td>\\n</tr>\\n<tr>\\n<td><code>position</code></td>\\n<td>PositionStrategy</td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody></table>\\n\""],"sourceRoot":""}