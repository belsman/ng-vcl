(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{C5SA:function(n,l,t){"use strict";t.r(l),l.default='<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Input (autoselect)</vcl-label>\n  <vcl-input-field>\n    <input vclInput autoselect=true />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Email</vcl-label>\n  <vcl-input-field>\n    <vcl-icon icon="mdi:email"></vcl-icon>\n    <input vclInput [(ngModel)]="data1" />\n    <button vcl-button square>\n      <vcl-icon icon="mdi:close"></vcl-icon>\n    </button>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Readonly input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'readonly\' [readonly]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled input</vcl-label>\n  <vcl-input-field>\n    <input vclInput value=\'disabled\' [disabled]="true" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput rows="3"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Autogrowing textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Disabled textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [disabled]="true"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n'},KH0R:function(n,l,t){"use strict";t.r(l),l.default="import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class InputDemoComponent {\n  data1 = '';\n}\n"},"V+ad":function(n,l,t){"use strict";t.r(l),t.d(l,"demo",(function(){return x})),t.d(l,"InputDemoModule",(function(){return w}));var o=t("ofXK"),e=t("3Pt+"),c=t("tyNb"),a=t("19H1"),u=t("2FIb"),r=t("fXoL"),i=t("xsjC"),p=t("x1VK"),b=t("pKlR"),v=t("oZnf"),d=t("1/Kn"),s=t("9Rb9"),f=t("6B8K"),m=t("mo8z");let g=(()=>{class n{constructor(){this.data1=""}}return n.\u0275fac=function(l){return new(l||n)},n.\u0275cmp=r.Db({type:n,selectors:[["ng-component"]],decls:43,vars:8,consts:[["vclInput","",3,"ngModel","ngModelChange"],["vclInput","","autoselect","true"],["icon","mdi:email"],["vcl-button","","square",""],["icon","mdi:close"],["vclInput","","value","readonly",3,"readonly"],["vclInput","","value","disabled",3,"disabled"],["vclInput","","rows","3"],["vclInput","",3,"autogrow","minRows","maxRows"],["vclInput","",3,"disabled"]],template:function(n,l){1&n&&(r.Pb(0,"vcl-form-control-group"),r.Pb(1,"vcl-label"),r.xc(2,"Basic input"),r.Ob(),r.Pb(3,"vcl-input-field"),r.Pb(4,"input",0),r.Wb("ngModelChange",(function(n){return l.data1=n})),r.Ob(),r.Ob(),r.Ob(),r.Pb(5,"vcl-form-control-group"),r.Pb(6,"vcl-label"),r.xc(7,"Input (autoselect)"),r.Ob(),r.Pb(8,"vcl-input-field"),r.Kb(9,"input",1),r.Ob(),r.Ob(),r.Pb(10,"vcl-form-control-group"),r.Pb(11,"vcl-label"),r.xc(12,"Email"),r.Ob(),r.Pb(13,"vcl-input-field"),r.Kb(14,"vcl-icon",2),r.Pb(15,"input",0),r.Wb("ngModelChange",(function(n){return l.data1=n})),r.Ob(),r.Pb(16,"button",3),r.Kb(17,"vcl-icon",4),r.Ob(),r.Ob(),r.Ob(),r.Pb(18,"vcl-form-control-group"),r.Pb(19,"vcl-label"),r.xc(20,"Readonly input"),r.Ob(),r.Pb(21,"vcl-input-field"),r.Kb(22,"input",5),r.Ob(),r.Ob(),r.Pb(23,"vcl-form-control-group"),r.Pb(24,"vcl-label"),r.xc(25,"Disabled input"),r.Ob(),r.Pb(26,"vcl-input-field"),r.Kb(27,"input",6),r.Ob(),r.Ob(),r.Pb(28,"vcl-form-control-group"),r.Pb(29,"vcl-label"),r.xc(30,"textarea"),r.Ob(),r.Pb(31,"vcl-input-field"),r.Kb(32,"textarea",7),r.Ob(),r.Ob(),r.Pb(33,"vcl-form-control-group"),r.Pb(34,"vcl-label"),r.xc(35,"Autogrowing textarea"),r.Ob(),r.Pb(36,"vcl-input-field"),r.Kb(37,"textarea",8),r.Ob(),r.Ob(),r.Pb(38,"vcl-form-control-group"),r.Pb(39,"vcl-label"),r.xc(40,"Disabled textarea"),r.Ob(),r.Pb(41,"vcl-input-field"),r.Kb(42,"textarea",9),r.Ob(),r.Ob()),2&n&&(r.yb(4),r.fc("ngModel",l.data1),r.yb(11),r.fc("ngModel",l.data1),r.yb(7),r.fc("readonly",!0),r.yb(5),r.fc("disabled",!0),r.yb(10),r.fc("autogrow",!0)("minRows",5)("maxRows",10),r.yb(5),r.fc("disabled",!0))},directives:[i.a,p.a,b.a,v.a,d.a,e.c,e.r,e.u,s.a,f.b,m.a],encapsulation:2}),n})();function x(){return{label:"Input",tabs:{Demo:g,"README.md":{type:"md",content:'# input\n\nEnhanced text input\n\n## Usage\n\n```js\nimport { VCLInputModule } from \'@vcl/ng-vcl\';\n\n@NgModule({\n  imports: [ VCLInputModule ],\n  ...\n})\nexport class AppComponent {}\n```\n\n```html\n<vcl-form-control-group>\n  <vcl-label>Basic input</vcl-label>\n  <vcl-input-field>\n    <input vclInput [(ngModel)]="data1" />\n  </vcl-input-field>\n</vcl-form-control-group>\n\n<vcl-form-control-group>\n  <vcl-label>Basic textarea</vcl-label>\n  <vcl-input-field>\n    <textarea vclInput [(ngModel)]="data1" [autogrow]="true" [minRows]="5" [maxRows]="10"></textarea>\n  </vcl-input-field>\n</vcl-form-control-group>\n\n```\n\n### API\n\n#### input[vclInput] attributes\n\nName            | Type    | Default | Description\n--------------- | ------- | ------- | -----------------------------------------------\n`disabled`      | boolean | false   | Disables the input when true\n`autoselect`    | boolean | false   | Selects text on focus\n\n\n#### textarea[vclInput] Attributes\n\n| Name                | Type        | Default            | Description\n| ------------        | ----------- | ------------------ |--------------\n| `autogrow`          | boolean     | false              | Adjusts the `rows` attribute so it matches the current values number of lines\n| `minRows`           | number      |                    | The min value for `rows` when using autogrow\n| `maxRows`           | number      |                    | The max value for `rows` when using autogrow\n| `autoselect`        | boolean     | false              | Selects text on focus\n'},"demo.component.html":{type:"html",content:t("C5SA")},"demo.component.ts":{type:"ts",content:t("KH0R")}}}}let w=(()=>{class n{}return n.\u0275mod=r.Hb({type:n}),n.\u0275inj=r.Gb({factory:function(l){return new(l||n)},imports:[[o.c,e.m,u.b,a.VCLInputModule,a.VCLIconModule,a.VCLButtonModule,c.g.forChild([{path:"",component:u.a,data:{demo:x}}])]]}),n})()}}]);