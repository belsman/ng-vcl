(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"4UGd":function(s,l){s.exports='<span class="hljs-keyword">import</span> { CanDeactivate } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { Injectable } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { LayerDemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./demo.component\'</span>;\n<span class="hljs-keyword">import</span> { LayerService } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-vcl/ng-vcl\'</span>;\n\n<span class="hljs-meta">@Injectable</span>()\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> LayerDemoCanDeactivateGuard <span class="hljs-keyword">implements</span> CanDeactivate&lt;LayerDemoComponent&gt; {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> layer: LayerService</span>) {}\n\n  canDeactivate() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.layer.hasVisibleLayers()) {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'You cannot navigate, when there are visible layers\'</span>);\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n  }\n}\n'},"4cmz":function(s,l){s.exports='<span class="hljs-keyword">import</span> { LayerRef } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-vcl/ng-vcl\'</span>;\n<span class="hljs-keyword">import</span> { Component, Input } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'bar.component.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> BarComponent {\n\n  <span class="hljs-meta">@Input</span>()\n  title: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> layerRef: LayerRef</span>) { }\n\n  onClose() {\n    <span class="hljs-keyword">this</span>.layerRef.close(<span class="hljs-string">\'close\'</span>);\n  }\n\n  onSend() {\n    <span class="hljs-keyword">this</span>.layerRef.send(<span class="hljs-string">\'send\'</span>);\n  }\n}\n'},"7seb":function(s,l){s.exports='<span class="hljs-keyword">import</span> { Component, HostListener, ViewChild, Inject } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { LayerService, LayerRef } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-vcl/ng-vcl\'</span>;\n<span class="hljs-keyword">import</span> { FooLayer, FooComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./foo.layer\'</span>;\n<span class="hljs-keyword">import</span> { BarComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./bar.component\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> LayerDemoComponent {\n\n  <span class="hljs-keyword">private</span> dynamicBarLayerRef: LayerRef;\n\n  <span class="hljs-comment">// Reference to the template layer</span>\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">\'layerModal\'</span>)\n  layerModal: LayerRef;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">private</span> layerService: LayerService,\n    <span class="hljs-keyword">private</span> fooLayerRef: FooLayer\n  </span>) {\n    <span class="hljs-keyword">this</span>.dynamicBarLayerRef = <span class="hljs-keyword">this</span>.layerService.create(BarComponent, {\n      modal: <span class="hljs-literal">true</span>\n    });\n  }\n\n  <span class="hljs-comment">// Close the top layer when escape is pressed</span>\n  <span class="hljs-meta">@HostListener</span>(<span class="hljs-string">\'document:keyup\'</span>, [<span class="hljs-string">\'$event\'</span>])\n  onKeyUp(ev: KeyboardEvent) {\n    <span class="hljs-keyword">if</span> (ev.key === <span class="hljs-string">\'Escape\'</span> &amp;&amp; <span class="hljs-keyword">this</span>.layerService.hasVisibleLayers()) {\n      <span class="hljs-keyword">this</span>.layerService.closeTop();\n    }\n  }\n\n  openLayer() {\n    <span class="hljs-keyword">this</span>.layerModal.open();\n  }\n\n  openFooLayer() {\n    <span class="hljs-keyword">this</span>.fooLayerRef.open({\n      title: <span class="hljs-string">\'FooComponent via @Layer\'</span>\n    }).subscribe(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> {\n      <span class="hljs-comment">// Layer sends data</span>\n      <span class="hljs-built_in">console</span>.log(data);\n    }, <span class="hljs-literal">undefined</span>, <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n      <span class="hljs-comment">// Layer is closed</span>\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'layer closed\'</span>);\n    });\n  }\n\n  openBarLayer() {\n    <span class="hljs-keyword">this</span>.dynamicBarLayerRef.open({\n      title: <span class="hljs-string">\'BarComponent via layerService.create\'</span>\n    }).subscribe(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> {\n      <span class="hljs-comment">// Layer sends data</span>\n      <span class="hljs-built_in">console</span>.log(data);\n    }, <span class="hljs-literal">undefined</span>, <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n      <span class="hljs-comment">// Layer is closed</span>\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'layer closed\'</span>);\n    });\n  }\n}\n'},AM2K:function(s,l){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanel vclPanelDialog vclNoMargin"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelTitle"</span>&gt;</span>{{title}}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onClose()"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcon fa fa-times"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"img"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelBody"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelContent"</span>&gt;</span>\n      Send data by pressing the buttons\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclLooseButtonGroup"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent vclOutline"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onClose()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Close Layer<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclEmphasized"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onSend()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Send Data<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},DvOU:function(s,l){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanel vclPanelDialog vclNoMargin"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelTitle"</span>&gt;</span>{{title}}<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onClose()"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcon fa fa-times"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"img"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelBody"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelContent"</span>&gt;</span>\n      Send data by pressing the buttons\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclLooseButtonGroup"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent vclOutline"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onClose()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Close Layer<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclEmphasized"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"onSend()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Send Data<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},QuAR:function(s,l){s.exports='<span class="hljs-keyword">import</span> { Component, Input, EventEmitter, Output } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { Layer, LayerRef, WormholeEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-vcl/ng-vcl\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'foo.layer.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> FooComponent {\n\n  <span class="hljs-meta">@Input</span>()\n  title: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-meta">@Output</span>()\n  close = <span class="hljs-keyword">new</span> EventEmitter();\n\n  <span class="hljs-meta">@Output</span>()\n  send = <span class="hljs-keyword">new</span> EventEmitter&lt;<span class="hljs-built_in">string</span>&gt;();\n\n  onClose() {\n    <span class="hljs-keyword">this</span>.close.emit();\n  }\n\n  onSend() {\n    <span class="hljs-keyword">this</span>.send.emit(<span class="hljs-string">\'send\'</span>);\n  }\n}\n\n<span class="hljs-meta">@Layer</span>(FooComponent, {\n  modal: <span class="hljs-literal">true</span>,\n  events: [<span class="hljs-string">\'close\'</span>, <span class="hljs-string">\'send\'</span>]\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> FooLayer <span class="hljs-keyword">extends</span> LayerRef {\n\n  event(event: WormholeEvent) {\n    <span class="hljs-keyword">switch</span> (event.type) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'close\'</span>:\n        <span class="hljs-keyword">this</span>.close();\n        <span class="hljs-keyword">break</span>;\n      <span class="hljs-keyword">case</span> <span class="hljs-string">\'send\'</span>:\n        <span class="hljs-keyword">this</span>.send(<span class="hljs-string">\'send\'</span>);\n        <span class="hljs-keyword">break</span>;\n    }\n  }\n}\n'},S1q3:function(s,l,n){"use strict";n.r(l);var a=n("CcnG"),t=n("mrSG"),p=n("5cNt"),e=function(){function s(){this.close=new a.m,this.send=new a.m}return s.prototype.onClose=function(){this.close.emit()},s.prototype.onSend=function(){this.send.emit("send")},s}(),c=function(s){function l(){return null!==s&&s.apply(this,arguments)||this}return t.d(l,s),l.prototype.event=function(s){switch(s.type){case"close":this.close();break;case"send":this.send("send")}},t.c([Object(p.H)(e,{modal:!0,events:["close","send"]})],l)}(p.J),o=function(){function s(s){this.layerRef=s}return s.prototype.onClose=function(){this.layerRef.close("close")},s.prototype.onSend=function(){this.layerRef.send("send")},s}(),r=function(){function s(s,l){this.layerService=s,this.fooLayerRef=l,this.dynamicBarLayerRef=this.layerService.create(o,{modal:!0})}return s.prototype.onKeyUp=function(s){"Escape"===s.key&&this.layerService.hasVisibleLayers()&&this.layerService.closeTop()},s.prototype.openLayer=function(){this.layerModal.open()},s.prototype.openFooLayer=function(){this.fooLayerRef.open({title:"FooComponent via @Layer"}).subscribe(function(s){console.log(s)},void 0,function(){console.log("layer closed")})},s.prototype.openBarLayer=function(){this.dynamicBarLayerRef.open({title:"BarComponent via layerService.create"}).subscribe(function(s){console.log(s)},void 0,function(){console.log("layer closed")})},s}(),u={demo:function(){return{label:"Layer",tabs:{Demo:r,"README.md":{type:"md",content:n("TYEQ")},"demo.component.html":{type:"pre",content:n("z7eq")},"demo.component.ts":{type:"pre",content:n("7seb")},"demo.guard.ts":{type:"pre",content:n("4UGd")},"foo.layer.html":{type:"pre",content:n("AM2K")},"foo.layer.ts":{type:"pre",content:n("QuAR")},"bar.component.html":{type:"pre",content:n("DvOU")},"bar.component.ts":{type:"pre",content:n("4cmz")}}}}},h=function(){return function(){}}(),i=n("G6uX"),j=n("pMnS"),g=n("8Ip6"),d=a.ob({encapsulation:2,styles:[],data:{}});function m(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,16,"div",[["class","vclPanel vclPanelDialog vclNoMargin"]],null,null,null,null,null)),(s()(),a.qb(1,0,null,null,5,"div",[["class","vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(2,0,null,null,1,"h3",[["class","vclPanelTitle"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,[" Non-modal layer title goes here "])),(s()(),a.qb(4,0,null,null,2,"button",[["class","vclButton vclTransparent"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var t=!0;return"tap"===l&&(t=!1!==a.Ab(s.parent,28).close()&&t),t},null,null)),(s()(),a.qb(5,0,null,null,1,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(6,0,null,null,0,"div",[["aria-hidden","true"],["aria-label","Close"],["class","vclIcon fa fa-times"],["role","img"]],null,null,null,null,null)),(s()(),a.qb(7,0,null,null,2,"div",[["class","vclPanelBody"]],null,null,null,null,null)),(s()(),a.qb(8,0,null,null,1,"p",[["class","vclPanelContent"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,[" Non-modal layer text goes here "])),(s()(),a.qb(10,0,null,null,6,"div",[["class","vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(11,0,null,null,0,"div",[],null,null,null,null,null)),(s()(),a.qb(12,0,null,null,4,"div",[["class","vclLooseButtonGroup"]],null,null,null,null,null)),(s()(),a.qb(13,0,null,null,3,"button",[["class","vclButton vclTransparent vclOutline"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var t=!0;return"tap"===l&&(t=!1!==a.Ab(s.parent,28).close()&&t),t},null,null)),(s()(),a.qb(14,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(15,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Close Layer"]))],null,null)}function v(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,20,"div",[["class","vclPanel vclPanelDialog vclNoMargin"]],null,null,null,null,null)),(s()(),a.qb(1,0,null,null,5,"div",[["class","vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(2,0,null,null,1,"h3",[["class","vclPanelTitle"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Modal layer title goes here"])),(s()(),a.qb(4,0,null,null,2,"button",[["class","vclButton vclTransparent"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var t=!0;return"tap"===l&&(t=!1!==a.Ab(s.parent,30).close()&&t),t},null,null)),(s()(),a.qb(5,0,null,null,1,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(6,0,null,null,0,"div",[["aria-hidden","true"],["aria-label","Close"],["class","vclIcon fa fa-times"],["role","img"]],null,null,null,null,null)),(s()(),a.qb(7,0,null,null,2,"div",[["class","vclPanelBody"]],null,null,null,null,null)),(s()(),a.qb(8,0,null,null,1,"p",[["class","vclPanelContent"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,[" Modal layer text goes here "])),(s()(),a.qb(10,0,null,null,10,"div",[["class","vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(11,0,null,null,0,"div",[],null,null,null,null,null)),(s()(),a.qb(12,0,null,null,8,"div",[["class","vclLooseButtonGroup"]],null,null,null,null,null)),(s()(),a.qb(13,0,null,null,3,"button",[["class","vclButton vclTransparent vclOutline"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var t=!0;return"tap"===l&&(t=!1!==a.Ab(s.parent,30).close()&&t),t},null,null)),(s()(),a.qb(14,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(15,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Close Layer"])),(s()(),a.qb(17,0,null,null,3,"button",[["class","vclButton vclEmphasized"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var t=!0;return"tap"===l&&(t=!1!==a.Ab(s.parent,28).open()&&t),t},null,null)),(s()(),a.qb(18,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(19,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Open Non-Modal Layer"]))],null,null)}function y(s){return a.Jb(0,[a.Fb(402653184,1,{layerModal:0}),(s()(),a.Hb(-1,null,["Press escape to close the top layer"])),(s()(),a.qb(2,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(3,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(4,0,null,null,2,"button",[["label","open non-modal layer per reference"],["vcl-button",""]],[[2,"vclButton",null],[2,"vclDisabled",null],[1,"disabled",0],[2,"vclHovered",null],[1,"aria-label",0]],[[null,"tap"],[null,"mouseenter"],[null,"mouseleave"]],function(s,l,n){var t=!0;return"mouseenter"===l&&(t=!1!==a.Ab(s,5).onMouseEnter(n)&&t),"mouseleave"===l&&(t=!1!==a.Ab(s,5).onMouseLeave(n)&&t),"tap"===l&&(t=!1!==a.Ab(s,28).open()&&t),t},i.nb,i.i)),a.pb(5,16384,null,0,p.l,[a.k],null,null),a.pb(6,49152,null,0,p.o,[],{label:[0,"label"]},null),(s()(),a.qb(7,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(8,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(9,0,null,null,2,"button",[["label","open modal layer per reference"],["vcl-button",""]],[[2,"vclButton",null],[2,"vclDisabled",null],[1,"disabled",0],[2,"vclHovered",null],[1,"aria-label",0]],[[null,"tap"],[null,"mouseenter"],[null,"mouseleave"]],function(s,l,n){var t=!0;return"mouseenter"===l&&(t=!1!==a.Ab(s,10).onMouseEnter(n)&&t),"mouseleave"===l&&(t=!1!==a.Ab(s,10).onMouseLeave(n)&&t),"tap"===l&&(t=!1!==a.Ab(s,30).open()&&t),t},i.nb,i.i)),a.pb(10,16384,null,0,p.l,[a.k],null,null),a.pb(11,49152,null,0,p.o,[],{label:[0,"label"]},null),(s()(),a.qb(12,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(13,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(14,0,null,null,2,"button",[["label","open layer programmatically"],["vcl-button",""]],[[2,"vclButton",null],[2,"vclDisabled",null],[1,"disabled",0],[2,"vclHovered",null],[1,"aria-label",0]],[[null,"tap"],[null,"mouseenter"],[null,"mouseleave"]],function(s,l,n){var t=!0,p=s.component;return"mouseenter"===l&&(t=!1!==a.Ab(s,15).onMouseEnter(n)&&t),"mouseleave"===l&&(t=!1!==a.Ab(s,15).onMouseLeave(n)&&t),"tap"===l&&(t=!1!==p.openLayer()&&t),t},i.nb,i.i)),a.pb(15,16384,null,0,p.l,[a.k],null,null),a.pb(16,49152,null,0,p.o,[],{label:[0,"label"]},null),(s()(),a.qb(17,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(18,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(19,0,null,null,2,"button",[["label","open FooComponent layer"],["vcl-button",""]],[[2,"vclButton",null],[2,"vclDisabled",null],[1,"disabled",0],[2,"vclHovered",null],[1,"aria-label",0]],[[null,"tap"],[null,"mouseenter"],[null,"mouseleave"]],function(s,l,n){var t=!0,p=s.component;return"mouseenter"===l&&(t=!1!==a.Ab(s,20).onMouseEnter(n)&&t),"mouseleave"===l&&(t=!1!==a.Ab(s,20).onMouseLeave(n)&&t),"tap"===l&&(t=!1!==p.openFooLayer()&&t),t},i.nb,i.i)),a.pb(20,16384,null,0,p.l,[a.k],null,null),a.pb(21,49152,null,0,p.o,[],{label:[0,"label"]},null),(s()(),a.qb(22,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(23,0,null,null,0,"br",[],null,null,null,null,null)),(s()(),a.qb(24,0,null,null,2,"button",[["label","open dynamic BarComponent layer"],["vcl-button",""]],[[2,"vclButton",null],[2,"vclDisabled",null],[1,"disabled",0],[2,"vclHovered",null],[1,"aria-label",0]],[[null,"tap"],[null,"mouseenter"],[null,"mouseleave"]],function(s,l,n){var t=!0,p=s.component;return"mouseenter"===l&&(t=!1!==a.Ab(s,25).onMouseEnter(n)&&t),"mouseleave"===l&&(t=!1!==a.Ab(s,25).onMouseLeave(n)&&t),"tap"===l&&(t=!1!==p.openBarLayer()&&t),t},i.nb,i.i)),a.pb(25,16384,null,0,p.l,[a.k],null,null),a.pb(26,49152,null,0,p.o,[],{label:[0,"label"]},null),(s()(),a.hb(0,null,null,1,null,m)),a.pb(28,212992,[["layerNonModal",4]],0,p.K,[a.M,p.jd,a.r],{modal:[0,"modal"]},null),(s()(),a.hb(0,null,null,1,null,v)),a.pb(30,212992,[[1,4],["layerModal",4]],0,p.K,[a.M,p.jd,a.r],{modal:[0,"modal"]},null)],function(s,l){s(l,6,0,"open non-modal layer per reference"),s(l,11,0,"open modal layer per reference"),s(l,16,0,"open layer programmatically"),s(l,21,0,"open FooComponent layer"),s(l,26,0,"open dynamic BarComponent layer"),s(l,28,0,!1),s(l,30,0,!0)},function(s,l){s(l,4,0,!0,a.Ab(l,5).isDisabled,a.Ab(l,5).isDisabled,a.Ab(l,5).hovered,a.Ab(l,6).ariaLabel),s(l,9,0,!0,a.Ab(l,10).isDisabled,a.Ab(l,10).isDisabled,a.Ab(l,10).hovered,a.Ab(l,11).ariaLabel),s(l,14,0,!0,a.Ab(l,15).isDisabled,a.Ab(l,15).isDisabled,a.Ab(l,15).hovered,a.Ab(l,16).ariaLabel),s(l,19,0,!0,a.Ab(l,20).isDisabled,a.Ab(l,20).isDisabled,a.Ab(l,20).hovered,a.Ab(l,21).ariaLabel),s(l,24,0,!0,a.Ab(l,25).isDisabled,a.Ab(l,25).isDisabled,a.Ab(l,25).hovered,a.Ab(l,26).ariaLabel)})}function b(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,1,"ng-component",[],null,[["document","keyup"]],function(s,l,n){var t=!0;return"document:keyup"===l&&(t=!1!==a.Ab(s,1).onKeyUp(n)&&t),t},y,d)),a.pb(1,49152,null,0,r,[p.L,c],null,null)],null,null)}var f=a.mb("ng-component",r,b,{},{},[]),L=a.ob({encapsulation:2,styles:[],data:{}});function w(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,20,"div",[["class","vclPanel vclPanelDialog vclNoMargin"]],null,null,null,null,null)),(s()(),a.qb(1,0,null,null,5,"div",[["class","vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(2,0,null,null,1,"h3",[["class","vclPanelTitle"]],null,null,null,null,null)),(s()(),a.Hb(3,null,["",""])),(s()(),a.qb(4,0,null,null,2,"button",[["class","vclButton vclTransparent"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onClose()&&a),a},null,null)),(s()(),a.qb(5,0,null,null,1,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(6,0,null,null,0,"div",[["aria-hidden","true"],["aria-label","Close"],["class","vclIcon fa fa-times"],["role","img"]],null,null,null,null,null)),(s()(),a.qb(7,0,null,null,2,"div",[["class","vclPanelBody"]],null,null,null,null,null)),(s()(),a.qb(8,0,null,null,1,"p",[["class","vclPanelContent"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,[" Send data by pressing the buttons "])),(s()(),a.qb(10,0,null,null,10,"div",[["class","vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(11,0,null,null,0,"div",[],null,null,null,null,null)),(s()(),a.qb(12,0,null,null,8,"div",[["class","vclLooseButtonGroup"]],null,null,null,null,null)),(s()(),a.qb(13,0,null,null,3,"button",[["class","vclButton vclTransparent vclOutline"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onClose()&&a),a},null,null)),(s()(),a.qb(14,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(15,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Close Layer"])),(s()(),a.qb(17,0,null,null,3,"button",[["class","vclButton vclEmphasized"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onSend()&&a),a},null,null)),(s()(),a.qb(18,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(19,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Send Data"]))],null,function(s,l){s(l,3,0,l.component.title)})}function k(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,1,"ng-component",[],null,null,null,w,L)),a.pb(1,49152,null,0,e,[],null,null)],null,null)}var C=a.mb("ng-component",e,k,{title:"title"},{close:"close",send:"send"},[]),q=a.ob({encapsulation:2,styles:[],data:{}});function B(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,20,"div",[["class","vclPanel vclPanelDialog vclNoMargin"]],null,null,null,null,null)),(s()(),a.qb(1,0,null,null,5,"div",[["class","vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(2,0,null,null,1,"h3",[["class","vclPanelTitle"]],null,null,null,null,null)),(s()(),a.Hb(3,null,["",""])),(s()(),a.qb(4,0,null,null,2,"button",[["class","vclButton vclTransparent"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onClose()&&a),a},null,null)),(s()(),a.qb(5,0,null,null,1,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(6,0,null,null,0,"div",[["aria-hidden","true"],["aria-label","Close"],["class","vclIcon fa fa-times"],["role","img"]],null,null,null,null,null)),(s()(),a.qb(7,0,null,null,2,"div",[["class","vclPanelBody"]],null,null,null,null,null)),(s()(),a.qb(8,0,null,null,1,"p",[["class","vclPanelContent"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,[" Send data by pressing the buttons "])),(s()(),a.qb(10,0,null,null,10,"div",[["class","vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"]],null,null,null,null,null)),(s()(),a.qb(11,0,null,null,0,"div",[],null,null,null,null,null)),(s()(),a.qb(12,0,null,null,8,"div",[["class","vclLooseButtonGroup"]],null,null,null,null,null)),(s()(),a.qb(13,0,null,null,3,"button",[["class","vclButton vclTransparent vclOutline"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onClose()&&a),a},null,null)),(s()(),a.qb(14,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(15,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Close Layer"])),(s()(),a.qb(17,0,null,null,3,"button",[["class","vclButton vclEmphasized"],["type","button"]],null,[[null,"tap"]],function(s,l,n){var a=!0;return"tap"===l&&(a=!1!==s.component.onSend()&&a),a},null,null)),(s()(),a.qb(18,0,null,null,2,"div",[["class","vclIcogram"]],null,null,null,null,null)),(s()(),a.qb(19,0,null,null,1,"span",[["class","vclText"]],null,null,null,null,null)),(s()(),a.Hb(-1,null,["Send Data"]))],null,function(s,l){s(l,3,0,l.component.title)})}function P(s){return a.Jb(0,[(s()(),a.qb(0,0,null,null,1,"ng-component",[],null,null,null,B,q)),a.pb(1,49152,null,0,o,[p.J],null,null)],null,null)}var M=a.mb("ng-component",o,P,{title:"title"},{},[]),T=n("Ip0R"),D=function(){function s(s){this.layer=s}return s.prototype.canDeactivate=function(){return!this.layer.hasVisibleLayers()||(console.log("You cannot navigate, when there are visible layers"),!1)},s}(),H=n("2FIb"),A=n("ZYCi"),I=n("PNUx");n.d(l,"LayerDemoModuleNgFactory",function(){return N});var N=a.nb(h,[],function(s){return a.xb([a.yb(512,a.j,a.cb,[[8,[i.a,j.a,g.a,f,C,M]],[3,a.j],a.y]),a.yb(4608,T.n,T.m,[a.v,[2,T.y]]),a.yb(5120,p.hc,function(){return[new p.t]},[]),a.yb(4608,p.L,p.L,[p.jd,a.r]),a.yb(4608,c,c,[]),a.yb(4608,D,D,[p.L]),a.yb(1073742336,T.c,T.c,[]),a.yb(1073742336,p.fc,p.fc,[]),a.yb(1073742336,p.Yb,p.Yb,[]),a.yb(1073742336,H.a,H.a,[]),a.yb(1024,p.F,function(){return[[c]]},[]),a.yb(1073742336,p.Hb,p.Hb,[p.F,p.jd,a.r]),a.yb(1073742336,p.Db,p.Db,[]),a.yb(1073742336,p.Ib,p.Ib,[]),a.yb(1073742336,p.Cb,p.Cb,[]),a.yb(1073742336,p.tb,p.tb,[]),a.yb(1073742336,A.m,A.m,[[2,A.s],[2,A.l]]),a.yb(1073742336,h,h,[]),a.yb(1024,A.j,function(){return[[{path:"",component:I.a,data:u,canDeactivate:[D]}]]},[])])})},TYEQ:function(s,l){s.exports='<h1 id="vcl-layer">vcl-layer</h1>\n<p>A container which stacks up in the z-direction.</p>\n<h2 id="usage">Usage</h2>\n<h3 id="the-layer-reference">The Layer Reference</h3>\n<p>A layer reference is an object of the type <code>LayerRef</code> and allows to open, close, send data to and receive data from the layer.<br>It can be created as a template using the `vcl-layer directive or from a component:</p>\n<h4 id="template-layer">Template Layer</h4>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">vcl-layer</span> #<span class="hljs-attr">myTemplateLayer</span>=<span class="hljs-string">&quot;layer&quot;</span> [<span class="hljs-attr">modal</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vclPanel vclNoMargin&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vclPanelHeader&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vclPanelTitle&quot;</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vclPanelBody&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vclPanelContent&quot;</span>&gt;</span>\n        Content\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;myTemplateLayer.close()&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Close Layer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span></pre>\n<h4 id="component-layer">Component Layer</h4>\n<pre class="hljs"><span class="hljs-keyword">import</span> { Layer, LayerRef, ComponentLayerRef, provideLayer } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@ng-vcl/ng-vcl&apos;</span>;\n\n<span class="hljs-comment">// This is just a common component</span>\n@Component({ ... })\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyComponent</span> </span>{\n\n  @Output()\n  greet = <span class="hljs-keyword">new</span> EventEmitter();\n\n  <span class="hljs-comment">// layerRef is a reference to the current layer.</span>\n  <span class="hljs-comment">// Its value is null when the component is not used as a layer</span>\n  <span class="hljs-keyword">constructor</span>(@Optional() private layerRef: LayerRef) { }\n\n  closeMe() {\n    <span class="hljs-comment">// Close the layer</span>\n    <span class="hljs-keyword">this</span>.layerRef.close();\n  }\n\n  onGreet() {\n    <span class="hljs-comment">// Sends data to event() method in the layer class if event is defined in @Layer</span>\n    <span class="hljs-keyword">this</span>.greet.emit(<span class="hljs-string">&apos;Hello&apos;</span>);\n  }\n\n  sendData() {\n    <span class="hljs-comment">// Send data to the subscriber</span>\n    <span class="hljs-keyword">this</span>.layerRef.send(<span class="hljs-string">&apos;foo&apos;</span>);\n  }\n}\n\n<span class="hljs-comment">// This is the reference class of the layer</span>\n@Layer(MyComponent, {\n  <span class="hljs-comment">// See vcl-layer attributes below for more options</span>\n  modal: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">events</span>: [<span class="hljs-string">&apos;greet&apos;</span>]\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyLayer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">LayerRef</span> </span>{\n  event(event) {\n    <span class="hljs-keyword">switch</span> (event.type) {\n      <span class="hljs-keyword">case</span> <span class="hljs-string">&apos;greet&apos;</span>:\n        ...\n    }\n  }\n}</pre>\n<p>A component layer must be registered.</p>\n<pre class="hljs">@NgModule({\n  <span class="hljs-attr">imports</span>: [\n    VCLLayerModule.forRoot({ <span class="hljs-comment">// use forChild() in (lazy loaded) modules</span>\n      layers: [MyLayer]\n    }),\n    ...\n  ],\n  <span class="hljs-attr">entryComponents</span>: [ MyComponent, ... ],\n  <span class="hljs-attr">declarations</span>: [ MyComponent, ... ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppModule</span> </span>{  };</pre>\n<h4 id="using-the-layers">Using the Layers</h4>\n<pre class="hljs"><span class="hljs-keyword">import</span> { LayerRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@ng-vcl/ng-vcl&apos;</span>;\n<span class="hljs-keyword">import</span> { MyLayer } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;./my-layer&apos;</span>;\n\n@Component({ ... })\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LayerDemoComponent</span> </span>{\n  <span class="hljs-keyword">constructor</span>(\n    private myComponentLayer: MyLayer // This is the reference to the component layer\n  ) {}\n\n  openComponentLayer() {\n    <span class="hljs-keyword">this</span>.myComponentLayer.open();\n  }\n\n  <span class="hljs-comment">// This is the reference to the template layer</span>\n  @ViewChild(<span class="hljs-string">&apos;myTemplateLayer&apos;</span>)\n  myTemplateLayer: LayerRef;\n\n  openTemplateLayer() {\n    <span class="hljs-keyword">this</span>.myTemplateLayer.open();\n  }\n}</pre>\n<h4 id="setting-attributes-and-receiving-data">Setting Attributes and receiving Data</h4>\n<p>The open() method allows to pass data to the layer and returns an Observable which<br>allows you to receive data from the layer.</p>\n<pre class="hljs"><span class="hljs-keyword">this</span>.myComponentLayer.open({\n  <span class="hljs-comment">// Set attributes on the component</span>\n  title: <span class="hljs-string">&apos;Component Layer&apos;</span>\n}).subscribe(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> {\n  <span class="hljs-comment">// Layer sends data</span>\n  <span class="hljs-built_in">console</span>.log(data);\n}, <span class="hljs-literal">null</span>, () =&gt; {\n  <span class="hljs-comment">// Layer is closed</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;layer closed&apos;</span>);\n});</pre>\n<h3 id="api">API</h3>\n<pre class="hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LayerRef</span> </span>{\n  open(data: LayerData): Observable&lt;any&gt;; <span class="hljs-comment">// Opens the layer</span>\n  close(data?: any);         <span class="hljs-comment">// Closes the layer</span>\n  send(data: any);           <span class="hljs-comment">// Send data to the subscriber</span>\n  readonly visible: boolean; <span class="hljs-comment">// true when the layer is visible</span>\n  event(event);              <span class="hljs-comment">// Override to catch Component @Output events</span>\n}\n\ninterface LayerData {\n  [key: string]: any;\n}\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LayerService</span> </span>{\n  getVisibleLayers(): LayerRef[]; <span class="hljs-comment">// Get the visible layers</span>\n  hasVisibleLayers(): boolean; <span class="hljs-comment">// True when at least one layer is visible</span>\n  closeAll(); <span class="hljs-comment">// Close all layers</span>\n  closeTop(); <span class="hljs-comment">// Close the top layer</span>\n}</pre>\n<h4 id="vcl-layer-attributes">vcl-layer attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>modal</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Wether a non-modal layer should close when clicked outside</td>\n</tr>\n<tr>\n<td><code>transparent</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Makes the layer&apos;s background transparent</td>\n</tr>\n<tr>\n<td><code>fill</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Makes the layer cover the whole viewport</td>\n</tr>\n<tr>\n<td><code>stickToBottom</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Makes the layer stick to the bottom</td>\n</tr>\n<tr>\n<td><code>gutterPadding</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Add a padding of half the gutter width</td>\n</tr>\n<tr>\n<td><code>noLayerBox</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Does not wrap the component in vclLayerBox div</td>\n</tr>\n<tr>\n<td><code>events</code></td>\n<td>string</td>\n<td>[]</td>\n<td>Listens to defined @Output events.</td>\n</tr>\n</tbody></table>\n'},z7eq:function(s,l){s.exports='Press escape to close the top layer<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerNonModal.open()"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"open non-modal layer per reference"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerModal.open()"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"open modal layer per reference"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"openLayer()"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"open layer programmatically"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"openFooLayer()"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"open FooComponent layer"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"openBarLayer()"</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"open dynamic BarComponent layer"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">vcl-layer</span> #<span class="hljs-attr">layerNonModal</span>=<span class="hljs-string">"layer"</span> [<span class="hljs-attr">modal</span>]=<span class="hljs-string">"false"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanel vclPanelDialog vclNoMargin"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelTitle"</span>&gt;</span>\n        Non-modal layer title goes here\n      <span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerNonModal.close()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcon fa fa-times"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"img"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelBody"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelContent"</span>&gt;</span>\n        Non-modal layer text goes here\n      <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclLooseButtonGroup"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent vclOutline"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerNonModal.close()"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Close Layer<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">vcl-layer</span> #<span class="hljs-attr">layerModal</span>=<span class="hljs-string">"layer"</span> [<span class="hljs-attr">modal</span>]=<span class="hljs-string">"true"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanel vclPanelDialog vclNoMargin"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelHeader vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelTitle"</span>&gt;</span>Modal layer title goes here<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerModal.close()"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcon fa fa-times"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"img"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelBody"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelContent"</span>&gt;</span>\n        Modal layer text goes here\n      <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclPanelFooter vclNoBg vclLayoutHorizontal vclLayoutJustified vclLayoutCenter"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclLooseButtonGroup"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclTransparent vclOutline"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerModal.close()"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Close Layer<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclButton vclEmphasized"</span> (<span class="hljs-attr">tap</span>)=<span class="hljs-string">"layerNonModal.open()"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclIcogram"</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"vclText"</span>&gt;</span>Open Non-Modal Layer<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'}}]);