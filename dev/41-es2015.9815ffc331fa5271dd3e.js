(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{FDdc:function(s,n,t){"use strict";t.r(n);var a=t("ofXK"),e=t("3Pt+"),l=t("tyNb"),p=t("19H1"),c=t("2FIb"),o=t("fXoL"),h=t("sM5x"),d=t("nhKh"),r=t("tMsr"),i=t("1/Kn");const g=function(){return[1]};let j=(()=>{class s{onRemove(s){console.log("onRemove",s)}onListChange(s){console.log("onListChange",s)}onInputChange(s){console.log("onInputChange",s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=o.Gb({type:s,selectors:[["ng-component"]],decls:35,vars:14,consts:[[3,"selected"],[3,"removable","remove"],[3,"value","valueChange"],[3,"value"],[3,"value","selectable","removable","valueChange"],[3,"valueChange"],["vclInput",""],[3,"disabled"]],template:function(s,n){1&s&&(o.Sb(0,"h3"),o.yc(1,"single tokens"),o.Rb(),o.Sb(2,"vcl-token"),o.yc(3,"my token"),o.Rb(),o.Sb(4,"vcl-token",0),o.yc(5,"my selected token"),o.Rb(),o.Sb(6,"vcl-token",1),o.ac("remove",(function(s){return n.onRemove(s)})),o.yc(7,"my removable token"),o.Rb(),o.Sb(8,"vcl-token",1),o.ac("remove",(function(s){return n.onRemove(s)})),o.yc(9,"my icon token"),o.Rb(),o.Nb(10,"br"),o.Sb(11,"h3"),o.yc(12,"token-list"),o.Rb(),o.Sb(13,"vcl-token-list",2),o.ac("valueChange",(function(s){return n.onListChange(s)})),o.Sb(14,"vcl-token",3),o.yc(15,"my token 1"),o.Rb(),o.Sb(16,"vcl-token",3),o.yc(17,"my token 2"),o.Rb(),o.Rb(),o.Nb(18,"br"),o.Sb(19,"h3"),o.yc(20,"selectable and removable tokenlist"),o.Rb(),o.Sb(21,"vcl-token-list",4),o.ac("valueChange",(function(s){return n.onListChange(s)})),o.Sb(22,"vcl-token",3),o.yc(23,"my token 1"),o.Rb(),o.Sb(24,"vcl-token",3),o.yc(25,"my token 2"),o.Rb(),o.Rb(),o.Nb(26,"br"),o.Sb(27,"h3"),o.yc(28,"token-input"),o.Rb(),o.Sb(29,"vcl-token-input",5),o.ac("valueChange",(function(s){return n.onInputChange(s)})),o.Nb(30,"input",6),o.Rb(),o.Sb(31,"h3"),o.yc(32,"token-input (disabled)"),o.Rb(),o.Sb(33,"vcl-token-input",7),o.Nb(34,"input",6),o.Rb()),2&s&&(o.Ab(4),o.ic("selected",!0),o.Ab(2),o.ic("removable",!0),o.Ab(2),o.ic("removable",!0),o.Ab(5),o.ic("value",o.jc(12,g)),o.Ab(1),o.ic("value",1),o.Ab(2),o.ic("value",2),o.Ab(5),o.ic("value",o.jc(13,g))("selectable",!0)("removable",!0),o.Ab(1),o.ic("value",1),o.Ab(2),o.ic("value",2),o.Ab(9),o.ic("disabled",!0))},directives:[h.b,d.a,r.a,i.b],encapsulation:2}),s})();function u(){return{label:"Token",tabs:{Demo:j,"README.md":{type:"md",content:'<h1 id="vcl-token">vcl-token</h1>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLTokenModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ VCLTokenModule ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<h2 id="single-token">single token</h2>\n<pre class="hljs"><code>&lt;vcl-token&gt;mytoken&lt;/vcl-token&gt;</code></pre>\n<h2 id="single-selected-token">single selected token</h2>\n<pre class="hljs"><code>&lt;vcl-token [selected]=&quot;true&quot;&gt;mytoken&lt;/vcl-token&gt;</code></pre>\n<h2 id="single-removable-token">single removable token</h2>\n<pre class="hljs"><code>&lt;vcl-token [removable]=&quot;true&quot; (remove)=&quot;onRemove()&quot;&gt;mytoken&lt;/vcl-token&gt;</code></pre>\n<h2 id="token-list">token-list</h2>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-list</span> [<span class="hljs-attr">selectable</span>]=<span class="hljs-string">&quot;true&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;changed($event);&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">selected</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>mytoken 1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">selected</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>mytoken 2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-list</span>&gt;</span></pre>\n<h2 id="token-input">token-input</h2>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-input</span> (<span class="hljs-attr">valueChange</span>)=<span class="hljs-string">&quot;changed($event);&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-input</span>&gt;</span></pre>\n<h3 id="api">API</h3>\n<h4 id="vcl-token-attributes">vcl-token attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>value</code></td>\n<td>any</td>\n<td></td>\n<td>token value</td>\n</tr>\n<tr>\n<td><code>selected</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>if true, the token is highlighted</td>\n</tr>\n<tr>\n<td><code>removable</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>if true, the remove-cross is shown</td>\n</tr>\n</tbody></table>\n<h4 id="vcl-token-events">vcl-token events</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>remove</code></td>\n<td></td>\n<td>called when the remove-button is pressed</td>\n</tr>\n</tbody></table>\n<h4 id="token-list-attributes">token-list attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>value</code></td>\n<td>any[]</td>\n<td>any[]</td>\n<td>The values of the selected tokens</td>\n</tr>\n<tr>\n<td><code>selectable</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>tokens are selectable if true</td>\n</tr>\n</tbody></table>\n<h4 id="token-list-events">token-list events</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>tokensChange</code></td>\n<td>string[]</td>\n<td>called when the selection of token changes</td>\n</tr>\n</tbody></table>\n<h4 id="vcl-token-input-attributes">vcl-token-input attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>value</code></td>\n<td>Token[]</td>\n<td>[]</td>\n<td>List of tokens</td>\n</tr>\n<tr>\n<td><code>selectable</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>tokens are selectable if true</td>\n</tr>\n<tr>\n<td><code>allowDuplicates</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>tokens with matching values are not added</td>\n</tr>\n<tr>\n<td><code>addOnEnter</code></td>\n<td>boolean</td>\n<td>true</td>\n<td>New token will be added when pressing enter</td>\n</tr>\n<tr>\n<td><code>preselect</code></td>\n<td>boolean</td>\n<td>true</td>\n<td>tokens are preselected after being added if true</td>\n</tr>\n<tr>\n<td><code>tokenClass</code></td>\n<td>string</td>\n<td></td>\n<td>additional css class for tokens</td>\n</tr>\n<tr>\n<td><code>tabindex</code></td>\n<td>number</td>\n<td>0</td>\n<td>The tabindex of the token-input</td>\n</tr>\n</tbody></table>\n<h4 id="vcl-token-input-events">vcl-token-input events</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>valueChange</code></td>\n<td>Token[]</td>\n<td>called after tokens are added/removed or the selection of token changes</td>\n</tr>\n<tr>\n<td><code>confirm</code></td>\n<td>Token[]</td>\n<td>called after <code>enter</code> is pressed when input element is empty</td>\n</tr>\n</tbody></table>\n<h4 id="interfaces">interfaces</h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> Token {\n  label: <span class="hljs-built_in">string</span>;\n  value: <span class="hljs-built_in">any</span>;\n  selected?: <span class="hljs-built_in">boolean</span>;\n}</pre>\n'},"demo.component.html":{type:"pre",content:t("b77Z")},"demo.component.ts":{type:"pre",content:t("qOPM")}}}}t.d(n,"demo",(function(){return u})),t.d(n,"TokenDemoModule",(function(){return v}));let v=(()=>{class s{}return s.\u0275mod=o.Kb({type:s}),s.\u0275inj=o.Jb({factory:function(n){return new(n||s)},imports:[[a.c,e.m,c.b,p.gb,p.P,l.g.forChild([{path:"",component:c.a,data:{demo:u}}])]]}),s})()},b77Z:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>single tokens<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span>&gt;</span>my token<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">selected</span>]=<span class="hljs-string">"true"</span>&gt;</span>my selected token<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">removable</span>]=<span class="hljs-string">"true"</span> (<span class="hljs-attr">remove</span>)=<span class="hljs-string">"onRemove($event)"</span>&gt;</span>my removable token<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">removable</span>]=<span class="hljs-string">"true"</span> (<span class="hljs-attr">remove</span>)=<span class="hljs-string">"onRemove($event)"</span>&gt;</span>my icon token<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>token-list<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-list</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"[1]"</span> (<span class="hljs-attr">valueChange</span>)=<span class="hljs-string">"onListChange($event);"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"1"</span>&gt;</span>my token 1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"2"</span>&gt;</span>my token 2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-list</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>selectable and removable tokenlist<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-list</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"[1]"</span> [<span class="hljs-attr">selectable</span>]=<span class="hljs-string">"true"</span> [<span class="hljs-attr">removable</span>]=<span class="hljs-string">"true"</span> (<span class="hljs-attr">valueChange</span>)=<span class="hljs-string">"onListChange($event);"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"1"</span>&gt;</span>my token 1<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-token</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"2"</span>&gt;</span>my token 2<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-list</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>token-input<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-input</span> (<span class="hljs-attr">valueChange</span>)=<span class="hljs-string">"onInputChange($event);"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-input</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>token-input (disabled)<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-token-input</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"true"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-token-input</span>&gt;</span>\n'},qOPM:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> TokenDemoComponent {\n\n  onRemove(token) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'onRemove\'</span>, token);\n  }\n\n  onListChange(value) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'onListChange\'</span>, value);\n  }\n\n  onInputChange(value) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'onInputChange\'</span>, value);\n  }\n}\n'}}]);