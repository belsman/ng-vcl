(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"+kW2":function(s,a){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"gutter-2 pb-2"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"success"</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"info"</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>warning<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"error"</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"gutter-2"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"success"</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"info"</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"warning"</span>&gt;</span>warning<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"error"</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n'},"94Rr":function(s,a,n){"use strict";n.r(a);var l=n("ofXK"),t=n("tyNb"),p=n("19H1"),c=n("2FIb"),e=n("fXoL"),g=n("Gojw");let h=(()=>{class s{}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=e.Gb({type:s,selectors:[["ng-component"]],decls:26,vars:0,consts:[[1,"gutter-2","pb-2"],["type","primary"],["type","success"],["type","info"],["type","warning"],["type","error"],[1,"gutter-2"],["vclRounded",""],["vclRounded","","type","primary"],["vclRounded","","type","success"],["vclRounded","","type","info"],["vclRounded","","type","warning"],["vclRounded","","type","error"]],template:function(s,a){1&s&&(e.Tb(0,"div",0),e.Tb(1,"vcl-badge"),e.Ac(2,"default"),e.Rb(),e.Tb(3,"vcl-badge",1),e.Ac(4,"primary"),e.Rb(),e.Tb(5,"vcl-badge",2),e.Ac(6,"success"),e.Rb(),e.Tb(7,"vcl-badge",3),e.Ac(8,"info"),e.Rb(),e.Tb(9,"vcl-badge",4),e.Ac(10,"warning"),e.Rb(),e.Tb(11,"vcl-badge",5),e.Ac(12,"error"),e.Rb(),e.Rb(),e.Tb(13,"div",6),e.Tb(14,"vcl-badge",7),e.Ac(15,"default"),e.Rb(),e.Tb(16,"vcl-badge",8),e.Ac(17,"primary"),e.Rb(),e.Tb(18,"vcl-badge",9),e.Ac(19,"success"),e.Rb(),e.Tb(20,"vcl-badge",10),e.Ac(21,"info"),e.Rb(),e.Tb(22,"vcl-badge",11),e.Ac(23,"warning"),e.Rb(),e.Tb(24,"vcl-badge",12),e.Ac(25,"error"),e.Rb(),e.Rb())},directives:[g.a,g.b],encapsulation:2}),s})();function r(){return{label:"Badge",tabs:{Demo:h,"README.md":{type:"md",content:'<h1 id="vcl-badge">vcl-badge</h1>\n<p>A visually highlighted tag to attribute items.</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLBadgeModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@vcl/ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ VCLBadgeModule ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>warning<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>primary<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>success<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>warning<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">vcl-badge</span> <span class="hljs-attr">vclRounded</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-badge</span>&gt;</span></pre>\n<h3 id="api">API</h3>\n<h4 id="vcl-badge-attributes">vcl-badge attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>type</code></td>\n<td>string</td>\n<td></td>\n<td>the badge&apos;s type</td>\n</tr>\n</tbody></table>\n<h4 id="vclrounded-directive">vclRounded directive</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>vclRounded</code></td>\n<td>Enables rounded corners</td>\n</tr>\n</tbody></table>\n'},"demo.component.html":{type:"pre",content:n("+kW2")},"demo.component.ts":{type:"pre",content:n("mzNh")}}}}n.d(a,"demo",(function(){return r})),n.d(a,"BadgeDemoModule",(function(){return d}));let d=(()=>{class s{}return s.\u0275mod=e.Kb({type:s}),s.\u0275inj=e.Jb({factory:function(a){return new(a||s)},imports:[[l.c,c.b,p.y,t.g.forChild([{path:"",component:c.a,data:{demo:r}}])]]}),s})()},mzNh:function(s,a){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> BadgeDemoComponent {\n}\n'}}]);