{"version":3,"sources":["webpack:///./demo/app/demos/jss-form/counter.component.ts","webpack:///./demo/app/demos/jss-form/demo.component.html","webpack:///./demo/app/demos/jss-form/demo.component.ts","webpack:///./demo/app/demos/jss-form/demo.module.ts","webpack:///./demo/app/demos/jss-form/hero.ts","webpack:///./demo/app/demos/jss-form/demo.component.html?e9b3","webpack:///./demo/app/demos/jss-form/counter.component.ts?7b04","webpack:///./demo/app/demos/jss-form/demo.component.ts?7df9","webpack:///./demo/app/demos/jss-form/hero.ts?fac1","webpack:///./lib/ng-vcl/src/jss-form/README.md"],"names":[],"mappings":"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","file":"demos-jss-form-demo-module.js","sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { FormFieldControl } from '@ng-vcl/ng-vcl';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'demo-counter',\n  styles: [`\n    vcl-icogram {\n      font-size: 2.5em; user-select: none;\n    }\n    vcl-icon {\n      cursor: pointer;\n    }\n  `],\n  template: `\n    <vcl-icogram>\n      <vcl-icon vclPrepend tabindex=0 (keydown.enter)=\"decrement()\" (click)=\"decrement()\" icon=\"fas:minus-square\"></vcl-icon>\n      {{counter}}\n      <vcl-icon vclAppend tabindex=0 (blur)=\"onTouched()\" (keydown.enter)=\"increment()\" (click)=\"increment()\" icon=\"fas:plus-square\"></vcl-icon>\n    </vcl-icogram>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CounterComponent),\n    multi: true\n  }]\n})\nexport class CounterComponent implements ControlValueAccessor {\n  counter = 0;\n\n  @Input()\n  min?: number;\n\n  @Input()\n  max?: number;\n\n  increment() {\n    if (typeof this.max === 'number' && this.counter >= this.max) {\n      return;\n    }\n    this.counter++;\n    this.onChange(this.counter);\n  }\n  decrement() {\n    if (typeof this.min === 'number' && this.counter <= this.min) {\n      return;\n    }\n    this.counter--;\n    this.onChange(this.counter);\n    this.onTouched();\n  }\n  writeValue(obj: any): void {\n    this.counter = obj;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  onChange: (_: any) => void = () => {};\n  onTouched: () => void = () => {};\n}\n\n@Component({\n  template: `\n    <span *ngIf=\"field.label\">{{ field.label }}</span><br>\n    <demo-counter [formControl]=\"field.control\" [min]=\"field.params.min\" [max]=\"field.params.max\"></demo-counter>\n    `,\n    styles: [\n      `:host {\n        display: block;\n        padding-top: 1em;\n        padding-bottom: 1em;\n      }`\n    ]\n})\nexport class FormFieldCounterComponent {\n  constructor(public field: FormFieldControl) { }\n}\n\nFormFieldControl.register('counter', FormFieldCounterComponent);\n","module.exports = \"<h2>Create a hero</h2>\\n<vcl-jss-form \\n  #heroForm=\\\"vclJssForm\\\"\\n  [schema]=\\\"heroSchema\\\" \\n  (formSubmit)=\\\"onSubmit($event)\\\" \\n  (formAction)=\\\"onAction($event)\\\">\\n</vcl-jss-form>\\n\\n<div class=\\\"value\\\" *ngIf=\\\"state$ | async as formState\\\">\\n  <h4>Form</h4>\\n  <pre>{{formState | json}}</pre>\\n</div>\\n\"","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { JssFormComponent, NotifierService } from '@ng-vcl/ng-vcl';\nimport { merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HERO_SCHEMA } from './hero';\n\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class JssFormDemoComponent implements AfterViewInit {\n\n  constructor(private notifier: NotifierService) { }\n\n  @ViewChild('heroForm')\n  heroForm: JssFormComponent;\n\n  heroSchema = HERO_SCHEMA;\n\n  state$: Observable<any>;\n\n  onSubmit() {\n    if (this.heroForm.ngForm.valid) {\n      this.notifier.success('Hero created');\n    } else {\n     this.notifier.error('Hero invalid');\n    }\n  }\n\n  onAction(action: string) {\n    if (action === 'reset' && this.heroForm.ngForm) {\n      this.heroForm.ngForm.resetForm(this.heroForm.field.defaultValue);\n      this.notifier.info('Hero reset');\n    }\n  }\n\n  ngAfterViewInit() {\n    this.state$ = merge(this.heroForm.ngForm.statusChanges, this.heroForm.ngForm.valueChanges, this.heroForm.ngForm.ngSubmit).pipe(\n      map(() => {\n        return {\n          status: this.heroForm.ngForm.status,\n          valid: this.heroForm.ngForm.valid,\n          dirty: this.heroForm.ngForm.dirty,\n          submitted: this.heroForm.ngForm.submitted,\n          touched: this.heroForm.ngForm.touched,\n          pristine: this.heroForm.ngForm.pristine,\n          errors: this.heroForm.ngForm.errors,\n          value: this.heroForm.ngForm.value,\n        };\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { VCLJssFormModule, VCLNotifierModule, VCLButtonModule, VCLIcogramModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { JssFormDemoComponent } from './demo.component';\nimport { CounterComponent, FormFieldCounterComponent} from './counter.component';\n\nexport function demo() {\n  return {\n    label: 'JSS-Form',\n    tabs: {\n      Demo: JssFormDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/jss-form/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      },\n      'counter.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./counter.component.ts')\n      },\n      'hero.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./hero.ts')\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DemoModule,\n    VCLIcogramModule,\n    VCLButtonModule,\n    VCLJssFormModule,\n    VCLNotifierModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo}\n    }]),\n  ],\n  entryComponents: [ JssFormDemoComponent, CounterComponent, FormFieldCounterComponent ],\n  declarations: [ JssFormDemoComponent, CounterComponent, FormFieldCounterComponent ]\n})\nexport class VCLJssFormDemoModule { }\n","import { Validators, AbstractControl } from '@angular/forms';\nimport { VCLFormFieldSchemaRoot, conditional } from '@ng-vcl/ng-vcl';\n\nexport const HERO_SCHEMA: VCLFormFieldSchemaRoot<'counter'> = {\n  type: 'form',\n  fields: {\n    name: {\n      type: 'input',\n      label: 'Name',\n      params: {\n        placeholder: 'The hero\\'s name',\n      },\n      validators: [\n        Validators.required, Validators.minLength(2)\n      ],\n      required: true,\n      hints: [\n        {\n          type: 'error',\n          error: 'required',\n          message: 'Name is required'\n        },\n        {\n          type: 'error',\n          error: 'minlength',\n          message: 'Name must have a length of at least 2 characters'\n        }\n      ]\n    },\n    description: {\n      type: 'textarea',\n      label: 'Description',\n      params: {\n        placeholder: 'The hero\\'s Description',\n      }\n    },\n    level: {\n      type: 'counter',\n      label: 'Level',\n      defaultValue: 1,\n      params: {\n        min: 1,\n        max: 10\n      }\n    },\n    leader: {\n      type: 'switch',\n      label: 'Leader',\n      defaultValue: false,\n      visible: conditional(['level'], (level: AbstractControl) => level.value >= 5),\n      validators: [(control: AbstractControl) => {\n        if (!control.value) {\n          return {\n            leader: true,\n          };\n        }\n        return null;\n      }],\n      params: {\n        offLabel: 'No',\n        onLabel: 'Yes',\n      }\n    },\n    picture: {\n      type: 'file-input',\n      label: 'Picture',\n      params: {\n        multiple: false,\n        placeholder: 'Picture of the hero'\n      }\n    },\n    email: {\n      type: 'input',\n      label: 'Email',\n      validators: [Validators.required, Validators.email],\n      required: true,\n      hints: [\n        {\n          type: 'error',\n          error: 'required',\n          message: 'Email is required'\n        },\n        {\n          type: 'error',\n          error: 'email',\n          message: 'Invalid Email address'\n        }\n      ]\n    },\n    gender: {\n      type: 'radio-group',\n      label: 'Gender',\n      defaultValue: 'm',\n      params: {\n        options: [{\n          label: 'Male',\n          value: 'm'\n        }, {\n          label: 'Female',\n          value: 'f'\n        }, {\n          label: 'Genderless',\n          value: 'g'\n        }],\n      }\n    },\n    dob: {\n      type: 'date-picker',\n      label: 'Date of Birth'\n    },\n    alignment: {\n      type: 'button-group',\n      label: 'Alignment',\n      params: {\n        options: [{\n          label: 'Good',\n          value: 1\n        }, {\n          label: 'Neutral',\n          value: 0\n        }, {\n          label: 'Evil',\n          value: -1\n        }]\n      }\n    },\n    language: {\n      type: 'hidden',\n      defaultValue: navigator.language\n    },\n    class: {\n      type: 'select-list',\n      label: 'Class',\n      defaultValue: null,\n      params: {\n        options: [{\n          label: 'Warrior',\n          value: 'warrior'\n        }, {\n          label: 'Mage',\n          value: 'mage'\n        }, {\n          label: 'Rogue',\n          value: 'rogue'\n        }]\n      }\n    },\n    hitpoints: {\n      type: 'slider',\n      label: 'Hit Points',\n      defaultValue: 15,\n      disabled: conditional(['class'], (c) => !c.value),\n      params: conditional(['class'], (control) => {\n        if (control.value === 'rogue') {\n          return {\n            min: 8,\n            max: 18,\n            scale: 11,\n            lock: true,\n          };\n        }  else if (control.value === 'mage') {\n          return {\n            min: 5,\n            max: 15,\n            scale: 11,\n            lock: true,\n          };\n        } else {\n          return {\n            min: 10,\n            max: 20,\n            scale: 11,\n            lock: true,\n          };\n        }\n      }),\n    },\n    skills: {\n      type: 'object',\n      layout: 'fieldset',\n      label: 'Skills',\n      fields: {\n        strength: {\n          type: 'rating',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Strength (${label})`,\n          },\n        },\n        agility: {\n          type: 'rating',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Agility (${label})`,\n          },\n        },\n        intelligence: {\n          type: 'rating',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Intelligence (${label})`,\n          },\n        },\n      },\n      validators: [(control: AbstractControl) => {\n        const s = control.get('strength');\n        const a = control.get('agility');\n        const i = control.get('intelligence');\n        const skillPoints = (s && a && i) ? (s.value + a.value + i.value) : 0;\n        return skillPoints > 10 ? { skills: true } : null;\n      }],\n      hints: [\n        conditional(['skills', 'skills.strength', 'skills.agility', 'skills.intelligence'], (control, s, a, i) => {\n          const skillPoints = (s && a && i) ? (s.value + a.value + i.value) : 0;\n          const message = `${skillPoints} of 10 skill points used`;\n          if (control.hasError('skills')) {\n            return {\n              type: 'error',\n              message\n            };\n          } else {\n            const skillPointsAvailable = 10 - skillPoints;\n            if (skillPointsAvailable > 0) {\n              return {\n                type: 'warning',\n                message\n              };\n            }\n            return {\n              type: 'default',\n              message\n            };\n          }\n        })\n      ]\n    },\n    attributes: {\n      type: 'token',\n      label: 'Attributes',\n      hints: [\n        {\n          type: 'default',\n          message: 'Attributes'\n        },\n        {\n          type: 'error',\n          error: 'minLength',\n          message: 'Minimum length is 2'\n        },\n      ],\n      validators: [(control: AbstractControl) => {\n        return Array.isArray(control.value) && control.value.length > 1 ? null : { minLength: true };\n      }],\n    },\n    perks: {\n      type: 'select',\n      label: 'Perks',\n      params: {\n        placeholder: 'Select perks',\n        selectionMode: 'multiple',\n        options: [{\n          label: 'Snake Eater',\n          sublabel: 'It gives you a 25% increase to your poison resistance.',\n          value: 'snakeeater'\n        },\n        {\n          label: 'Swift Learner',\n          sublabel: 'Swift Learner\tWhenever you gain experience, you\\'ll receive 5% more experience per level of the perk.',\n          value: 'swiftlearner',\n        },\n        {\n          label: 'Toughness',\n          sublabel: 'It adds 10% to your general damage resistance per level.',\n          value: 'toughness'\n        },\n        {\n          label: 'Explorer',\n          sublabel: 'You\\'ll get more random encounters with this perk.',\n          value: 'explorer'\n        }],\n      },\n      validators: [\n        (ctrl: AbstractControl) => {\n          if (ctrl.value && Array.isArray(ctrl.value) && ctrl.value.length === 2) {\n            return null;\n          }\n          return {\n            perks: true\n          };\n        }\n      ],\n      hints: [{\n        type: 'error',\n        error: 'perks',\n        message: 'You must select two perks'\n      }],\n    },\n    items: {\n      type: 'array',\n      label: 'Items',\n      initialFields: 2,\n      fieldLabel: (index) => 'Item ' + (index + 1),\n      noFieldsLabel: 'Hero carries no items',\n      field: {\n        type: 'object',\n        fields: {\n          item_name: {\n            type: 'input',\n            label: 'Name',\n            validators: [ Validators.required],\n            required: true,\n            hints: [\n              {\n                type: 'error',\n                error: 'required',\n                message: 'Item name is required'\n              },\n            ]\n          },\n          item_quantity: {\n            type: 'number',\n            label: 'Quantity',\n            validators: [ Validators.required, Validators.min(1), Validators.max(10)],\n            required: true,\n            hints: [\n              {\n                type: 'error',\n                error: 'required',\n                message: 'Item quantity is required'\n              },\n              {\n                type: 'error',\n                error: 'min',\n                message: 'Minimum is 1'\n              },\n              {\n                type: 'error',\n                error: 'max',\n                message: 'Maximum is 10'\n              },\n            ]\n          }\n        }\n      }\n    },\n    terms: {\n      type: 'checkbox',\n      label: 'Agree to our terms',\n      validators: [(control: AbstractControl) => {\n        if (!control.value) {\n          return {\n            termsDisagree: true,\n          };\n        }\n        return null;\n      }],\n      hints: [\n        {\n          type: 'default',\n          message: 'Read the terms to learn how we collect, use and share your data'\n        },\n        {\n          type: 'error',\n          error: 'termsDisagree',\n          message: 'You must agree to our Terms'\n        }\n      ]\n    },\n    submit: {\n      type: 'buttons',\n      buttons: [\n        {\n          type: 'submit',\n          label: 'Submit',\n          class: 'vclEmphasized'\n        },\n        {\n          type: 'button',\n          label: 'Reset',\n          action: 'reset'\n        }\n      ]\n    }\n  },\n};\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h2</span>&gt;</span>Create a hero<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h2</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-jss-form</span> \\n  #<span class=\\\"hljs-attr\\\">heroForm</span>=<span class=\\\"hljs-string\\\">\\\"vclJssForm\\\"</span>\\n  [<span class=\\\"hljs-attr\\\">schema</span>]=<span class=\\\"hljs-string\\\">\\\"heroSchema\\\"</span> \\n  (<span class=\\\"hljs-attr\\\">formSubmit</span>)=<span class=\\\"hljs-string\\\">\\\"onSubmit($event)\\\"</span> \\n  (<span class=\\\"hljs-attr\\\">formAction</span>)=<span class=\\\"hljs-string\\\">\\\"onAction($event)\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-jss-form</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"value\\\"</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">\\\"state$ | async as formState\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h4</span>&gt;</span>Form<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h4</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span>&gt;</span>{{formState | json}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, Input, forwardRef } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { FormFieldControl } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { ControlValueAccessor, NG_VALUE_ACCESSOR } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/forms'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  selector: <span class=\\\"hljs-string\\\">'demo-counter'</span>,\\n  styles: [<span class=\\\"hljs-string\\\">`\\n    vcl-icogram {\\n      font-size: 2.5em; user-select: none;\\n    }\\n    vcl-icon {\\n      cursor: pointer;\\n    }\\n  `</span>],\\n  template: <span class=\\\"hljs-string\\\">`\\n    &lt;vcl-icogram&gt;\\n      &lt;vcl-icon vclPrepend tabindex=0 (keydown.enter)=\\\"decrement()\\\" (click)=\\\"decrement()\\\" icon=\\\"fas:minus-square\\\"&gt;&lt;/vcl-icon&gt;\\n      {{counter}}\\n      &lt;vcl-icon vclAppend tabindex=0 (blur)=\\\"onTouched()\\\" (keydown.enter)=\\\"increment()\\\" (click)=\\\"increment()\\\" icon=\\\"fas:plus-square\\\"&gt;&lt;/vcl-icon&gt;\\n    &lt;/vcl-icogram&gt;\\n  `</span>,\\n  providers: [{\\n    provide: NG_VALUE_ACCESSOR,\\n    useExisting: forwardRef(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> CounterComponent),\\n    multi: <span class=\\\"hljs-literal\\\">true</span>\\n  }]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> CounterComponent <span class=\\\"hljs-keyword\\\">implements</span> ControlValueAccessor {\\n  counter = <span class=\\\"hljs-number\\\">0</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Input</span>()\\n  min?: <span class=\\\"hljs-built_in\\\">number</span>;\\n\\n  <span class=\\\"hljs-meta\\\">@Input</span>()\\n  max?: <span class=\\\"hljs-built_in\\\">number</span>;\\n\\n  increment() {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">typeof</span> <span class=\\\"hljs-keyword\\\">this</span>.max === <span class=\\\"hljs-string\\\">'number'</span> &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.counter &gt;= <span class=\\\"hljs-keyword\\\">this</span>.max) {\\n      <span class=\\\"hljs-keyword\\\">return</span>;\\n    }\\n    <span class=\\\"hljs-keyword\\\">this</span>.counter++;\\n    <span class=\\\"hljs-keyword\\\">this</span>.onChange(<span class=\\\"hljs-keyword\\\">this</span>.counter);\\n  }\\n  decrement() {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">typeof</span> <span class=\\\"hljs-keyword\\\">this</span>.min === <span class=\\\"hljs-string\\\">'number'</span> &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.counter &lt;= <span class=\\\"hljs-keyword\\\">this</span>.min) {\\n      <span class=\\\"hljs-keyword\\\">return</span>;\\n    }\\n    <span class=\\\"hljs-keyword\\\">this</span>.counter--;\\n    <span class=\\\"hljs-keyword\\\">this</span>.onChange(<span class=\\\"hljs-keyword\\\">this</span>.counter);\\n    <span class=\\\"hljs-keyword\\\">this</span>.onTouched();\\n  }\\n  writeValue(obj: <span class=\\\"hljs-built_in\\\">any</span>): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.counter = obj;\\n  }\\n  registerOnChange(fn: <span class=\\\"hljs-built_in\\\">any</span>): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.onChange = fn;\\n  }\\n  registerOnTouched(fn: <span class=\\\"hljs-built_in\\\">any</span>): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.onTouched = fn;\\n  }\\n  onChange: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">_: <span class=\\\"hljs-built_in\\\">any</span></span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">void</span> = <span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {};\\n  onTouched: <span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> <span class=\\\"hljs-built_in\\\">void</span> = <span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {};\\n}\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  template: <span class=\\\"hljs-string\\\">`\\n    &lt;span *ngIf=\\\"field.label\\\"&gt;{{ field.label }}&lt;/span&gt;&lt;br&gt;\\n    &lt;demo-counter [formControl]=\\\"field.control\\\" [min]=\\\"field.params.min\\\" [max]=\\\"field.params.max\\\"&gt;&lt;/demo-counter&gt;\\n    `</span>,\\n    styles: [\\n      <span class=\\\"hljs-string\\\">`:host {\\n        display: block;\\n        padding-top: 1em;\\n        padding-bottom: 1em;\\n      }`</span>\\n    ]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> FormFieldCounterComponent {\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">public</span> field: FormFieldControl</span>) { }\\n}\\n\\nFormFieldControl.register(<span class=\\\"hljs-string\\\">'counter'</span>, FormFieldCounterComponent);\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, ViewChild, AfterViewInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { JssFormComponent, NotifierService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { merge, Observable } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'rxjs'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { map } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'rxjs/operators'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { HERO_SCHEMA } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./hero'</span>;\\n\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> JssFormDemoComponent <span class=\\\"hljs-keyword\\\">implements</span> AfterViewInit {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">private</span> notifier: NotifierService</span>) { }\\n\\n  <span class=\\\"hljs-meta\\\">@ViewChild</span>(<span class=\\\"hljs-string\\\">'heroForm'</span>)\\n  heroForm: JssFormComponent;\\n\\n  heroSchema = HERO_SCHEMA;\\n\\n  state$: Observable&lt;<span class=\\\"hljs-built_in\\\">any</span>&gt;;\\n\\n  onSubmit() {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valid) {\\n      <span class=\\\"hljs-keyword\\\">this</span>.notifier.success(<span class=\\\"hljs-string\\\">'Hero created'</span>);\\n    } <span class=\\\"hljs-keyword\\\">else</span> {\\n     <span class=\\\"hljs-keyword\\\">this</span>.notifier.error(<span class=\\\"hljs-string\\\">'Hero invalid'</span>);\\n    }\\n  }\\n\\n  onAction(action: <span class=\\\"hljs-built_in\\\">string</span>) {\\n    <span class=\\\"hljs-keyword\\\">if</span> (action === <span class=\\\"hljs-string\\\">'reset'</span> &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm) {\\n      <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.resetForm(<span class=\\\"hljs-keyword\\\">this</span>.heroForm.field.defaultValue);\\n      <span class=\\\"hljs-keyword\\\">this</span>.notifier.info(<span class=\\\"hljs-string\\\">'Hero reset'</span>);\\n    }\\n  }\\n\\n  ngAfterViewInit() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.state$ = merge(<span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.statusChanges, <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valueChanges, <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.ngSubmit).pipe(\\n      map(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">return</span> {\\n          status: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.status,\\n          valid: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valid,\\n          dirty: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.dirty,\\n          submitted: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.submitted,\\n          touched: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.touched,\\n          pristine: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.pristine,\\n          errors: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.errors,\\n          value: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.value,\\n        };\\n      })\\n    );\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Validators, AbstractControl } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { VCLFormFieldSchemaRoot, conditional } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">const</span> HERO_SCHEMA: VCLFormFieldSchemaRoot&lt;<span class=\\\"hljs-string\\\">'counter'</span>&gt; = {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'form'</span>,\\n  fields: {\\n    name: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Name'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'The hero\\\\'s name'</span>,\\n      },\\n      validators: [\\n        Validators.required, Validators.minLength(<span class=\\\"hljs-number\\\">2</span>)\\n      ],\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'required'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Name is required'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'minlength'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Name must have a length of at least 2 characters'</span>\\n        }\\n      ]\\n    },\\n    description: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'textarea'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Description'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'The hero\\\\'s Description'</span>,\\n      }\\n    },\\n    level: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'counter'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Level'</span>,\\n      defaultValue: <span class=\\\"hljs-number\\\">1</span>,\\n      params: {\\n        min: <span class=\\\"hljs-number\\\">1</span>,\\n        max: <span class=\\\"hljs-number\\\">10</span>\\n      }\\n    },\\n    leader: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'switch'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Leader'</span>,\\n      defaultValue: <span class=\\\"hljs-literal\\\">false</span>,\\n      visible: conditional([<span class=\\\"hljs-string\\\">'level'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">level: AbstractControl</span>) =&gt;</span> level.value &gt;= <span class=\\\"hljs-number\\\">5</span>),\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (!control.value) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            leader: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      params: {\\n        offLabel: <span class=\\\"hljs-string\\\">'No'</span>,\\n        onLabel: <span class=\\\"hljs-string\\\">'Yes'</span>,\\n      }\\n    },\\n    picture: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'file-input'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Picture'</span>,\\n      params: {\\n        multiple: <span class=\\\"hljs-literal\\\">false</span>,\\n        placeholder: <span class=\\\"hljs-string\\\">'Picture of the hero'</span>\\n      }\\n    },\\n    email: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Email'</span>,\\n      validators: [Validators.required, Validators.email],\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'required'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Email is required'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'email'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Invalid Email address'</span>\\n        }\\n      ]\\n    },\\n    gender: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'radio-group'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Gender'</span>,\\n      defaultValue: <span class=\\\"hljs-string\\\">'m'</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Male'</span>,\\n          value: <span class=\\\"hljs-string\\\">'m'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Female'</span>,\\n          value: <span class=\\\"hljs-string\\\">'f'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Genderless'</span>,\\n          value: <span class=\\\"hljs-string\\\">'g'</span>\\n        }],\\n      }\\n    },\\n    dob: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'date-picker'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Date of Birth'</span>\\n    },\\n    alignment: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'button-group'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Alignment'</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Good'</span>,\\n          value: <span class=\\\"hljs-number\\\">1</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Neutral'</span>,\\n          value: <span class=\\\"hljs-number\\\">0</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Evil'</span>,\\n          value: <span class=\\\"hljs-number\\\">-1</span>\\n        }]\\n      }\\n    },\\n    language: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'hidden'</span>,\\n      defaultValue: navigator.language\\n    },\\n    <span class=\\\"hljs-keyword\\\">class</span>: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'select-list'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Class'</span>,\\n      defaultValue: <span class=\\\"hljs-literal\\\">null</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Warrior'</span>,\\n          value: <span class=\\\"hljs-string\\\">'warrior'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Mage'</span>,\\n          value: <span class=\\\"hljs-string\\\">'mage'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Rogue'</span>,\\n          value: <span class=\\\"hljs-string\\\">'rogue'</span>\\n        }]\\n      }\\n    },\\n    hitpoints: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'slider'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Hit Points'</span>,\\n      defaultValue: <span class=\\\"hljs-number\\\">15</span>,\\n      disabled: conditional([<span class=\\\"hljs-string\\\">'class'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">c</span>) =&gt;</span> !c.value),\\n      params: conditional([<span class=\\\"hljs-string\\\">'class'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (control.value === <span class=\\\"hljs-string\\\">'rogue'</span>) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">8</span>,\\n            max: <span class=\\\"hljs-number\\\">18</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }  <span class=\\\"hljs-keyword\\\">else</span> <span class=\\\"hljs-keyword\\\">if</span> (control.value === <span class=\\\"hljs-string\\\">'mage'</span>) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">5</span>,\\n            max: <span class=\\\"hljs-number\\\">15</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        } <span class=\\\"hljs-keyword\\\">else</span> {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">10</span>,\\n            max: <span class=\\\"hljs-number\\\">20</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n      }),\\n    },\\n    skills: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'object'</span>,\\n      layout: <span class=\\\"hljs-string\\\">'fieldset'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Skills'</span>,\\n      fields: {\\n        strength: {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Strength (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n        agility: {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Agility (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n        intelligence: {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Intelligence (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n      },\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">const</span> s = control.get(<span class=\\\"hljs-string\\\">'strength'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> a = control.get(<span class=\\\"hljs-string\\\">'agility'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> i = control.get(<span class=\\\"hljs-string\\\">'intelligence'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> skillPoints = (s &amp;&amp; a &amp;&amp; i) ? (s.value + a.value + i.value) : <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">return</span> skillPoints &gt; <span class=\\\"hljs-number\\\">10</span> ? { skills: <span class=\\\"hljs-literal\\\">true</span> } : <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      hints: [\\n        conditional([<span class=\\\"hljs-string\\\">'skills'</span>, <span class=\\\"hljs-string\\\">'skills.strength'</span>, <span class=\\\"hljs-string\\\">'skills.agility'</span>, <span class=\\\"hljs-string\\\">'skills.intelligence'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control, s, a, i</span>) =&gt;</span> {\\n          <span class=\\\"hljs-keyword\\\">const</span> skillPoints = (s &amp;&amp; a &amp;&amp; i) ? (s.value + a.value + i.value) : <span class=\\\"hljs-number\\\">0</span>;\\n          <span class=\\\"hljs-keyword\\\">const</span> message = <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${skillPoints}</span> of 10 skill points used`</span>;\\n          <span class=\\\"hljs-keyword\\\">if</span> (control.hasError(<span class=\\\"hljs-string\\\">'skills'</span>)) {\\n            <span class=\\\"hljs-keyword\\\">return</span> {\\n              <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n              message\\n            };\\n          } <span class=\\\"hljs-keyword\\\">else</span> {\\n            <span class=\\\"hljs-keyword\\\">const</span> skillPointsAvailable = <span class=\\\"hljs-number\\\">10</span> - skillPoints;\\n            <span class=\\\"hljs-keyword\\\">if</span> (skillPointsAvailable &gt; <span class=\\\"hljs-number\\\">0</span>) {\\n              <span class=\\\"hljs-keyword\\\">return</span> {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'warning'</span>,\\n                message\\n              };\\n            }\\n            <span class=\\\"hljs-keyword\\\">return</span> {\\n              <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n              message\\n            };\\n          }\\n        })\\n      ]\\n    },\\n    attributes: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'token'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Attributes'</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Attributes'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'minLength'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Minimum length is 2'</span>\\n        },\\n      ],\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-built_in\\\">Array</span>.isArray(control.value) &amp;&amp; control.value.length &gt; <span class=\\\"hljs-number\\\">1</span> ? <span class=\\\"hljs-literal\\\">null</span> : { minLength: <span class=\\\"hljs-literal\\\">true</span> };\\n      }],\\n    },\\n    perks: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'select'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Perks'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'Select perks'</span>,\\n        selectionMode: <span class=\\\"hljs-string\\\">'multiple'</span>,\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Snake Eater'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'It gives you a 25% increase to your poison resistance.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'snakeeater'</span>\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Swift Learner'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'Swift Learner\\tWhenever you gain experience, you\\\\'ll receive 5% more experience per level of the perk.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'swiftlearner'</span>,\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Toughness'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'It adds 10% to your general damage resistance per level.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'toughness'</span>\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Explorer'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'You\\\\'ll get more random encounters with this perk.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'explorer'</span>\\n        }],\\n      },\\n      validators: [\\n        <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">ctrl: AbstractControl</span>) =&gt;</span> {\\n          <span class=\\\"hljs-keyword\\\">if</span> (ctrl.value &amp;&amp; <span class=\\\"hljs-built_in\\\">Array</span>.isArray(ctrl.value) &amp;&amp; ctrl.value.length === <span class=\\\"hljs-number\\\">2</span>) {\\n            <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n          }\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            perks: <span class=\\\"hljs-literal\\\">true</span>\\n          };\\n        }\\n      ],\\n      hints: [{\\n        <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n        error: <span class=\\\"hljs-string\\\">'perks'</span>,\\n        message: <span class=\\\"hljs-string\\\">'You must select two perks'</span>\\n      }],\\n    },\\n    items: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'array'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Items'</span>,\\n      initialFields: <span class=\\\"hljs-number\\\">2</span>,\\n      fieldLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">index</span>) =&gt;</span> <span class=\\\"hljs-string\\\">'Item '</span> + (index + <span class=\\\"hljs-number\\\">1</span>),\\n      noFieldsLabel: <span class=\\\"hljs-string\\\">'Hero carries no items'</span>,\\n      field: {\\n        <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'object'</span>,\\n        fields: {\\n          item_name: {\\n            <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n            label: <span class=\\\"hljs-string\\\">'Name'</span>,\\n            validators: [ Validators.required],\\n            required: <span class=\\\"hljs-literal\\\">true</span>,\\n            hints: [\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'required'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Item name is required'</span>\\n              },\\n            ]\\n          },\\n          item_quantity: {\\n            <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'number'</span>,\\n            label: <span class=\\\"hljs-string\\\">'Quantity'</span>,\\n            validators: [ Validators.required, Validators.min(<span class=\\\"hljs-number\\\">1</span>), Validators.max(<span class=\\\"hljs-number\\\">10</span>)],\\n            required: <span class=\\\"hljs-literal\\\">true</span>,\\n            hints: [\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'required'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Item quantity is required'</span>\\n              },\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'min'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Minimum is 1'</span>\\n              },\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'max'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Maximum is 10'</span>\\n              },\\n            ]\\n          }\\n        }\\n      }\\n    },\\n    terms: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'checkbox'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Agree to our terms'</span>,\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (!control.value) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            termsDisagree: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Read the terms to learn how we collect, use and share your data'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'termsDisagree'</span>,\\n          message: <span class=\\\"hljs-string\\\">'You must agree to our Terms'</span>\\n        }\\n      ]\\n    },\\n    submit: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'buttons'</span>,\\n      buttons: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'submit'</span>,\\n          label: <span class=\\\"hljs-string\\\">'Submit'</span>,\\n          <span class=\\\"hljs-keyword\\\">class</span>: <span class=\\\"hljs-string\\\">'vclEmphasized'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'button'</span>,\\n          label: <span class=\\\"hljs-string\\\">'Reset'</span>,\\n          action: <span class=\\\"hljs-string\\\">'reset'</span>\\n        }\\n      ]\\n    }\\n  },\\n};\\n\"","module.exports = \"<h1 id=\\\"vcl-jss-form\\\">vcl-jss-form</h1>\\n<p>Creates a html-form from a <a href=\\\"http://jsonschema.net/\\\">jsonschema</a>.</p>\\n<h2 id=\\\"installation\\\">Installation</h2>\\n<pre class=\\\"hljs\\\"><code>npm install @ng-vcl/jss-form --save</code></pre>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { VCLJssFormModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;ng-vcl&apos;</span>;\\n\\n@NgModule({\\n  <span class=\\\"hljs-attr\\\">imports</span>: [ VCLJssFormModule ],\\n  ...\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">class</span> <span class=\\\"hljs-title\\\">AppComponent</span> </span>{}</pre>\\n<pre class=\\\"hljs\\\"><code>&lt;vcl-jss-form [schema]=&quot;mySchema&quot; [(ngModel)]=&quot;value&quot; (ngSubmit)=&quot;onSubmit($event)&quot; (action)=&quot;onAction($event)&quot; &gt;&lt;/vcl-jss-form&gt;</code></pre>\\n<p>example-schema:</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">const</span> HERO_SCHEMA: VCLFormSchema = {\\n  <span class=\\\"hljs-attr\\\">title</span>: <span class=\\\"hljs-string\\\">&apos;hero schema&apos;</span>,\\n  <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;object&apos;</span>,\\n  <span class=\\\"hljs-attr\\\">properties</span>: {\\n    <span class=\\\"hljs-attr\\\">name</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;input&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Name&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">placeholder</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s name&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s name&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">validator</span>: {\\n        <span class=\\\"hljs-attr\\\">minLength</span>: <span class=\\\"hljs-number\\\">4</span>,\\n        <span class=\\\"hljs-attr\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;string&apos;</span>\\n      }\\n    },\\n    <span class=\\\"hljs-attr\\\">description</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;textarea&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Description&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s description&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">password</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;password&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Password&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">placeholder</span>: <span class=\\\"hljs-string\\\">&apos;Password&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">visibleIcon</span>: <span class=\\\"hljs-string\\\">&apos; fas fa-unlock &apos;</span>,\\n      <span class=\\\"hljs-attr\\\">invisibleIcon</span>: <span class=\\\"hljs-string\\\">&apos; fas fa-unlock-alt &apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The account password&apos;</span>\\n    },\\n    <span class=\\\"hljs-attr\\\">mail_old</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;hidden&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">color</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;select&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Team&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;color defines which team the hero belongs to&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">mode</span>: <span class=\\\"hljs-string\\\">&apos;single&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">options</span>: [\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Red&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;#ff0000&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Green&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;#008000&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Blue&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;#0000FF&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sublabel</span>: <span class=\\\"hljs-string\\\">&apos;Sublabels!&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Yellow&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;#FFFF00&apos;</span>\\n        }\\n      ]\\n    },\\n    <span class=\\\"hljs-attr\\\">gender</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;radio&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Gender&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">options</span>: [{<span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;male&apos;</span>}, {<span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;female&apos;</span>}],\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s gender&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">perks</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;dropdown&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Perks&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s perks&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">mode</span>: <span class=\\\"hljs-string\\\">&apos;multiple&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">validator</span>: {\\n        <span class=\\\"hljs-attr\\\">minItems</span>: <span class=\\\"hljs-number\\\">1</span>,\\n        <span class=\\\"hljs-attr\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;array&apos;</span>\\n      },\\n      <span class=\\\"hljs-attr\\\">options</span>: [\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Heave Ho!&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;heave_ho    &apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Snakeater&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;snakeater&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">sublabel</span>: <span class=\\\"hljs-string\\\">&apos;Sublabels!&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Karma Beacon&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">&apos;karma_beacon&apos;</span>\\n        },\\n      ]\\n    },\\n    <span class=\\\"hljs-attr\\\">leader</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;checkbox&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Leader&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hideLabel</span>: <span class=\\\"hljs-literal\\\">true</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;Whether the hero is a leader&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">hp</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;slider&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Hitpoints&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">minimum</span>: <span class=\\\"hljs-number\\\">0</span>,\\n      <span class=\\\"hljs-attr\\\">maximum</span>: <span class=\\\"hljs-number\\\">20</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s max health&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">alive</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;switch&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Is alive?&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">mainSkill</span>: {\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Main skill&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">description</span>: <span class=\\\"hljs-string\\\">&apos;nested object&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s main skill&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;object&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">properties</span>: {\\n        <span class=\\\"hljs-attr\\\">name</span>: {\\n          <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;input&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Skill name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The skills name&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">validator</span>: {\\n            <span class=\\\"hljs-attr\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;string&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">minLength</span>: <span class=\\\"hljs-number\\\">6</span>\\n          }\\n        },\\n        <span class=\\\"hljs-attr\\\">damage</span>: {\\n          <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;number&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Skill damage&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The skills max damage&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">validator</span>: {\\n            <span class=\\\"hljs-attr\\\">type</span>: [<span class=\\\"hljs-string\\\">&apos;number&apos;</span>, <span class=\\\"hljs-string\\\">&apos;null&apos;</span>],\\n            <span class=\\\"hljs-attr\\\">minimum</span>: <span class=\\\"hljs-number\\\">0</span>,\\n            <span class=\\\"hljs-attr\\\">maximum</span>: <span class=\\\"hljs-number\\\">100</span>,\\n          }\\n        }\\n      },\\n    },\\n    <span class=\\\"hljs-attr\\\">attributes</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;token&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Attributes&apos;</span>,\\n    },\\n    <span class=\\\"hljs-attr\\\">dob</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;date&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Date of Birth&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">datePickerConfig</span>: {\\n        <span class=\\\"hljs-attr\\\">displayTime</span>: <span class=\\\"hljs-literal\\\">true</span>\\n      }\\n    },\\n    <span class=\\\"hljs-attr\\\">custom</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;custom&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Custom Component&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">customComponent</span>: CustomSampleComponent,\\n      <span class=\\\"hljs-attr\\\">customParameters</span>: {\\n        <span class=\\\"hljs-attr\\\">message</span>: <span class=\\\"hljs-string\\\">&apos;Counter:&apos;</span>\\n      }\\n    },\\n    <span class=\\\"hljs-attr\\\">items</span>: {\\n      <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Items&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">singularLabel</span>: <span class=\\\"hljs-string\\\">&apos;Item&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;array&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The hero\\\\&apos;s items&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">items</span>: {\\n        <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;object&apos;</span>,\\n        <span class=\\\"hljs-attr\\\">properties</span>: {\\n          <span class=\\\"hljs-attr\\\">name</span>: {\\n            <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;input&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Item name&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">validator</span>: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">c: AbstractControl</span>) =&gt;</span> {\\n              <span class=\\\"hljs-keyword\\\">if</span> (c.value) {\\n                <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n              }\\n              <span class=\\\"hljs-keyword\\\">return</span> {\\n                <span class=\\\"hljs-attr\\\">foo</span>: <span class=\\\"hljs-string\\\">&apos;bar&apos;</span>\\n              };\\n            },\\n            <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The items name&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">classInputGroup</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutHorizontal&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">classLabel</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutFlex vclLayout1 vclAlignRight paddingRight1&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">classInput</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutFlex vclLayout11&apos;</span>\\n          },\\n          <span class=\\\"hljs-attr\\\">quantity</span>: {\\n            <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;number&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Quantity&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">hint</span>: <span class=\\\"hljs-string\\\">&apos;The item quantity&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">required</span>: <span class=\\\"hljs-literal\\\">true</span>,\\n            <span class=\\\"hljs-attr\\\">classInputGroup</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutHorizontal&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">classLabel</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutFlex vclLayout1 vclAlignRight paddingRight1&apos;</span>,\\n            <span class=\\\"hljs-attr\\\">classInput</span>: <span class=\\\"hljs-string\\\">&apos;vclLayoutFlex vclLayout11&apos;</span>\\n          }\\n        }\\n      }\\n    },\\n    <span class=\\\"hljs-attr\\\">submit</span>: {\\n      <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;buttons&apos;</span>,\\n      <span class=\\\"hljs-attr\\\">buttons</span>: [\\n        {\\n          <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;submit&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Submit&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">class</span>: <span class=\\\"hljs-string\\\">&apos;vclEmphasized&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-attr\\\">formControl</span>: <span class=\\\"hljs-string\\\">&apos;button&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">label</span>: <span class=\\\"hljs-string\\\">&apos;Reset&apos;</span>,\\n          <span class=\\\"hljs-attr\\\">action</span>: <span class=\\\"hljs-string\\\">&apos;reset&apos;</span>\\n        }\\n      ]\\n    }\\n  },\\n};</pre>\\n<h3 id=\\\"api\\\">API</h3>\\n<h4 id=\\\"vcl-jss-form-attributes\\\">vcl-jss-form attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>schema</code></td>\\n<td>object</td>\\n<td></td>\\n<td>a jsonschema to build the form from</td>\\n</tr>\\n<tr>\\n<td><code>ngModel</code></td>\\n<td>any</td>\\n<td>Value of the form</td>\\n<td></td>\\n</tr>\\n</tbody></table>\\n<h4 id=\\\"jss-form-events\\\">jss-form events</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>ngSubmit</code></td>\\n<td>any</td>\\n<td>triggered when the form is submitted</td>\\n</tr>\\n<tr>\\n<td><code>action</code></td>\\n<td>any</td>\\n<td>triggered when a button is pressed</td>\\n</tr>\\n</tbody></table>\\n<h4 id=\\\"vclformschemabase-attributes\\\">VCLFormSchemaBase attributes</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>formControl</code></td>\\n<td>string</td>\\n<td></td>\\n<td>defines the input-type of the form-element. For types see below.</td>\\n</tr>\\n<tr>\\n<td><code>label</code></td>\\n<td>string</td>\\n<td></td>\\n<td>a label-string. attribute name will be the default</td>\\n</tr>\\n<tr>\\n<td><code>hint</code></td>\\n<td>string</td>\\n<td></td>\\n<td>defines a hint placed under input field</td>\\n</tr>\\n<tr>\\n<td><code>required</code></td>\\n<td>boolean</td>\\n<td>false</td>\\n<td>form input is required</td>\\n</tr>\\n<tr>\\n<td><code>disabled</code></td>\\n<td>boolean</td>\\n<td>false</td>\\n<td>form input is disabled</td>\\n</tr>\\n<tr>\\n<td><code>validator</code></td>\\n<td>ValidatorFn</td>\\n<td>jssSchema</td>\\n<td></td>\\n</tr>\\n</tbody></table>\\n<h4 id=\\\"formcontrols\\\">formControls</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>ValueType</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>custom</code></td>\\n<td>any</td>\\n</tr>\\n<tr>\\n<td><code>input</code></td>\\n<td>string</td>\\n</tr>\\n<tr>\\n<td><code>textarea</code></td>\\n<td>string</td>\\n</tr>\\n<tr>\\n<td><code>password</code></td>\\n<td>string</td>\\n</tr>\\n<tr>\\n<td><code>hidden</code></td>\\n<td>string</td>\\n</tr>\\n<tr>\\n<td><code>select</code></td>\\n<td>string of enum</td>\\n</tr>\\n<tr>\\n<td><code>radio</code></td>\\n<td>string of enum</td>\\n</tr>\\n<tr>\\n<td><code>checkbox</code></td>\\n<td>boolean</td>\\n</tr>\\n<tr>\\n<td><code>switch</code></td>\\n<td>boolean</td>\\n</tr>\\n<tr>\\n<td><code>number</code></td>\\n<td>number</td>\\n</tr>\\n<tr>\\n<td><code>slider</code></td>\\n<td>number</td>\\n</tr>\\n<tr>\\n<td><code>button</code></td>\\n<td>number</td>\\n</tr>\\n<tr>\\n<td><code>submit</code></td>\\n<td>number</td>\\n</tr>\\n<tr>\\n<td><code>buttons</code></td>\\n<td>number</td>\\n</tr>\\n<tr>\\n<td><code>date</code></td>\\n<td>date</td>\\n</tr>\\n</tbody></table>\\n<pre class=\\\"hljs\\\">export interface VCLFormSchemaInput extends VCLFormSchemaBase {\\n  formControl: &apos;input&apos; | &apos;number&apos;;\\n  placeholder?: string;\\n}\\n\\nexport interface VCLFormSchemaPassword extends VCLFormSchemaBase {\\n  formControl: &apos;password&apos;;\\n  placeholder?: string;\\n  visibleIcon?: string;\\n  invisibleIcon?: string;\\n}\\n\\nexport interface VCLFormSchemaHidden extends VCLFormSchemaBase {\\n  formControl: &apos;hidden&apos;;\\n}\\n\\nexport interface VCLFormSchemaTextarea extends VCLFormSchemaBase {\\n  formControl: &apos;textarea&apos;;\\n  minRows: number;\\n  maxRows: number;\\n}\\n\\nexport interface VCLFormSchemaOptions {\\n  label?: string;\\n  sublabel?: string;\\n  value: any;\\n}\\n\\nexport interface VCLFormSchemaSelect extends VCLFormSchemaBase {\\n  formControl: &apos;select&apos;;\\n  mode: &apos;multiple&apos; | &apos;single&apos;;\\n  expandedIcon: string;\\n  collapsedIcon: string;\\n  options: VCLFormSchemaOptions[];\\n}\\n\\nexport interface VCLFormSchemaDropdown extends VCLFormSchemaBase {\\n  formControl: &apos;dropdown&apos;;\\n  mode: &apos;multiple&apos; | &apos;single&apos;;\\n  options: VCLFormSchemaOptions[];\\n}\\n\\nexport interface VCLFormSchemaSwitch extends VCLFormSchemaBase {\\n  formControl: &apos;switch&apos;;\\n}\\n\\nexport interface VCLFormSchemaSlider extends VCLFormSchemaBase {\\n  formControl: &apos;slider&apos;;\\n  scale?: number | string[];\\n  minimum: number;\\n  maximum: number;\\n}\\nexport interface VCLFormSchemaCheckbox extends VCLFormSchemaBase {\\n  formControl: &apos;checkbox&apos;;\\n  iconPosition: &apos;left&apos; | &apos;right&apos;;\\n  checkedIcon: string;\\n  uncheckedIcon: string;\\n}\\n\\nexport interface VCLFormSchemaRadio extends VCLFormSchemaBase {\\n  formControl: &apos;radio&apos;;\\n  iconPosition: &apos;left&apos; | &apos;right&apos;;\\n  checkedIcon: string;\\n  uncheckedIcon: string;\\n  options: VCLFormSchemaOptions[];\\n}\\n\\nexport interface VCLFormSchemaToken extends VCLFormSchemaBase {\\n  formControl: &apos;token&apos;;\\n}\\n\\nexport interface VCLFormSchemaDate extends VCLFormSchemaBase {\\n  formControl: &apos;date&apos;;\\n  datePickerConfig: DatePickerConfig;\\n}\\n\\nexport interface VCLFormSchemaSubmit extends VCLFormSchemaBase {\\n  prepIcon: string;\\n  appIcon: string;\\n  class: string;\\n  autoDisable: boolean;\\n  formControl: &apos;submit&apos;;\\n}\\n\\nexport interface VCLFormSchemaButton extends VCLFormSchemaBase {\\n  prepIcon: string;\\n  appIcon: string;\\n  class: string;\\n  action: any;\\n  formControl: &apos;button&apos;;\\n}\\n\\nexport interface VCLFormSchemaButtons extends VCLFormSchemaBase {\\n  formControl: &apos;buttons&apos;;\\n  buttons: VCLFormSchemaButton[];\\n}\\n\\nexport interface VCLFormSchemaArray extends VCLFormSchemaBase {\\n  formControl: &apos;array&apos;;\\n}\\n\\nexport interface VCLFormSchemaRoot extends VCLFormSchemaBase {\\n  formControl: &apos;object&apos;;\\n  title?: string;\\n  description?: string;\\n  properties?: { [name: string]: VCLFormSchema };\\n}\\n\\nexport interface VCLFormSchemaCustom extends VCLFormSchemaBase {\\n  formControl: &apos;custom&apos;;\\n  type: string;\\n  customComponent: ControlValueAccessory;\\n  customParameters: any;\\n}\\n\\nexport type VCLFormSchema = VCLFormSchemaRoot | VCLFormSchemaInput | VCLFormSchemaTextarea\\n                          | VCLFormSchemaPassword | VCLFormSchemaHidden\\n                          | VCLFormSchemaCheckbox | VCLFormSchemaArray | VCLFormSchemaSelect\\n                          | VCLFormSchemaDropdown | VCLFormSchemaSwitch | VCLFormSchemaSlider\\n                          | VCLFormSchemaRadio | VCLFormSchemaToken | VCLFormSchemaDate\\n                          | VCLFormSchemaCustom | VCLFormSchemaSubmit | VCLFormSchemaButton\\n                          | VCLFormSchemaButtons;\\n</pre>\\n<h4 id=\\\"customformcontrol\\\">CustomFormControl</h4>\\n<p>A custom component should be an implementation of <code>ControlValueAccessor</code>.<br>Parameters provided in <code>customParameters</code> are accessible as inputs.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-meta\\\">@Component</span>({\\n  template: <span class=\\\"hljs-string\\\">`&lt;span&gt;{{ message }} {{ counter }}&lt;/span&gt;&lt;br&gt;\\n  &lt;button vcl-button type=&quot;button&quot; class=&quot;vclButton&quot; [disabled]=&quot;disabled&quot; (click)=&quot;increment()&quot;&gt;+&lt;/button&gt;\\n  &lt;button vcl-button type=&quot;button&quot; class=&quot;vclButton&quot; [disabled]=&quot;disabled&quot; (click)=&quot;decrement()&quot; style=&quot;margin-left: 5px;&quot;&gt;-&lt;/button&gt;`</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> CustomSampleComponent <span class=\\\"hljs-keyword\\\">implements</span> ControlValueAccessor {\\n\\n  <span class=\\\"hljs-keyword\\\">get</span> counter(): <span class=\\\"hljs-built_in\\\">number</span> {\\n    <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">this</span>._counter;\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">set</span> counter(value: <span class=\\\"hljs-built_in\\\">number</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>._counter = value;\\n    <span class=\\\"hljs-keyword\\\">this</span>.onChangeCallback &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.onChangeCallback(value);\\n  }\\n\\n  <span class=\\\"hljs-meta\\\">@Input</span>()\\n  message = <span class=\\\"hljs-string\\\">&apos;&apos;</span>;\\n\\n  disabled = <span class=\\\"hljs-literal\\\">false</span>;\\n\\n  <span class=\\\"hljs-keyword\\\">private</span> _counter = <span class=\\\"hljs-number\\\">0</span>;\\n\\n  <span class=\\\"hljs-comment\\\">/**\\n   * things needed for ControlValueAccessor-Interface\\n   */</span>\\n  <span class=\\\"hljs-keyword\\\">private</span> onTouchedCallback: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">_: <span class=\\\"hljs-built_in\\\">any</span></span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">void</span>;\\n  <span class=\\\"hljs-keyword\\\">private</span> onChangeCallback: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">_: <span class=\\\"hljs-built_in\\\">number</span> | <span class=\\\"hljs-literal\\\">undefined</span></span>) =&gt;</span> <span class=\\\"hljs-built_in\\\">void</span>;\\n\\n  increment() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.counter++;\\n  }\\n\\n  decrement() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.counter--;\\n  }\\n\\n  writeValue(value: <span class=\\\"hljs-built_in\\\">number</span>): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>._counter = value;\\n  }\\n\\n  registerOnChange(fn: <span class=\\\"hljs-built_in\\\">any</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.onChangeCallback = fn;\\n  }\\n\\n  registerOnTouched(fn: <span class=\\\"hljs-built_in\\\">any</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.onTouchedCallback = fn;\\n  }\\n\\n  setDisabledState(isDisabled: <span class=\\\"hljs-built_in\\\">boolean</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.disabled = isDisabled;\\n  }\\n\\n}</pre>\\n\""],"sourceRoot":""}