{"version":3,"sources":["webpack:///./demo/app/demos/jss-form/demo.component.html","webpack:///./demo/app/demos/jss-form/demo.component.ts","webpack:///./demo/app/demos/jss-form/demo.module.ts","webpack:///./demo/app/demos/jss-form/hero.ts","webpack:///./demo/app/demos/jss-form/jss-form-extended.ts","webpack:///./demo/app/demos/jss-form/demo.component.html?e9b3","webpack:///./demo/app/demos/jss-form/demo.component.ts?7df9","webpack:///./demo/app/demos/jss-form/hero.ts?fac1","webpack:///./demo/app/demos/jss-form/jss-form-extended.ts?e371","webpack:///./lib/ng-vcl/src/jss-form/README.md"],"names":[],"mappings":"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","file":"demos-jss-form-demo-module.js","sourcesContent":["module.exports = \"<h2>Create a hero</h2>\\n<vcl-jss-form \\n  #heroForm=\\\"vclJssForm\\\"\\n  [schema]=\\\"heroSchema\\\" \\n  (formSubmit)=\\\"onSubmit($event)\\\" \\n  (formAction)=\\\"onAction($event)\\\">\\n</vcl-jss-form>\\n\\n<div class=\\\"value\\\" *ngIf=\\\"state$ | async as formState\\\">\\n  <h4>Form</h4>\\n  <pre>{{formState | json}}</pre>\\n</div>\\n\"","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { JssFormComponent, NotifierService } from '@ng-vcl/ng-vcl';\nimport { merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HERO_SCHEMA } from './hero';\n\n\n@Component({\n  templateUrl: 'demo.component.html'\n})\nexport class JssFormDemoComponent implements AfterViewInit {\n\n  constructor(private notifier: NotifierService) { }\n\n  @ViewChild('heroForm')\n  heroForm: JssFormComponent;\n\n  heroSchema = HERO_SCHEMA;\n\n  state$: Observable<any>;\n\n  onSubmit() {\n    if (this.heroForm.ngForm.valid) {\n      this.notifier.success('Hero created');\n    } else {\n     this.notifier.error('Hero invalid');\n    }\n  }\n\n  onAction(action: string) {\n    if (action === 'reset' && this.heroForm.ngForm) {\n      this.heroForm.ngForm.resetForm(this.heroForm.field.defaultValue);\n      this.notifier.info('Hero reset');\n    }\n  }\n\n  ngAfterViewInit() {\n    this.state$ = merge(this.heroForm.ngForm.statusChanges, this.heroForm.ngForm.valueChanges, this.heroForm.ngForm.ngSubmit).pipe(\n      map(() => {\n        return {\n          status: this.heroForm.ngForm.status,\n          valid: this.heroForm.ngForm.valid,\n          dirty: this.heroForm.ngForm.dirty,\n          submitted: this.heroForm.ngForm.submitted,\n          touched: this.heroForm.ngForm.touched,\n          pristine: this.heroForm.ngForm.pristine,\n          errors: this.heroForm.ngForm.errors,\n          value: this.heroForm.ngForm.value,\n        };\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { VCLJssFormModule, VCLNotifierModule, VCLButtonModule, VCLIcogramModule } from '@ng-vcl/ng-vcl';\nimport { DemoModule, DemoComponent } from './../../modules/demo/demo.module';\nimport { JssFormDemoComponent } from './demo.component';\nimport { FormFieldCounterComponent } from './jss-form-extended';\nimport { VCLCounterModule } from '../form-control-group/counter.component';\n\nexport function demo() {\n  return {\n    label: 'JSS-Form',\n    tabs: {\n      Demo: JssFormDemoComponent,\n      'README.md': {\n        type: 'md',\n        content: require('raw-loader!highlight-loader?!markdown-loader?breaks=true!../../../../lib/ng-vcl/src/jss-form/README.md')\n      },\n      'demo.component.html': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=html!./demo.component.html')\n      },\n      'demo.component.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./demo.component.ts')\n      },\n      'jss-form-extended.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./jss-form-extended.ts')\n      },\n      'hero.ts': {\n        type: 'pre',\n        content: require('!highlight-loader?raw=true&lang=ts!./hero.ts')\n      }\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DemoModule,\n    VCLCounterModule,\n    VCLIcogramModule,\n    VCLButtonModule,\n    VCLJssFormModule,\n    VCLNotifierModule,\n    RouterModule.forChild([{\n      path: '',\n      component: DemoComponent,\n      data: {demo}\n    }]),\n  ],\n  entryComponents: [ JssFormDemoComponent, FormFieldCounterComponent ],\n  declarations: [ JssFormDemoComponent, FormFieldCounterComponent ]\n})\nexport class VCLJssFormDemoModule { }\n","import { Validators, AbstractControl } from '@angular/forms';\nimport { conditional } from '@ng-vcl/ng-vcl';\nimport { ExtendedFormFieldSchemaRoot } from './jss-form-extended';\n\nexport const HERO_SCHEMA: ExtendedFormFieldSchemaRoot = {\n  type: 'form',\n  fields: [\n    {\n      name: 'name',\n      type: 'input',\n      label: 'Name',\n      params: {\n        placeholder: 'The hero\\'s name',\n        inputType: 'password'\n      },\n      validators: [\n        Validators.required, Validators.minLength(2)\n      ],\n      required: true,\n      hints: [\n        {\n          type: 'error',\n          error: 'required',\n          message: 'Name is required'\n        },\n        {\n          type: 'error',\n          error: 'minlength',\n          message: 'Name must have a length of at least 2 characters'\n        }\n      ]\n    },\n    {\n      type: 'textarea',\n      name: 'description',\n      label: 'Description',\n      params: {\n        placeholder: 'The hero\\'s Description',\n      }\n    },\n    {\n      type: 'counter',\n      name: 'level',\n      label: 'Level',\n      defaultValue: 1,\n      params: {\n        min: 1,\n        max: 10\n      }\n    },\n    {\n      type: 'switch',\n      name: 'leader',\n      label: 'Leader',\n      defaultValue: false,\n      visible: conditional(['level'], (level: AbstractControl) => level.value >= 5),\n      validators: [(control: AbstractControl) => {\n        if (!control.value) {\n          return {\n            leader: true,\n          };\n        }\n        return null;\n      }],\n      params: {\n        offLabel: 'No',\n        onLabel: 'Yes',\n      }\n    },\n    {\n      type: 'file-input',\n      name: 'picture',\n      label: 'Picture',\n      params: {\n        multiple: false,\n        placeholder: 'Picture of the hero'\n      }\n    },\n    {\n      type: 'input',\n      name: 'email',\n      label: 'Email',\n      validators: [Validators.required, Validators.email],\n      required: true,\n      hints: [\n        {\n          type: 'error',\n          error: 'required',\n          message: 'Email is required'\n        },\n        {\n          type: 'error',\n          error: 'email',\n          message: 'Invalid Email address'\n        }\n      ]\n    },\n    {\n      type: 'radio-group',\n      name: 'gender',\n      label: 'Gender',\n      defaultValue: 'm',\n      params: {\n        options: [{\n          label: 'Male',\n          value: 'm'\n        }, {\n          label: 'Female',\n          value: 'f'\n        }, {\n          label: 'Genderless',\n          value: 'g'\n        }],\n      }\n    },\n    {\n      type: 'button-group',\n      name: 'alignment',\n      label: 'Alignment',\n      params: {\n        options: [{\n          label: 'Good',\n          value: 1\n        }, {\n          label: 'Neutral',\n          value: 0\n        }, {\n          label: 'Evil',\n          value: -1\n        }]\n      }\n    },\n    {\n      type: 'hidden',\n      name: 'language',\n      defaultValue: navigator.language\n    },\n    {\n      type: 'select-list',\n      name: 'class',\n      label: 'Class',\n      defaultValue: null,\n      params: {\n        options: [{\n          label: 'Warrior',\n          value: 'warrior'\n        }, {\n          label: 'Mage',\n          value: 'mage'\n        }, {\n          label: 'Rogue',\n          value: 'rogue'\n        }]\n      }\n    },\n    {\n      type: 'slider',\n      name: 'hitpoints',\n      label: 'Hit Points',\n      defaultValue: 15,\n      disabled: conditional(['class'], (c) => !c.value),\n      params: conditional(['class'], (control) => {\n        if (control.value === 'rogue') {\n          return {\n            min: 8,\n            max: 18,\n            scale: 11,\n            lock: true,\n          };\n        }  else if (control.value === 'mage') {\n          return {\n            min: 5,\n            max: 15,\n            scale: 11,\n            lock: true,\n          };\n        } else {\n          return {\n            min: 10,\n            max: 20,\n            scale: 11,\n            lock: true,\n          };\n        }\n      }),\n    },\n    {\n      type: 'object',\n      name: 'skills',\n      layout: 'fieldset',\n      label: 'Skills',\n      fields: [\n        {\n          type: 'rating',\n          name: 'strength',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Strength (${label})`,\n          },\n        },\n        {\n          type: 'rating',\n          name: 'agility',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Agility (${label})`,\n          },\n        },\n        {\n          type: 'rating',\n          name: 'intelligence',\n          defaultValue: 3,\n          params: {\n            items: ['1', '2', '3', '4', '5'],\n            valueLabel: (label) => `Intelligence (${label})`,\n          },\n        },\n      ],\n      validators: [(control: AbstractControl) => {\n        const s = control.get('strength');\n        const a = control.get('agility');\n        const i = control.get('intelligence');\n        const skillPoints = (s && a && i) ? (s.value + a.value + i.value) : 0;\n        return skillPoints > 10 ? { skills: true } : null;\n      }],\n      hints: [\n        conditional(['skills', 'skills.strength', 'skills.agility', 'skills.intelligence'], (control, s, a, i) => {\n          const skillPoints = (s && a && i) ? (s.value + a.value + i.value) : 0;\n          const message = `${skillPoints} of 10 skill points used`;\n          if (control.hasError('skills')) {\n            return {\n              type: 'error',\n              message\n            };\n          } else {\n            const skillPointsAvailable = 10 - skillPoints;\n            if (skillPointsAvailable > 0) {\n              return {\n                type: 'warning',\n                message\n              };\n            }\n            return {\n              type: 'default',\n              message\n            };\n          }\n        })\n      ]\n    },\n    {\n      type: 'token',\n      name: 'attributes',\n      label: 'Attributes',\n      hints: [\n        {\n          type: 'default',\n          message: 'Attributes'\n        },\n        {\n          type: 'error',\n          error: 'minLength',\n          message: 'Minimum length is 2'\n        },\n      ],\n      validators: [(control: AbstractControl) => {\n        return Array.isArray(control.value) && control.value.length > 1 ? null : { minLength: true };\n      }],\n    },\n    {\n      type: 'select',\n      name: 'perks',\n      label: 'Perks',\n      params: {\n        placeholder: 'Select perks',\n        selectionMode: 'multiple',\n        options: [{\n          label: 'Snake Eater',\n          sublabel: 'It gives you a 25% increase to your poison resistance.',\n          value: 'snakeeater'\n        },\n        {\n          label: 'Swift Learner',\n          sublabel: 'Swift Learner\tWhenever you gain experience, you\\'ll receive 5% more experience per level of the perk.',\n          value: 'swiftlearner',\n        },\n        {\n          label: 'Toughness',\n          sublabel: 'It adds 10% to your general damage resistance per level.',\n          value: 'toughness'\n        },\n        {\n          label: 'Explorer',\n          sublabel: 'You\\'ll get more random encounters with this perk.',\n          value: 'explorer'\n        }],\n      },\n      validators: [\n        (ctrl: AbstractControl) => {\n          if (ctrl.value && Array.isArray(ctrl.value) && ctrl.value.length === 2) {\n            return null;\n          }\n          return {\n            perks: true\n          };\n        }\n      ],\n      hints: [{\n        type: 'error',\n        error: 'perks',\n        message: 'You must select two perks'\n      }],\n    },\n    {\n      type: 'array',\n      name: 'items',\n      label: 'Items',\n      initialFields: 0,\n      fieldLabel: (index) => 'Item ' + (index + 1),\n      noFieldsLabel: 'No items',\n      field: {\n        type: 'object',\n        name: 'item_object',\n        fields: [\n          {\n            type: 'input',\n            name: 'item_name',\n            label: 'Name',\n            validators: [ Validators.required],\n            required: true,\n            hints: [\n              {\n                type: 'error',\n                error: 'required',\n                message: 'Item name is required'\n              },\n            ]\n          },\n          {\n            type: 'input',\n            name: 'item_quantity',\n            label: 'Quantity',\n            params: {\n              inputType: 'number'\n            },\n            validators: [ Validators.required, Validators.min(1), Validators.max(10)],\n            required: true,\n            hints: [\n              {\n                type: 'error',\n                error: 'required',\n                message: 'Item quantity is required'\n              },\n              {\n                type: 'error',\n                error: 'min',\n                message: 'Minimum is 1'\n              },\n              {\n                type: 'error',\n                error: 'max',\n                message: 'Maximum is 10'\n              },\n            ]\n          }\n        ]\n      }\n    },\n    {\n      type: 'checkbox',\n      name: 'terms',\n      label: 'Agree to our terms',\n      validators: [(control: AbstractControl) => {\n        if (!control.value) {\n          return {\n            termsDisagree: true,\n          };\n        }\n        return null;\n      }],\n      hints: [\n        {\n          type: 'default',\n          message: 'Read the terms to learn how we collect, use and share your data'\n        },\n        {\n          type: 'error',\n          error: 'termsDisagree',\n          message: 'You must agree to our Terms'\n        }\n      ],\n      errorStateAgent: (host, input) => input.ngControl.invalid && host.submitted\n    },\n    {\n      type: 'buttons',\n      buttons: [\n        {\n          type: 'submit',\n          label: 'Submit',\n          class: 'vclEmphasized'\n        },\n        {\n          type: 'button',\n          label: 'Reset',\n          action: 'reset'\n        }\n      ]\n    }\n  ]\n};\n","import { Component } from '@angular/core';\nimport { VCLFormFieldSchemaRoot, FormFieldControl, VCLFormFieldControlSchema, Conditional } from '@ng-vcl/ng-vcl';\n\n@Component({\n  template: `\n    <span *ngIf=\"field.label\">{{ field.label }}</span><br>\n    <demo-counter [formControl]=\"field.control\" [min]=\"field.params.min\" [max]=\"field.params.max\"></demo-counter>\n    `,\n    styles: [\n      `:host {\n        display: block;\n        padding-top: 1em;\n        padding-bottom: 1em;\n      }`\n    ]\n})\nexport class FormFieldCounterComponent {\n  constructor(public field: FormFieldControl) { }\n}\n\n// Register counter component as field\nFormFieldControl.register('counter', FormFieldCounterComponent);\n\nexport interface CounterSchemaParams {\n  min?: number;\n  max?: number;\n}\n\nexport interface CounterSchema extends VCLFormFieldControlSchema {\n  type: 'counter';\n  params?: CounterSchemaParams | Conditional<CounterSchemaParams>;\n}\n\n// Add counter to schema\nexport type ExtendedFormFieldSchemaRoot = VCLFormFieldSchemaRoot<CounterSchema>;\n","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h2</span>&gt;</span>Create a hero<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h2</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">vcl-jss-form</span> \\n  #<span class=\\\"hljs-attr\\\">heroForm</span>=<span class=\\\"hljs-string\\\">\\\"vclJssForm\\\"</span>\\n  [<span class=\\\"hljs-attr\\\">schema</span>]=<span class=\\\"hljs-string\\\">\\\"heroSchema\\\"</span> \\n  (<span class=\\\"hljs-attr\\\">formSubmit</span>)=<span class=\\\"hljs-string\\\">\\\"onSubmit($event)\\\"</span> \\n  (<span class=\\\"hljs-attr\\\">formAction</span>)=<span class=\\\"hljs-string\\\">\\\"onAction($event)\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">vcl-jss-form</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"value\\\"</span> *<span class=\\\"hljs-attr\\\">ngIf</span>=<span class=\\\"hljs-string\\\">\\\"state$ | async as formState\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h4</span>&gt;</span>Form<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h4</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">pre</span>&gt;</span>{{formState | json}}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">pre</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, ViewChild, AfterViewInit } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { JssFormComponent, NotifierService } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { merge, Observable } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'rxjs'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { map } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'rxjs/operators'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { HERO_SCHEMA } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./hero'</span>;\\n\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  templateUrl: <span class=\\\"hljs-string\\\">'demo.component.html'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> JssFormDemoComponent <span class=\\\"hljs-keyword\\\">implements</span> AfterViewInit {\\n\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">private</span> notifier: NotifierService</span>) { }\\n\\n  <span class=\\\"hljs-meta\\\">@ViewChild</span>(<span class=\\\"hljs-string\\\">'heroForm'</span>)\\n  heroForm: JssFormComponent;\\n\\n  heroSchema = HERO_SCHEMA;\\n\\n  state$: Observable&lt;<span class=\\\"hljs-built_in\\\">any</span>&gt;;\\n\\n  onSubmit() {\\n    <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valid) {\\n      <span class=\\\"hljs-keyword\\\">this</span>.notifier.success(<span class=\\\"hljs-string\\\">'Hero created'</span>);\\n    } <span class=\\\"hljs-keyword\\\">else</span> {\\n     <span class=\\\"hljs-keyword\\\">this</span>.notifier.error(<span class=\\\"hljs-string\\\">'Hero invalid'</span>);\\n    }\\n  }\\n\\n  onAction(action: <span class=\\\"hljs-built_in\\\">string</span>) {\\n    <span class=\\\"hljs-keyword\\\">if</span> (action === <span class=\\\"hljs-string\\\">'reset'</span> &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm) {\\n      <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.resetForm(<span class=\\\"hljs-keyword\\\">this</span>.heroForm.field.defaultValue);\\n      <span class=\\\"hljs-keyword\\\">this</span>.notifier.info(<span class=\\\"hljs-string\\\">'Hero reset'</span>);\\n    }\\n  }\\n\\n  ngAfterViewInit() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.state$ = merge(<span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.statusChanges, <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valueChanges, <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.ngSubmit).pipe(\\n      map(<span class=\\\"hljs-function\\\"><span class=\\\"hljs-params\\\">()</span> =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">return</span> {\\n          status: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.status,\\n          valid: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.valid,\\n          dirty: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.dirty,\\n          submitted: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.submitted,\\n          touched: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.touched,\\n          pristine: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.pristine,\\n          errors: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.errors,\\n          value: <span class=\\\"hljs-keyword\\\">this</span>.heroForm.ngForm.value,\\n        };\\n      })\\n    );\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Validators, AbstractControl } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/forms'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { conditional } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { ExtendedFormFieldSchemaRoot } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'./jss-form-extended'</span>;\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">const</span> HERO_SCHEMA: ExtendedFormFieldSchemaRoot = {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'form'</span>,\\n  fields: [\\n    {\\n      name: <span class=\\\"hljs-string\\\">'name'</span>,\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Name'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'The hero\\\\'s name'</span>,\\n        inputType: <span class=\\\"hljs-string\\\">'password'</span>\\n      },\\n      validators: [\\n        Validators.required, Validators.minLength(<span class=\\\"hljs-number\\\">2</span>)\\n      ],\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'required'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Name is required'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'minlength'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Name must have a length of at least 2 characters'</span>\\n        }\\n      ]\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'textarea'</span>,\\n      name: <span class=\\\"hljs-string\\\">'description'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Description'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'The hero\\\\'s Description'</span>,\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'counter'</span>,\\n      name: <span class=\\\"hljs-string\\\">'level'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Level'</span>,\\n      defaultValue: <span class=\\\"hljs-number\\\">1</span>,\\n      params: {\\n        min: <span class=\\\"hljs-number\\\">1</span>,\\n        max: <span class=\\\"hljs-number\\\">10</span>\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'switch'</span>,\\n      name: <span class=\\\"hljs-string\\\">'leader'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Leader'</span>,\\n      defaultValue: <span class=\\\"hljs-literal\\\">false</span>,\\n      visible: conditional([<span class=\\\"hljs-string\\\">'level'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">level: AbstractControl</span>) =&gt;</span> level.value &gt;= <span class=\\\"hljs-number\\\">5</span>),\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (!control.value) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            leader: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      params: {\\n        offLabel: <span class=\\\"hljs-string\\\">'No'</span>,\\n        onLabel: <span class=\\\"hljs-string\\\">'Yes'</span>,\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'file-input'</span>,\\n      name: <span class=\\\"hljs-string\\\">'picture'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Picture'</span>,\\n      params: {\\n        multiple: <span class=\\\"hljs-literal\\\">false</span>,\\n        placeholder: <span class=\\\"hljs-string\\\">'Picture of the hero'</span>\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n      name: <span class=\\\"hljs-string\\\">'email'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Email'</span>,\\n      validators: [Validators.required, Validators.email],\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'required'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Email is required'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'email'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Invalid Email address'</span>\\n        }\\n      ]\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'radio-group'</span>,\\n      name: <span class=\\\"hljs-string\\\">'gender'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Gender'</span>,\\n      defaultValue: <span class=\\\"hljs-string\\\">'m'</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Male'</span>,\\n          value: <span class=\\\"hljs-string\\\">'m'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Female'</span>,\\n          value: <span class=\\\"hljs-string\\\">'f'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Genderless'</span>,\\n          value: <span class=\\\"hljs-string\\\">'g'</span>\\n        }],\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'button-group'</span>,\\n      name: <span class=\\\"hljs-string\\\">'alignment'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Alignment'</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Good'</span>,\\n          value: <span class=\\\"hljs-number\\\">1</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Neutral'</span>,\\n          value: <span class=\\\"hljs-number\\\">0</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Evil'</span>,\\n          value: <span class=\\\"hljs-number\\\">-1</span>\\n        }]\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'hidden'</span>,\\n      name: <span class=\\\"hljs-string\\\">'language'</span>,\\n      defaultValue: navigator.language\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'select-list'</span>,\\n      name: <span class=\\\"hljs-string\\\">'class'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Class'</span>,\\n      defaultValue: <span class=\\\"hljs-literal\\\">null</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Warrior'</span>,\\n          value: <span class=\\\"hljs-string\\\">'warrior'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Mage'</span>,\\n          value: <span class=\\\"hljs-string\\\">'mage'</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">'Rogue'</span>,\\n          value: <span class=\\\"hljs-string\\\">'rogue'</span>\\n        }]\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'slider'</span>,\\n      name: <span class=\\\"hljs-string\\\">'hitpoints'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Hit Points'</span>,\\n      defaultValue: <span class=\\\"hljs-number\\\">15</span>,\\n      disabled: conditional([<span class=\\\"hljs-string\\\">'class'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">c</span>) =&gt;</span> !c.value),\\n      params: conditional([<span class=\\\"hljs-string\\\">'class'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (control.value === <span class=\\\"hljs-string\\\">'rogue'</span>) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">8</span>,\\n            max: <span class=\\\"hljs-number\\\">18</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }  <span class=\\\"hljs-keyword\\\">else</span> <span class=\\\"hljs-keyword\\\">if</span> (control.value === <span class=\\\"hljs-string\\\">'mage'</span>) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">5</span>,\\n            max: <span class=\\\"hljs-number\\\">15</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        } <span class=\\\"hljs-keyword\\\">else</span> {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            min: <span class=\\\"hljs-number\\\">10</span>,\\n            max: <span class=\\\"hljs-number\\\">20</span>,\\n            scale: <span class=\\\"hljs-number\\\">11</span>,\\n            lock: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n      }),\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'object'</span>,\\n      name: <span class=\\\"hljs-string\\\">'skills'</span>,\\n      layout: <span class=\\\"hljs-string\\\">'fieldset'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Skills'</span>,\\n      fields: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          name: <span class=\\\"hljs-string\\\">'strength'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Strength (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          name: <span class=\\\"hljs-string\\\">'agility'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Agility (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'rating'</span>,\\n          name: <span class=\\\"hljs-string\\\">'intelligence'</span>,\\n          defaultValue: <span class=\\\"hljs-number\\\">3</span>,\\n          params: {\\n            items: [<span class=\\\"hljs-string\\\">'1'</span>, <span class=\\\"hljs-string\\\">'2'</span>, <span class=\\\"hljs-string\\\">'3'</span>, <span class=\\\"hljs-string\\\">'4'</span>, <span class=\\\"hljs-string\\\">'5'</span>],\\n            valueLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">label</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`Intelligence (<span class=\\\"hljs-subst\\\">${label}</span>)`</span>,\\n          },\\n        },\\n      ],\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">const</span> s = control.get(<span class=\\\"hljs-string\\\">'strength'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> a = control.get(<span class=\\\"hljs-string\\\">'agility'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> i = control.get(<span class=\\\"hljs-string\\\">'intelligence'</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> skillPoints = (s &amp;&amp; a &amp;&amp; i) ? (s.value + a.value + i.value) : <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">return</span> skillPoints &gt; <span class=\\\"hljs-number\\\">10</span> ? { skills: <span class=\\\"hljs-literal\\\">true</span> } : <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      hints: [\\n        conditional([<span class=\\\"hljs-string\\\">'skills'</span>, <span class=\\\"hljs-string\\\">'skills.strength'</span>, <span class=\\\"hljs-string\\\">'skills.agility'</span>, <span class=\\\"hljs-string\\\">'skills.intelligence'</span>], <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control, s, a, i</span>) =&gt;</span> {\\n          <span class=\\\"hljs-keyword\\\">const</span> skillPoints = (s &amp;&amp; a &amp;&amp; i) ? (s.value + a.value + i.value) : <span class=\\\"hljs-number\\\">0</span>;\\n          <span class=\\\"hljs-keyword\\\">const</span> message = <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${skillPoints}</span> of 10 skill points used`</span>;\\n          <span class=\\\"hljs-keyword\\\">if</span> (control.hasError(<span class=\\\"hljs-string\\\">'skills'</span>)) {\\n            <span class=\\\"hljs-keyword\\\">return</span> {\\n              <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n              message\\n            };\\n          } <span class=\\\"hljs-keyword\\\">else</span> {\\n            <span class=\\\"hljs-keyword\\\">const</span> skillPointsAvailable = <span class=\\\"hljs-number\\\">10</span> - skillPoints;\\n            <span class=\\\"hljs-keyword\\\">if</span> (skillPointsAvailable &gt; <span class=\\\"hljs-number\\\">0</span>) {\\n              <span class=\\\"hljs-keyword\\\">return</span> {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'warning'</span>,\\n                message\\n              };\\n            }\\n            <span class=\\\"hljs-keyword\\\">return</span> {\\n              <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n              message\\n            };\\n          }\\n        })\\n      ]\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'token'</span>,\\n      name: <span class=\\\"hljs-string\\\">'attributes'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Attributes'</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Attributes'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'minLength'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Minimum length is 2'</span>\\n        },\\n      ],\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-built_in\\\">Array</span>.isArray(control.value) &amp;&amp; control.value.length &gt; <span class=\\\"hljs-number\\\">1</span> ? <span class=\\\"hljs-literal\\\">null</span> : { minLength: <span class=\\\"hljs-literal\\\">true</span> };\\n      }],\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'select'</span>,\\n      name: <span class=\\\"hljs-string\\\">'perks'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Perks'</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">'Select perks'</span>,\\n        selectionMode: <span class=\\\"hljs-string\\\">'multiple'</span>,\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">'Snake Eater'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'It gives you a 25% increase to your poison resistance.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'snakeeater'</span>\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Swift Learner'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'Swift Learner\\tWhenever you gain experience, you\\\\'ll receive 5% more experience per level of the perk.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'swiftlearner'</span>,\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Toughness'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'It adds 10% to your general damage resistance per level.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'toughness'</span>\\n        },\\n        {\\n          label: <span class=\\\"hljs-string\\\">'Explorer'</span>,\\n          sublabel: <span class=\\\"hljs-string\\\">'You\\\\'ll get more random encounters with this perk.'</span>,\\n          value: <span class=\\\"hljs-string\\\">'explorer'</span>\\n        }],\\n      },\\n      validators: [\\n        <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">ctrl: AbstractControl</span>) =&gt;</span> {\\n          <span class=\\\"hljs-keyword\\\">if</span> (ctrl.value &amp;&amp; <span class=\\\"hljs-built_in\\\">Array</span>.isArray(ctrl.value) &amp;&amp; ctrl.value.length === <span class=\\\"hljs-number\\\">2</span>) {\\n            <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n          }\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            perks: <span class=\\\"hljs-literal\\\">true</span>\\n          };\\n        }\\n      ],\\n      hints: [{\\n        <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n        error: <span class=\\\"hljs-string\\\">'perks'</span>,\\n        message: <span class=\\\"hljs-string\\\">'You must select two perks'</span>\\n      }],\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'array'</span>,\\n      name: <span class=\\\"hljs-string\\\">'items'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Items'</span>,\\n      initialFields: <span class=\\\"hljs-number\\\">0</span>,\\n      fieldLabel: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">index</span>) =&gt;</span> <span class=\\\"hljs-string\\\">'Item '</span> + (index + <span class=\\\"hljs-number\\\">1</span>),\\n      noFieldsLabel: <span class=\\\"hljs-string\\\">'No items'</span>,\\n      field: {\\n        <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'object'</span>,\\n        name: <span class=\\\"hljs-string\\\">'item_object'</span>,\\n        fields: [\\n          {\\n            <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n            name: <span class=\\\"hljs-string\\\">'item_name'</span>,\\n            label: <span class=\\\"hljs-string\\\">'Name'</span>,\\n            validators: [ Validators.required],\\n            required: <span class=\\\"hljs-literal\\\">true</span>,\\n            hints: [\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'required'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Item name is required'</span>\\n              },\\n            ]\\n          },\\n          {\\n            <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'input'</span>,\\n            name: <span class=\\\"hljs-string\\\">'item_quantity'</span>,\\n            label: <span class=\\\"hljs-string\\\">'Quantity'</span>,\\n            params: {\\n              inputType: <span class=\\\"hljs-string\\\">'number'</span>\\n            },\\n            validators: [ Validators.required, Validators.min(<span class=\\\"hljs-number\\\">1</span>), Validators.max(<span class=\\\"hljs-number\\\">10</span>)],\\n            required: <span class=\\\"hljs-literal\\\">true</span>,\\n            hints: [\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'required'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Item quantity is required'</span>\\n              },\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'min'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Minimum is 1'</span>\\n              },\\n              {\\n                <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n                error: <span class=\\\"hljs-string\\\">'max'</span>,\\n                message: <span class=\\\"hljs-string\\\">'Maximum is 10'</span>\\n              },\\n            ]\\n          }\\n        ]\\n      }\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'checkbox'</span>,\\n      name: <span class=\\\"hljs-string\\\">'terms'</span>,\\n      label: <span class=\\\"hljs-string\\\">'Agree to our terms'</span>,\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (!control.value) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            termsDisagree: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'default'</span>,\\n          message: <span class=\\\"hljs-string\\\">'Read the terms to learn how we collect, use and share your data'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'error'</span>,\\n          error: <span class=\\\"hljs-string\\\">'termsDisagree'</span>,\\n          message: <span class=\\\"hljs-string\\\">'You must agree to our Terms'</span>\\n        }\\n      ],\\n      errorStateAgent: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">host, input</span>) =&gt;</span> input.ngControl.invalid &amp;&amp; host.submitted\\n    },\\n    {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'buttons'</span>,\\n      buttons: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'submit'</span>,\\n          label: <span class=\\\"hljs-string\\\">'Submit'</span>,\\n          <span class=\\\"hljs-keyword\\\">class</span>: <span class=\\\"hljs-string\\\">'vclEmphasized'</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'button'</span>,\\n          label: <span class=\\\"hljs-string\\\">'Reset'</span>,\\n          action: <span class=\\\"hljs-string\\\">'reset'</span>\\n        }\\n      ]\\n    }\\n  ]\\n};\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { VCLFormFieldSchemaRoot, FormFieldControl, VCLFormFieldControlSchema, Conditional } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'@ng-vcl/ng-vcl'</span>;\\n\\n<span class=\\\"hljs-meta\\\">@Component</span>({\\n  template: <span class=\\\"hljs-string\\\">`\\n    &lt;span *ngIf=\\\"field.label\\\"&gt;{{ field.label }}&lt;/span&gt;&lt;br&gt;\\n    &lt;demo-counter [formControl]=\\\"field.control\\\" [min]=\\\"field.params.min\\\" [max]=\\\"field.params.max\\\"&gt;&lt;/demo-counter&gt;\\n    `</span>,\\n    styles: [\\n      <span class=\\\"hljs-string\\\">`:host {\\n        display: block;\\n        padding-top: 1em;\\n        padding-bottom: 1em;\\n      }`</span>\\n    ]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> FormFieldCounterComponent {\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">public</span> field: FormFieldControl</span>) { }\\n}\\n\\n<span class=\\\"hljs-comment\\\">// Register counter component as field</span>\\nFormFieldControl.register(<span class=\\\"hljs-string\\\">'counter'</span>, FormFieldCounterComponent);\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> CounterSchemaParams {\\n  min?: <span class=\\\"hljs-built_in\\\">number</span>;\\n  max?: <span class=\\\"hljs-built_in\\\">number</span>;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">interface</span> CounterSchema <span class=\\\"hljs-keyword\\\">extends</span> VCLFormFieldControlSchema {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">'counter'</span>;\\n  params?: CounterSchemaParams | Conditional&lt;CounterSchemaParams&gt;;\\n}\\n\\n<span class=\\\"hljs-comment\\\">// Add counter to schema</span>\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">type</span> ExtendedFormFieldSchemaRoot = VCLFormFieldSchemaRoot&lt;CounterSchema&gt;;\\n\"","module.exports = \"<h1 id=\\\"vcl-jss-form\\\">vcl-jss-form</h1>\\n<p>Creates a html-form from a provided schema.</p>\\n<h2 id=\\\"usage\\\">Usage</h2>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { VCLJssFormModule } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-meta\\\">@NgModule</span>({\\n  imports: [ VCLJssFormModule ],\\n  ...\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> AppComponent {}</pre>\\n<pre class=\\\"hljs\\\"><code>&lt;vcl-jss-form [schema]=&quot;mySchema&quot; (formSubmit)=&quot;onSubmit($event)&quot; (formAction)=&quot;onAction($event)&quot; &gt;&lt;/vcl-jss-form&gt;</code></pre>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { Validators } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@angular/forms&apos;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { VCLFormFieldSchemaRoot } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">const</span> SCHEMA: VCLFormFieldSchemaRoot = {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;form&apos;</span>,\\n  fields: {\\n    name: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;input&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;Name&apos;</span>,\\n      params: {\\n        placeholder: <span class=\\\"hljs-string\\\">&apos;Your name&apos;</span>,\\n      },\\n      validators: [\\n        Validators.required, Validators.minLength(<span class=\\\"hljs-number\\\">2</span>)\\n      ],\\n      required: <span class=\\\"hljs-literal\\\">true</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;error&apos;</span>,\\n          error: <span class=\\\"hljs-string\\\">&apos;required&apos;</span>,\\n          message: <span class=\\\"hljs-string\\\">&apos;Name is required&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;error&apos;</span>,\\n          error: <span class=\\\"hljs-string\\\">&apos;minlength&apos;</span>,\\n          message: <span class=\\\"hljs-string\\\">&apos;Name must have a length of at least 2 characters&apos;</span>\\n        }\\n      ]\\n    },\\n    email: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;input&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;Email&apos;</span>,\\n      validators: [Validators.email],\\n      required: <span class=\\\"hljs-literal\\\">false</span>,\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;error&apos;</span>,\\n          error: <span class=\\\"hljs-string\\\">&apos;email&apos;</span>,\\n          message: <span class=\\\"hljs-string\\\">&apos;Invalid Email address&apos;</span>\\n        }\\n      ]\\n    },\\n    gender: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;radio-group&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;Gender&apos;</span>,\\n      defaultValue: <span class=\\\"hljs-string\\\">&apos;m&apos;</span>,\\n      params: {\\n        options: [{\\n          label: <span class=\\\"hljs-string\\\">&apos;Male&apos;</span>,\\n          value: <span class=\\\"hljs-string\\\">&apos;m&apos;</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">&apos;Female&apos;</span>,\\n          value: <span class=\\\"hljs-string\\\">&apos;f&apos;</span>\\n        }, {\\n          label: <span class=\\\"hljs-string\\\">&apos;Genderless&apos;</span>,\\n          value: <span class=\\\"hljs-string\\\">&apos;g&apos;</span>\\n        }],\\n      }\\n    },\\n    language: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;hidden&apos;</span>,\\n      defaultValue: navigator.language\\n    },\\n    terms: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;checkbox&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;Agree to our terms&apos;</span>,\\n      validators: [<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">control: AbstractControl</span>) =&gt;</span> {\\n        <span class=\\\"hljs-keyword\\\">if</span> (!control.value) {\\n          <span class=\\\"hljs-keyword\\\">return</span> {\\n            termsDisagree: <span class=\\\"hljs-literal\\\">true</span>,\\n          };\\n        }\\n        <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-literal\\\">null</span>;\\n      }],\\n      hints: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;default&apos;</span>,\\n          message: <span class=\\\"hljs-string\\\">&apos;Read the terms to learn how we collect, use and share your data&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;error&apos;</span>,\\n          error: <span class=\\\"hljs-string\\\">&apos;termsDisagree&apos;</span>,\\n          message: <span class=\\\"hljs-string\\\">&apos;You must agree to our Terms&apos;</span>\\n        }\\n      ]\\n    },\\n    submit: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;buttons&apos;</span>,\\n      buttons: [\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;submit&apos;</span>,\\n          label: <span class=\\\"hljs-string\\\">&apos;Submit&apos;</span>,\\n          <span class=\\\"hljs-keyword\\\">class</span>: <span class=\\\"hljs-string\\\">&apos;vclEmphasized&apos;</span>\\n        },\\n        {\\n          <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;button&apos;</span>,\\n          label: <span class=\\\"hljs-string\\\">&apos;Reset&apos;</span>,\\n          action: <span class=\\\"hljs-string\\\">&apos;reset&apos;</span>\\n        }\\n      ]\\n    }\\n  },\\n};</pre>\\n<h4 id=\\\"conditional-properties\\\">Conditional properties</h4>\\n<p>Some properties can be conditional and change when another field value changes.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { VCLFormFieldSchemaRoot, conditional } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">const</span> SCHEMA: VCLFormFieldSchemaRoot = {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;form&apos;</span>,\\n  fields: {\\n    one: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;checkbox&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;One&apos;</span>\\n    },\\n    two: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;checkbox&apos;</span>,\\n      visible: conditional([<span class=\\\"hljs-string\\\">&apos;one&apos;</span>, <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">one</span>) =&gt;</span> !!one.value])\\n      label: <span class=\\\"hljs-string\\\">&apos;Two&apos;</span>,\\n    }\\n  }\\n}</pre>\\n<h4 id=\\\"custom-fields\\\">Custom fields</h4>\\n<p>A component used in a custom field must implement the <code>ControlValueAccessor</code> interface to support the <code>formControl</code> directive.</p>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-meta\\\">@Component</span>({\\n  template: <span class=\\\"hljs-string\\\">`\\n    &lt;span *ngIf=&quot;field.label&quot;&gt;{{ field.label }}&lt;/span&gt;&lt;br&gt;\\n    &lt;my-counter [formControl]=&quot;field.control&quot; [max]=&quot;field.params.max&quot;&gt;&lt;/my-counter&gt;\\n    `</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> CounterFormFieldComponent {\\n  <span class=\\\"hljs-keyword\\\">constructor</span>(<span class=\\\"hljs-params\\\"><span class=\\\"hljs-keyword\\\">public</span> field: FormFieldControl</span>) { }\\n}\\n\\nFormFieldControl.register(<span class=\\\"hljs-string\\\">&apos;counter&apos;</span>, CounterFormFieldComponent);</pre>\\n<pre class=\\\"hljs\\\"><span class=\\\"hljs-keyword\\\">import</span> { VCLFormFieldSchemaRoot, conditional } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&apos;@ng-vcl/ng-vcl&apos;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">const</span> SCHEMA: VCLFormFieldSchemaRoot = {\\n  <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;form&apos;</span>,\\n  fields: {\\n    level: {\\n      <span class=\\\"hljs-keyword\\\">type</span>: <span class=\\\"hljs-string\\\">&apos;counter&apos;</span>,\\n      label: <span class=\\\"hljs-string\\\">&apos;Counter&apos;</span>,\\n      params: {\\n        max: <span class=\\\"hljs-number\\\">10</span>\\n      }\\n    }\\n  }\\n}</pre>\\n\""],"sourceRoot":""}