(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{GAjj:function(s,n,a){"use strict";a.r(n),a.d(n,"demo",(function(){return u})),a.d(n,"NotifierDemoModule",(function(){return b}));var t=a("ofXK"),l=a("tyNb"),p=a("3Pt+"),o=a("19H1"),c=a("2FIb"),i=a("fXoL"),e=a("ErXM"),r=a("6B8K"),h=a("9Rb9");let j=1,g=(()=>{class s{constructor(s){this.notifier=s,this.positions=o.t,this.position=o.t.TopRight}default(){this.notifier.queue({text:"A message "+j++,position:this.position})}info(){this.notifier.info({text:"An info message "+j++,position:this.position})}success(){this.notifier.success({text:"A success message "+j++,position:this.position})}warning(){this.notifier.warning({text:"A warning "+j++,position:this.position})}error(){this.notifier.error({text:"An error message "+j++,position:this.position})}custom(){this.notifier.queue({text:"<b>A <i>custom</i> message</b>",html:!0,position:this.position,showCloseButton:!1,timeout:1e4,class:"demoCustomNotifier"})}}return s.\u0275fac=function(n){return new(n||s)(i.Mb(o.u))},s.\u0275cmp=i.Gb({type:s,selectors:[["ng-component"]],decls:39,vars:7,consts:[["mode","single",3,"value","valueChange"],["vcl-square-button","",3,"value"],["icon","mdi:arrow-top-right"],["icon","mdi:arrow-up"],["icon","mdi:arrow-top-left"],["icon","mdi:arrow-bottom-right"],["icon","mdi:arrow-down"],["icon","mdi:arrow-bottom-left"],["vcl-button","",3,"click"]],template:function(s,n){1&s&&(i.Sb(0,"vcl-button-group",0),i.ac("valueChange",(function(s){return n.position=s})),i.Sb(1,"button",1),i.Nb(2,"vcl-icon",2),i.Rb(),i.Sb(3,"button",1),i.Nb(4,"vcl-icon",3),i.Rb(),i.Sb(5,"button",1),i.Nb(6,"vcl-icon",4),i.Rb(),i.Sb(7,"button",1),i.Nb(8,"vcl-icon",5),i.Rb(),i.Sb(9,"button",1),i.Nb(10,"vcl-icon",6),i.Rb(),i.Sb(11,"button",1),i.Nb(12,"vcl-icon",7),i.Rb(),i.Rb(),i.Nb(13,"br"),i.Nb(14,"br"),i.Sb(15,"button",8),i.ac("click",(function(){return n.default()})),i.yc(16,"An message"),i.Rb(),i.Nb(17,"br"),i.Nb(18,"br"),i.Sb(19,"button",8),i.ac("click",(function(){return n.info()})),i.yc(20,"An info message"),i.Rb(),i.Nb(21,"br"),i.Nb(22,"br"),i.Sb(23,"button",8),i.ac("click",(function(){return n.success()})),i.yc(24,"A success message"),i.Rb(),i.Nb(25,"br"),i.Nb(26,"br"),i.Sb(27,"button",8),i.ac("click",(function(){return n.warning()})),i.yc(28,"A warning"),i.Rb(),i.Nb(29,"br"),i.Nb(30,"br"),i.Sb(31,"button",8),i.ac("click",(function(){return n.error()})),i.yc(32,"An error message"),i.Rb(),i.Nb(33,"br"),i.Nb(34,"br"),i.Sb(35,"button",8),i.ac("click",(function(){return n.custom()})),i.yc(36,"A custom message"),i.Rb(),i.Nb(37,"br"),i.Nb(38,"br")),2&s&&(i.ic("value",n.position),i.Ab(1),i.ic("value",n.positions.TopRight),i.Ab(2),i.ic("value",n.positions.Top),i.Ab(2),i.ic("value",n.positions.TopLeft),i.Ab(2),i.ic("value",n.positions.BottomRight),i.Ab(2),i.ic("value",n.positions.Bottom),i.Ab(2),i.ic("value",n.positions.BottomLeft))},directives:[e.a,r.b,h.a],styles:["\n    .demoCustomNotifier {\n      background-color: black;\n      color: white;\n    }\n  "],encapsulation:2}),s})();function u(){return{label:"Notifiers",tabs:{Demo:g,"README.md":{type:"md",content:'<h1 id="vcl-notifier">vcl-notifier</h1>\n<p>Growl-style notifiers</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLNotifierModule, VCLLayerModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ \n    VCLNotifierModule,\n  ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs">@Component({ ... })\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyComponent</span> </span>{\n\n  <span class="hljs-keyword">constructor</span>(private notifier: NotifierService) {}\n\n  info() {\n    <span class="hljs-keyword">this</span>.notifier.info({\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&apos;An info message&apos;</span>\n    });\n  }\n  success() {\n    <span class="hljs-keyword">this</span>.notifier.success({\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&apos;A success message&apos;</span>,\n      <span class="hljs-attr">position</span>: NotifierPosition.BottomRight\n    });\n  }\n  warning() {\n    <span class="hljs-keyword">this</span>.notifier.warning({\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&apos;A warning&apos;</span>,\n      <span class="hljs-attr">showCloseButton</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">timeout</span>: <span class="hljs-number">10000</span>\n    });\n  }\n  error() {\n    <span class="hljs-keyword">this</span>.notifier.error({\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&apos;An error message&apos;</span>,\n      <span class="hljs-attr">timeout</span>: <span class="hljs-literal">false</span>\n    });\n  }\n  custom() {\n    <span class="hljs-keyword">this</span>.notifier.show({\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&apos;&lt;b&gt;A &lt;i&gt;custom&lt;/i&gt; message&lt;/b&gt;&apos;</span>,\n      <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&apos;black&apos;</span>,\n      <span class="hljs-attr">textColor</span>: <span class="hljs-string">&apos;white&apos;</span>,\n      <span class="hljs-attr">position</span>: NotifierPosition.TopLeft,\n      <span class="hljs-attr">showCloseButton</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">timeout</span>: <span class="hljs-number">10000</span>,\n      <span class="hljs-attr">notifierClass</span>: <span class="hljs-string">&apos;myclass&apos;</span>\n    });\n  }\n}</pre>\n<h3 id="api">API</h3>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">enum</span> NotifierType {\n  None,\n  Info,\n  Success,\n  Warning,\n  <span class="hljs-built_in">Error</span>\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">enum</span> NotifierPosition {\n  TopRight,\n  Top,\n  TopLeft,\n  BottomRight,\n  Bottom,\n  BottomLeft,\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> NotifierOptions {\n  text?: <span class="hljs-built_in">string</span>;\n  html?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-keyword">type</span>?: NotifierType;\n  showCloseButton?: <span class="hljs-built_in">boolean</span>;\n  position?: NotifierPosition;\n  timeout?: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">boolean</span>;\n  backgroundColor?: <span class="hljs-built_in">string</span>;\n  textColor?: <span class="hljs-built_in">string</span>;\n  notifierClass?: <span class="hljs-built_in">string</span>;\n}</pre>\n'},"demo.component.html":{type:"pre",content:a("eqRX")},"demo.component.ts":{type:"pre",content:a("msDu")}}}}let b=(()=>{class s{}return s.\u0275mod=i.Kb({type:s}),s.\u0275inj=i.Jb({factory:function(n){return new(n||s)},imports:[[t.c,p.m,c.b,o.X,o.B,o.C,l.g.forChild([{path:"",component:c.a,data:{demo:u}}])]]}),s})()},eqRX:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">vcl-button-group</span> [(<span class="hljs-attr">value</span>)]=<span class="hljs-string">"position"</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"single"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.TopRight"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-top-right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.Top"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-up"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.TopLeft"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-top-left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.BottomRight"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-bottom-right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.Bottom"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-down"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-square-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"positions.BottomLeft"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"mdi:arrow-bottom-left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-button-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"default()"</span>&gt;</span>An message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"info()"</span>&gt;</span>An info message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"success()"</span>&gt;</span>A success message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"warning()"</span>&gt;</span>A warning<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"error()"</span>&gt;</span>An error message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"custom()"</span>&gt;</span>A custom message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n'},msDu:function(s,n){s.exports='<span class="hljs-keyword">import</span> { NotifierPosition, NotifierService } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@vcl/ng-vcl\'</span>;\n<span class="hljs-keyword">import</span> { Component, Input, ViewEncapsulation } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-keyword">let</span> cnt = <span class="hljs-number">1</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>,\n  encapsulation: ViewEncapsulation.None,\n  styles: [<span class="hljs-string">`\n    .demoCustomNotifier {\n      background-color: black;\n      color: white;\n    }\n  `</span>]\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> NotifierDemoComponent {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> notifier: NotifierService</span>) {}\n\n  positions = NotifierPosition;\n  position: NotifierPosition = NotifierPosition.TopRight;\n\n  <span class="hljs-keyword">default</span>() {\n    <span class="hljs-keyword">this</span>.notifier.queue({\n      text: <span class="hljs-string">\'A message \'</span> + cnt++,\n      position: <span class="hljs-keyword">this</span>.position\n    });\n  }\n  info() {\n    <span class="hljs-keyword">this</span>.notifier.info({\n      text: <span class="hljs-string">\'An info message \'</span> + cnt++,\n      position: <span class="hljs-keyword">this</span>.position\n    });\n  }\n  success() {\n    <span class="hljs-keyword">this</span>.notifier.success({\n      text: <span class="hljs-string">\'A success message \'</span> + cnt++,\n      position: <span class="hljs-keyword">this</span>.position\n    });\n  }\n  warning() {\n    <span class="hljs-keyword">this</span>.notifier.warning({\n      text: <span class="hljs-string">\'A warning \'</span> + cnt++,\n      position: <span class="hljs-keyword">this</span>.position\n    });\n  }\n  error() {\n    <span class="hljs-keyword">this</span>.notifier.error({\n      text: <span class="hljs-string">\'An error message \'</span> + cnt++,\n      position: <span class="hljs-keyword">this</span>.position\n    });\n  }\n  custom() {\n    <span class="hljs-keyword">this</span>.notifier.queue({\n      text: <span class="hljs-string">\'&lt;b&gt;A &lt;i&gt;custom&lt;/i&gt; message&lt;/b&gt;\'</span>,\n      html: <span class="hljs-literal">true</span>,\n      position: <span class="hljs-keyword">this</span>.position,\n      showCloseButton: <span class="hljs-literal">false</span>,\n      timeout: <span class="hljs-number">10000</span>,\n      <span class="hljs-keyword">class</span>: <span class="hljs-string">\'demoCustomNotifier\'</span>\n    });\n  }\n}\n'}}]);