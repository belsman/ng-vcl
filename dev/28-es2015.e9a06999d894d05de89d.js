(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{MElT:function(s,a,n){"use strict";n.r(a),n.d(a,"demo",(function(){return I})),n.d(a,"MaterialDesignInputsDemoModule",(function(){return L}));var l=n("ofXK"),t=n("3Pt+"),p=n("tyNb"),e=n("19H1"),r=n("2FIb"),c=n("fXoL"),o=n("xsjC"),h=n("iSCa"),i=n("7FAN"),j=n("EaCA"),g=n("8Ii/"),m=n("btmi"),u=n("XIT8"),b=n("p31x"),d=n("1/Kn"),v=n("QI9E"),f=n("q1D+"),y=n("jPeI"),w=n("VSXH"),S=n("nj5o"),k=n("9Rb9"),R=n("LpWs"),C=n("5gLr"),N=n("I9Sx"),F=n("zDo1"),q=n("StUX"),M=n("6B8K");const A=["form"];let D=(()=>{class s{constructor(s){this.notifier=s,this.material="float",this.defaultValues={perks:[]},this.formGroup=new t.j({name:new t.g("",[t.F.required,t.F.minLength(2)]),dob:new t.g(null,[t.F.required]),description:new t.g("",[]),password:new t.g("",[t.F.required]),email:new t.g("",[t.F.email]),perks:new t.g(this.defaultValues.perks,[this.validatePerks.bind(this)])},[])}validatePerks(s){return Array.isArray(s.value)&&2===s.value.length?null:{perks:!0}}onSubmit(){this.formGroup.valid?this.notifier.success("Hero created"):this.notifier.error("Hero invalid")}onReset(){this.form.resetForm(this.defaultValues),this.notifier.info("Hero reset")}}return s.\u0275fac=function(a){return new(a||s)(c.Mb(e.u))},s.\u0275cmp=c.Gb({type:s,selectors:[["ng-component"]],viewQuery:function(s,a){var n;1&s&&c.Dc(A,!0),2&s&&c.mc(n=c.bc())&&(a.form=n.first)},decls:103,vars:22,consts:[["vclFormControlLabel",""],[3,"ngModel","ngModelChange"],["vclRadioButtonLabel",""],["value","float"],["value","static"],["value","disabled"],["novalidate","",1,"form",3,"formGroup","vclMaterial","submit"],["form","ngForm"],["vclInput","","formControlName","name","placeholder","Name of the hero"],["error","required"],["error","minlength"],["vclInput","","formControlName","description","placeholder","Description of the hero",3,"autogrow","minRows","maxRows"],["formControlName","dob","placeholder","MM/DD/YYYY"],["vclPrepend","","icon","fas:envelope"],["vclInput","","formControlName","email","placeholder","Email of the hero"],["error","email"],["vclInput","","formControlName","password","placeholder","Enter password"],["placeholder","Select two perks"],["formControlName","perks","selectionMode","multiple"],[3,"value"],["error","perks"],[1,"loose-button-group"],["vcl-button","","type","submit",1,"emphasized"],["vcl-button","","type","button",3,"click"],[1,"value"]],template:function(s,a){if(1&s&&(c.Sb(0,"vcl-form-control-group"),c.Sb(1,"label",0),c.yc(2,"Material input mode"),c.Rb(),c.Sb(3,"vcl-radio-group",1),c.ac("ngModelChange",(function(s){return a.material=s})),c.Sb(4,"label",2),c.Nb(5,"vcl-radio-button",3),c.yc(6," Float "),c.Rb(),c.Sb(7,"label",2),c.Nb(8,"vcl-radio-button",4),c.yc(9," Static "),c.Rb(),c.Sb(10,"label",2),c.Nb(11,"vcl-radio-button",5),c.yc(12," Disabled "),c.Rb(),c.Rb(),c.Rb(),c.Sb(13,"form",6,7),c.ac("submit",(function(){return a.onSubmit()})),c.Sb(15,"h2"),c.yc(16,"Create a hero"),c.Rb(),c.Sb(17,"vcl-form-control-group"),c.Sb(18,"label",0),c.yc(19,"Name"),c.Nb(20,"vcl-required"),c.Rb(),c.Nb(21,"input",8),c.Sb(22,"vcl-hint-error",9),c.yc(23,"Name is required"),c.Rb(),c.Sb(24,"vcl-hint-error",10),c.yc(25,"Name must have a length of at least 2 characters"),c.Rb(),c.Rb(),c.Sb(26,"vcl-form-control-group"),c.Sb(27,"label",0),c.yc(28,"Description"),c.Rb(),c.Nb(29,"textarea",11),c.Rb(),c.Sb(30,"vcl-form-control-group"),c.Sb(31,"label",0),c.yc(32,"Date of Birth"),c.Rb(),c.Sb(33,"vcl-datepicker",12),c.Nb(34,"vcl-calendar"),c.Rb(),c.Rb(),c.Sb(35,"vcl-form-control-group"),c.Sb(36,"label",0),c.yc(37,"Email"),c.Rb(),c.Sb(38,"vcl-embedded-input-group"),c.Nb(39,"vcl-icon",13),c.Nb(40,"input",14),c.Rb(),c.Sb(41,"vcl-hint-error",9),c.yc(42,"Email is required"),c.Rb(),c.Sb(43,"vcl-hint-error",15),c.yc(44,"Invalid Email address"),c.Rb(),c.Rb(),c.Sb(45,"vcl-form-control-group"),c.Sb(46,"label",0),c.yc(47,"Password"),c.Nb(48,"vcl-required"),c.Rb(),c.Sb(49,"vcl-password-input"),c.Nb(50,"input",16),c.Rb(),c.Sb(51,"vcl-hint-error",9),c.yc(52,"Password is required"),c.Rb(),c.Rb(),c.Sb(53,"vcl-form-control-group"),c.Sb(54,"label",0),c.yc(55,"Select perks"),c.Nb(56,"vcl-required"),c.Rb(),c.Sb(57,"vcl-select",17),c.Sb(58,"vcl-select-list",18),c.Sb(59,"vcl-select-list-item",19),c.yc(60," Snake Eater "),c.Sb(61,"vcl-sub-label"),c.yc(62,"It gives you a 25% increase to your poison resistance.\t"),c.Rb(),c.Rb(),c.Sb(63,"vcl-select-list-item",19),c.yc(64," Swift Learner "),c.Sb(65,"vcl-sub-label"),c.yc(66,"Swift Learner\tWhenever you gain experience, you'll receive 5% more experience per level of the perk."),c.Rb(),c.Rb(),c.Sb(67,"vcl-select-list-item",19),c.yc(68," Toughness "),c.Sb(69,"vcl-sub-label"),c.yc(70,"It adds 10% to your general damage resistance per level."),c.Rb(),c.Rb(),c.Sb(71,"vcl-select-list-item",19),c.yc(72," Explorer "),c.Sb(73,"vcl-sub-label"),c.yc(74,"You'll get more random encounters with this perk."),c.Rb(),c.Rb(),c.Rb(),c.Rb(),c.Sb(75,"vcl-hint-error",20),c.yc(76,"You must select two perks"),c.Rb(),c.Rb(),c.Sb(77,"div",21),c.Sb(78,"button",22),c.yc(79,"Submit"),c.Rb(),c.Sb(80,"button",23),c.ac("click",(function(){return a.onReset()})),c.yc(81,"Reset"),c.Rb(),c.Rb(),c.Sb(82,"div",24),c.Sb(83,"h4"),c.yc(84,"Form"),c.Rb(),c.Sb(85,"pre"),c.yc(86),c.Rb(),c.Sb(87,"pre"),c.yc(88),c.Rb(),c.Sb(89,"pre"),c.yc(90),c.Rb(),c.Sb(91,"pre"),c.yc(92),c.Rb(),c.Sb(93,"pre"),c.yc(94),c.Rb(),c.Sb(95,"pre"),c.yc(96),c.Rb(),c.Sb(97,"pre"),c.yc(98),c.ec(99,"json"),c.Rb(),c.Sb(100,"pre"),c.yc(101),c.ec(102,"json"),c.Rb(),c.Rb(),c.Rb()),2&s){const s=c.nc(14);c.Ab(3),c.ic("ngModel",a.material),c.Ab(10),c.ic("formGroup",a.formGroup)("vclMaterial",a.material),c.Ab(16),c.ic("autogrow",!0)("minRows",3)("maxRows",10),c.Ab(30),c.ic("value","snakeeater"),c.Ab(4),c.ic("value","swiftlearner"),c.Ab(4),c.ic("value","toughness"),c.Ab(4),c.ic("value","explorer"),c.Ab(15),c.Ac("status: ",s.status,""),c.Ab(2),c.Ac("valid: ",s.valid,""),c.Ab(2),c.Ac("dirty: ",s.dirty,""),c.Ab(2),c.Ac("submitted: ",s.submitted,""),c.Ab(2),c.Ac("touched: ",s.touched,""),c.Ab(2),c.Ac("pristine: ",s.pristine,""),c.Ab(2),c.Ac("errors: ",c.fc(99,18,s.errors),""),c.Ab(3),c.Ac("value: ",c.fc(102,20,s.value),"")}},directives:[o.a,h.a,i.a,j.a,t.r,t.u,g.a,m.a,t.H,t.s,u.a,t.k,b.a,d.b,t.c,t.i,v.a,f.a,y.a,w.a,S.a,k.a,R.c,C.a,N.a,F.a,q.a,R.d,M.b],pipes:[l.k],encapsulation:2}),s})();function I(){return{label:"Material Design Inputs",tabs:{Demo:D,"README.md":{type:"md",content:'<h1 id="material-design-inputs">Material Design Inputs</h1>\n<p>Material design inputs</p>\n<h2 id="usage">Usage</h2>\n<pre class="hljs"><span class="hljs-keyword">import</span> { VCLMaterialDesignInputsModule } <span class="hljs-keyword">from</span> <span class="hljs-string">&apos;@vcl/ng-vcl&apos;</span>;\n\n@NgModule({\n  <span class="hljs-attr">imports</span>: [ VCLMaterialDesignInputsModule ],\n  ...\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{}</pre>\n<pre class="hljs"><span class="hljs-comment">&lt;!-- Enables material mode for all supported input controls --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">vclForm</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">&quot;formGroup&quot;</span> <span class="hljs-attr">vclMaterial</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Name&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Override material mode for description --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span> <span class="hljs-attr">vclMaterial</span>=<span class="hljs-string">&quot;static&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Description<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Name&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></pre>\n<h4 id="formvclmaterial-attributes">form[vclMaterial] attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>vclMaterial</code></td>\n<td>&apos;float&apos; | &apos;static&apos; | &apos;disabled&apos;</td>\n<td>&apos;float&apos;</td>\n<td>Material mode</td>\n</tr>\n</tbody></table>\n<h4 id="vcl-form-control-groupvclmaterial-attributes">vcl-form-control-group[vclMaterial] attributes</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>vclMaterial</code></td>\n<td>&apos;float&apos; | &apos;static&apos; | &apos;disabled&apos;</td>\n<td>&apos;float&apos;</td>\n<td>Material mode</td>\n</tr>\n</tbody></table>\n'},"demo.component.html":{type:"pre",content:n("uFiD")},"demo.component.ts":{type:"pre",content:n("nv3G")}}}}let L=(()=>{class s{}return s.\u0275mod=c.Kb({type:s}),s.\u0275inj=c.Jb({factory:function(a){return new(a||s)},imports:[[l.c,t.m,t.B,r.b,e.C,e.J,e.B,e.cb,e.R,e.Z,e.Q,e.P,e.eb,e.hb,e.X,e.H,e.N,e.U,p.g.forChild([{path:"",component:r.a,data:{demo:I}}])]]}),s})()},nv3G:function(s,a){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { FormGroup, Validators, AbstractControl, FormControl, ValidationErrors, NgForm } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/forms\'</span>;\n<span class="hljs-keyword">import</span> { NotifierService, FormControlErrorStateAgent, FormControlHost, FormControlInput } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@vcl/ng-vcl\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  templateUrl: <span class="hljs-string">\'demo.component.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> MaterialDesignInputsDemoComponent {\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> notifier: NotifierService</span>) { }\n\n  material = <span class="hljs-string">\'float\'</span>;\n\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">\'form\'</span>)\n  form: NgForm;\n\n  defaultValues = {\n    perks: []\n  };\n\n  formGroup = <span class="hljs-keyword">new</span> FormGroup({\n    name: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required,\n      Validators.minLength(<span class="hljs-number">2</span>),\n    ]),\n    dob: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-literal">null</span>, [\n      Validators.required\n    ]),\n    description: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, []),\n    password: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.required\n    ]),\n    email: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-string">\'\'</span>, [\n      Validators.email,\n    ]),\n    perks: <span class="hljs-keyword">new</span> FormControl(<span class="hljs-keyword">this</span>.defaultValues.perks, [ <span class="hljs-keyword">this</span>.validatePerks.bind(<span class="hljs-keyword">this</span>) ])\n  }, []);\n\n  validatePerks(c: AbstractControl) {\n    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">Array</span>.isArray(c.value) &amp;&amp; c.value.length === <span class="hljs-number">2</span>) ? <span class="hljs-literal">null</span> : { perks: <span class="hljs-literal">true</span> };\n  }\n\n  onSubmit() {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.formGroup.valid) {\n      <span class="hljs-keyword">this</span>.notifier.success(<span class="hljs-string">\'Hero created\'</span>);\n    } <span class="hljs-keyword">else</span> {\n     <span class="hljs-keyword">this</span>.notifier.error(<span class="hljs-string">\'Hero invalid\'</span>);\n    }\n  }\n\n  onReset() {\n    <span class="hljs-keyword">this</span>.form.resetForm(<span class="hljs-keyword">this</span>.defaultValues);\n    <span class="hljs-keyword">this</span>.notifier.info(<span class="hljs-string">\'Hero reset\'</span>);\n  }\n}\n'},uFiD:function(s,a){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Material input mode<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"material"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"float"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      Float\n    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"static"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      Static\n    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclRadioButtonLabel</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"disabled"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-button</span>&gt;</span>\n      Disabled\n    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">novalidate</span> [<span class="hljs-attr">formGroup</span>]=<span class="hljs-string">"formGroup"</span> #<span class="hljs-attr">form</span>=<span class="hljs-string">"ngForm"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form"</span> (<span class="hljs-attr">submit</span>)=<span class="hljs-string">"onSubmit()"</span> [<span class="hljs-attr">vclMaterial</span>]=<span class="hljs-string">"material"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Create a hero<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Name<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"name"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Name of the hero"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Name is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"minlength"</span>&gt;</span>Name must have a length of at least 2 characters<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Description<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Description of the hero"</span> [<span class="hljs-attr">autogrow</span>]=<span class="hljs-string">"true"</span> [<span class="hljs-attr">minRows</span>]=<span class="hljs-string">"3"</span> [<span class="hljs-attr">maxRows</span>]=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Date of Birth<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-datepicker</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"dob"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"MM/DD/YYYY"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-calendar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-calendar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Email<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-embedded-input-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-icon</span> <span class="hljs-attr">vclPrepend</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">"fas:envelope"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"email"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Email of the hero"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-embedded-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Email is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"email"</span>&gt;</span>Invalid Email address<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Password<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-password-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">vclInput</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Enter password"</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-password-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"required"</span>&gt;</span>Password is required<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">vclFormControlLabel</span>&gt;</span>Select perks<span class="hljs-tag">&lt;<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">vcl-required</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Select two perks"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list</span> <span class="hljs-attr">formControlName</span>=<span class="hljs-string">"perks"</span>  <span class="hljs-attr">selectionMode</span>=<span class="hljs-string">"multiple"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'snakeeater\'"</span>&gt;</span>\n          Snake Eater\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>It gives you a 25% increase to your poison resistance.\t<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'swiftlearner\'"</span>&gt;</span>\n          Swift Learner\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>Swift Learner\tWhenever you gain experience, you\'ll receive 5% more experience per level of the perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'toughness\'"</span>&gt;</span>\n          Toughness\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>It adds 10% to your general damage resistance per level.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">vcl-select-list-item</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"\'explorer\'"</span>&gt;</span>\n          Explorer\n          <span class="hljs-tag">&lt;<span class="hljs-name">vcl-sub-label</span>&gt;</span>You\'ll get more random encounters with this perk.<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-sub-label</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list-item</span>&gt;</span> \n      <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select-list</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">vcl-hint-error</span> <span class="hljs-attr">error</span>=<span class="hljs-string">"perks"</span>&gt;</span>You must select two perks<span class="hljs-tag">&lt;/<span class="hljs-name">vcl-hint-error</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">vcl-form-control-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"loose-button-group"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"emphasized"</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">vcl-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"onReset()"</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"value"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>Form<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>status: {{ form.status }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>valid: {{ form.valid }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>dirty: {{ form.dirty }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>submitted: {{ form.submitted }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>touched: {{ form.touched }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>pristine: {{ form.pristine }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>errors: {{ form.errors | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>value: {{ form.value | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n'}}]);